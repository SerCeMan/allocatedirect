[2020-11-07 08:06:54] bench.sh: INFO: starting me.serce.BufferAccessBenchmark.putLong
# JMH version: 1.25.2
# VM version: JDK 13.0.4, OpenJDK 64-Bit Server VM, 13.0.4+8-MTS
# VM invoker: /usr/lib/jvm/zulu-13-amd64/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:PrintAssemblyOptions=intel -XX:CompileCommand=print,*BufferAccessBenchmark.putLong*
# Warmup: 1 iterations, 10 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: me.serce.BufferAccessBenchmark.putLong
# Parameters: (bufferType = direct)

# Run progress: 0.00% complete, ETA 00:02:00
# Fork: 1 of 1
CompileCommand: print *BufferAccessOBpeenncJhDmKa r6k4.-pBuittL oSnegr*v
er VM warning: printing of assembly code is enabled; turning on DebugNonSafepoints to gain additional output
# Warmup Iteration   1: 
============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     313  498 %     3       me.serce.BufferAccessBenchmark::putLong @ 2 (28 bytes)
 total in heap  [0x00007f2210dd1b90,0x00007f2210dd21d0] = 1600
 relocation     [0x00007f2210dd1cf0,0x00007f2210dd1d38] = 72
 main code      [0x00007f2210dd1d40,0x00007f2210dd1fe0] = 672
 stub code      [0x00007f2210dd1fe0,0x00007f2210dd2020] = 64
 oops           [0x00007f2210dd2020,0x00007f2210dd2028] = 8
 metadata       [0x00007f2210dd2028,0x00007f2210dd2030] = 8
 scopes data    [0x00007f2210dd2030,0x00007f2210dd20a0] = 112
 scopes pcs     [0x00007f2210dd20a0,0x00007f2210dd21b0] = 272
 dependencies   [0x00007f2210dd21b0,0x00007f2210dd21b8] = 8
 nul chk table  [0x00007f2210dd21b8,0x00007f2210dd21d0] = 24

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f2209723c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f2210dd1d40:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f2210dd1d44:   shl    r10,0x3
  0x00007f2210dd1d48:   movabs r12,0x800000000
  0x00007f2210dd1d52:   add    r10,r12
  0x00007f2210dd1d55:   xor    r12,r12
  0x00007f2210dd1d58:   cmp    r10,rax
  0x00007f2210dd1d5b:   jne    0x00007f22107cd580           ;   {runtime_call ic_miss_stub}
  0x00007f2210dd1d61:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f2210dd1d6c:   data16 data16 xchg ax,ax
  0x00007f2210dd1d70:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f2210dd1d7b:   data16 data16 xchg ax,ax
  0x00007f2210dd1d7f:   nop
[Verified Entry Point]
  0x00007f2210dd1d80:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f2210dd1d87:   push   rbp
  0x00007f2210dd1d88:   sub    rsp,0x50
  0x00007f2210dd1d8c:   movabs rdi,0x7f220975c200           ;   {metadata(method data for {method} {0x00007f2209723c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f2210dd1d96:   mov    ebx,DWORD PTR [rdi+0x13c]
  0x00007f2210dd1d9c:   add    ebx,0x8
  0x00007f2210dd1d9f:   mov    DWORD PTR [rdi+0x13c],ebx
  0x00007f2210dd1da5:   and    ebx,0x1ff8
  0x00007f2210dd1dab:   cmp    ebx,0x0
  0x00007f2210dd1dae:   je     0x00007f2210dd1f59           ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@0 (line 64)
  0x00007f2210dd1db4:   mov    edi,0x0
  0x00007f2210dd1db9:   jmp    0x00007f2210dd1ed9           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
  0x00007f2210dd1dbe:   xchg   ax,ax
  0x00007f2210dd1dc0:   mov    DWORD PTR [rsp+0x2c],edi
  0x00007f2210dd1dc4:   mov    ebx,DWORD PTR [rsi+0x18]     ; implicit exception: dispatches to 0x00007f2210dd1f7a
                                                            ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f2210dd1dc7:   mov    rcx,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007f2210dd1dcb:   cmp    rax,QWORD PTR [rbx]          ; implicit exception: dispatches to 0x00007f2210dd1f7f
  0x00007f2210dd1dce:   mov    rdx,rbx
  0x00007f2210dd1dd1:   movabs rax,0x7f220975c200           ;   {metadata(method data for {method} {0x00007f2209723c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f2210dd1ddb:   mov    edx,DWORD PTR [rdx+0x8]
  0x00007f2210dd1dde:   shl    rdx,0x3
  0x00007f2210dd1de2:   movabs r12,0x800000000
  0x00007f2210dd1dec:   add    rdx,r12
  0x00007f2210dd1def:   xor    r12,r12
  0x00007f2210dd1df2:   cmp    rdx,QWORD PTR [rax+0x1b0]
  0x00007f2210dd1df9:   jne    0x00007f2210dd1e08
  0x00007f2210dd1dfb:   add    QWORD PTR [rax+0x1b8],0x1
  0x00007f2210dd1e03:   jmp    0x00007f2210dd1e6e
  0x00007f2210dd1e08:   cmp    rdx,QWORD PTR [rax+0x1c0]
  0x00007f2210dd1e0f:   jne    0x00007f2210dd1e1e
  0x00007f2210dd1e11:   add    QWORD PTR [rax+0x1c8],0x1
  0x00007f2210dd1e19:   jmp    0x00007f2210dd1e6e
  0x00007f2210dd1e1e:   cmp    QWORD PTR [rax+0x1b0],0x0
  0x00007f2210dd1e29:   jne    0x00007f2210dd1e42
  0x00007f2210dd1e2b:   mov    QWORD PTR [rax+0x1b0],rdx
  0x00007f2210dd1e32:   mov    QWORD PTR [rax+0x1b8],0x1
  0x00007f2210dd1e3d:   jmp    0x00007f2210dd1e6e
  0x00007f2210dd1e42:   cmp    QWORD PTR [rax+0x1c0],0x0
  0x00007f2210dd1e4d:   jne    0x00007f2210dd1e66
  0x00007f2210dd1e4f:   mov    QWORD PTR [rax+0x1c0],rdx
  0x00007f2210dd1e56:   mov    QWORD PTR [rax+0x1c8],0x1
  0x00007f2210dd1e61:   jmp    0x00007f2210dd1e6e
  0x00007f2210dd1e66:   add    QWORD PTR [rax+0x1a0],0x1
  0x00007f2210dd1e6e:   mov    edx,0x0
  0x00007f2210dd1e73:   mov    QWORD PTR [rsp+0x38],rsi
  0x00007f2210dd1e78:   mov    rsi,rbx                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2210dd1e7b:   xchg   ax,ax
  0x00007f2210dd1e7d:   movabs rax,0x80015b098
  0x00007f2210dd1e87:   call   0x00007f2218273680           ; ImmutableOopMap {[56]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {virtual_call}
  0x00007f2210dd1e8c:   mov    edi,DWORD PTR [rsp+0x2c]
  0x00007f2210dd1e90:   inc    edi
  0x00007f2210dd1e92:   movabs rsi,0x7f220975c200           ;   {metadata(method data for {method} {0x00007f2209723c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f2210dd1e9c:   mov    ebx,DWORD PTR [rsi+0x140]
  0x00007f2210dd1ea2:   add    ebx,0x8
  0x00007f2210dd1ea5:   mov    DWORD PTR [rsi+0x140],ebx
  0x00007f2210dd1eab:   and    ebx,0xfff8
  0x00007f2210dd1eb1:   cmp    ebx,0x0
  0x00007f2210dd1eb4:   je     0x00007f2210dd1f84           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007f2210dd1eba:   mov    r10,QWORD PTR [r15+0x108]    ; ImmutableOopMap {[56]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007f2210dd1ec1:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00007f2210dd1ec4:   movabs rsi,0x7f220975c200           ;   {metadata(method data for {method} {0x00007f2209723c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f2210dd1ece:   inc    DWORD PTR [rsi+0x1d8]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007f2210dd1ed4:   mov    rsi,QWORD PTR [rsp+0x38]
  0x00007f2210dd1ed9:   cmp    edi,0x400000
  0x00007f2210dd1edf:   movabs rdx,0x7f220975c200           ;   {metadata(method data for {method} {0x00007f2209723c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f2210dd1ee9:   movabs rcx,0x190
  0x00007f2210dd1ef3:   jl     0x00007f2210dd1f03
  0x00007f2210dd1ef9:   movabs rcx,0x180
  0x00007f2210dd1f03:   mov    rbx,QWORD PTR [rdx+rcx*1]
  0x00007f2210dd1f07:   lea    rbx,[rbx+0x1]
  0x00007f2210dd1f0b:   mov    QWORD PTR [rdx+rcx*1],rbx
  0x00007f2210dd1f0f:   jl     0x00007f2210dd1dc0           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007f2210dd1f15:   add    rsp,0x50
  0x00007f2210dd1f19:   pop    rbp
  0x00007f2210dd1f1a:   mov    r10,QWORD PTR [r15+0x108]
  0x00007f2210dd1f21:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f2210dd1f24:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@27 (line 67)
  0x00007f2210dd1f25:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f2210dd1f2c:   push   rbp
  0x00007f2210dd1f2d:   sub    rsp,0x50
  0x00007f2210dd1f31:   mov    rbx,QWORD PTR [rsi+0x10]
  0x00007f2210dd1f35:   mov    eax,DWORD PTR [rsi]
  0x00007f2210dd1f37:   mov    rdi,rsi
  0x00007f2210dd1f3a:   mov    QWORD PTR [rsp+0x30],rbx
  0x00007f2210dd1f3f:   mov    DWORD PTR [rsp+0x28],eax
  0x00007f2210dd1f43:   call   0x00007f222deb6b80           ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x00007f2210dd1f48:   mov    eax,DWORD PTR [rsp+0x28]
  0x00007f2210dd1f4c:   mov    rdi,rax
  0x00007f2210dd1f4f:   mov    rbx,QWORD PTR [rsp+0x30]
  0x00007f2210dd1f54:   mov    rsi,rbx
  0x00007f2210dd1f57:   jmp    0x00007f2210dd1ed9
  0x00007f2210dd1f59:   movabs r10,0x7f2209723c58           ;   {metadata({method} {0x00007f2209723c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f2210dd1f63:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f2210dd1f68:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f2210dd1f70:   call   0x00007f2210881f80           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f2210dd1f75:   jmp    0x00007f2210dd1db4
  0x00007f2210dd1f7a:   call   0x00007f22107eb9a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*getfield buffer {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@9 (line 65)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f2210dd1f7f:   call   0x00007f22107eb9a0           ; ImmutableOopMap {rsi=Oop rbx=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f2210dd1f84:   movabs r10,0x7f2209723c58           ;   {metadata({method} {0x00007f2209723c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f2210dd1f8e:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f2210dd1f93:   mov    QWORD PTR [rsp],0x18
  0x00007f2210dd1f9b:   call   0x00007f2210881f80           ; ImmutableOopMap {[56]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@24 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f2210dd1fa0:   jmp    0x00007f2210dd1eba
  0x00007f2210dd1fa5:   nop
  0x00007f2210dd1fa6:   nop
  0x00007f2210dd1fa7:   mov    rax,QWORD PTR [r15+0x3f0]
  0x00007f2210dd1fae:   movabs r10,0x0
  0x00007f2210dd1fb8:   mov    QWORD PTR [r15+0x3f0],r10
  0x00007f2210dd1fbf:   movabs r10,0x0
  0x00007f2210dd1fc9:   mov    QWORD PTR [r15+0x3f8],r10
  0x00007f2210dd1fd0:   add    rsp,0x50
  0x00007f2210dd1fd4:   pop    rbp
  0x00007f2210dd1fd5:   jmp    0x00007f22107ecb80           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f2210dd1fda:   hlt    
  0x00007f2210dd1fdb:   hlt    
  0x00007f2210dd1fdc:   hlt    
  0x00007f2210dd1fdd:   hlt    
  0x00007f2210dd1fde:   hlt    
  0x00007f2210dd1fdf:   hlt    
[Stub Code]
  0x00007f2210dd1fe0:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x00007f2210dd1fe5:   movabs rbx,0x0                      ;   {static_stub}
  0x00007f2210dd1fef:   jmp    0x00007f2210dd1fef           ;   {runtime_call}
[Exception Handler]
  0x00007f2210dd1ff4:   call   0x00007f221087d180           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f2210dd1ff9:   movabs rdi,0x7f222e1d8d72           ;   {external_word}
  0x00007f2210dd2003:   and    rsp,0xfffffffffffffff0
  0x00007f2210dd2007:   call   0x00007f222dc98880           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f2210dd200c:   hlt    
[Deopt Handler Code]
  0x00007f2210dd200d:   movabs r10,0x7f2210dd200d           ;   {section_word}
  0x00007f2210dd2017:   push   r10
  0x00007f2210dd2019:   jmp    0x00007f22107cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007f2210dd201e:   hlt    
  0x00007f2210dd201f:   hlt    
--------------------------------------------------------------------------------

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     325  499       3       me.serce.BufferAccessBenchmark::putLong (28 bytes)
 total in heap  [0x00007f2210dd2210,0x00007f2210dd2800] = 1520
 relocation     [0x00007f2210dd2370,0x00007f2210dd23b8] = 72
 main code      [0x00007f2210dd23c0,0x00007f2210dd2640] = 640
 stub code      [0x00007f2210dd2640,0x00007f2210dd2680] = 64
 oops           [0x00007f2210dd2680,0x00007f2210dd2688] = 8
 metadata       [0x00007f2210dd2688,0x00007f2210dd2690] = 8
 scopes data    [0x00007f2210dd2690,0x00007f2210dd26f8] = 104
 scopes pcs     [0x00007f2210dd26f8,0x00007f2210dd27e8] = 240
 dependencies   [0x00007f2210dd27e8,0x00007f2210dd27f0] = 8
 nul chk table  [0x00007f2210dd27f0,0x00007f2210dd2800] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f2209723c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  # this:     rsi:rsi   = 'me/serce/BufferAccessBenchmark'
  # parm0:    rdx:rdx   = 'org/openjdk/jmh/infra/Blackhole'
  #           [sp+0x50]  (sp of caller)
  0x00007f2210dd23c0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f2210dd23c4:   shl    r10,0x3
  0x00007f2210dd23c8:   movabs r12,0x800000000
  0x00007f2210dd23d2:   add    r10,r12
  0x00007f2210dd23d5:   xor    r12,r12
  0x00007f2210dd23d8:   cmp    r10,rax
  0x00007f2210dd23db:   jne    0x00007f22107cd580           ;   {runtime_call ic_miss_stub}
  0x00007f2210dd23e1:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f2210dd23ec:   data16 data16 xchg ax,ax
  0x00007f2210dd23f0:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f2210dd23fb:   data16 data16 xchg ax,ax
  0x00007f2210dd23ff:   nop
[Verified Entry Point]
  0x00007f2210dd2400:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f2210dd2407:   push   rbp
  0x00007f2210dd2408:   sub    rsp,0x40
  0x00007f2210dd240c:   mov    QWORD PTR [rsp+0x30],rsi
  0x00007f2210dd2411:   movabs rcx,0x7f220975c200           ;   {metadata(method data for {method} {0x00007f2209723c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f2210dd241b:   mov    edi,DWORD PTR [rcx+0x13c]
  0x00007f2210dd2421:   add    edi,0x8
  0x00007f2210dd2424:   mov    DWORD PTR [rcx+0x13c],edi
  0x00007f2210dd242a:   and    edi,0x1ff8
  0x00007f2210dd2430:   cmp    edi,0x0
  0x00007f2210dd2433:   je     0x00007f2210dd25ad           ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@0 (line 64)
  0x00007f2210dd2439:   mov    edi,0x0
  0x00007f2210dd243e:   jmp    0x00007f2210dd2561           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
  0x00007f2210dd2443:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f2210dd2448:   mov    DWORD PTR [rsp+0x28],edi
  0x00007f2210dd244c:   mov    ebx,DWORD PTR [rsi+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f2210dd244f:   mov    rcx,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007f2210dd2453:   cmp    rax,QWORD PTR [rbx]          ; implicit exception: dispatches to 0x00007f2210dd25ce
  0x00007f2210dd2456:   mov    rdx,rbx
  0x00007f2210dd2459:   movabs rax,0x7f220975c200           ;   {metadata(method data for {method} {0x00007f2209723c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f2210dd2463:   mov    edx,DWORD PTR [rdx+0x8]
  0x00007f2210dd2466:   shl    rdx,0x3
  0x00007f2210dd246a:   movabs r12,0x800000000
  0x00007f2210dd2474:   add    rdx,r12
  0x00007f2210dd2477:   xor    r12,r12
  0x00007f2210dd247a:   cmp    rdx,QWORD PTR [rax+0x1b0]
  0x00007f2210dd2481:   jne    0x00007f2210dd2490
  0x00007f2210dd2483:   add    QWORD PTR [rax+0x1b8],0x1
  0x00007f2210dd248b:   jmp    0x00007f2210dd24f6
  0x00007f2210dd2490:   cmp    rdx,QWORD PTR [rax+0x1c0]
  0x00007f2210dd2497:   jne    0x00007f2210dd24a6
  0x00007f2210dd2499:   add    QWORD PTR [rax+0x1c8],0x1
  0x00007f2210dd24a1:   jmp    0x00007f2210dd24f6
  0x00007f2210dd24a6:   cmp    QWORD PTR [rax+0x1b0],0x0
  0x00007f2210dd24b1:   jne    0x00007f2210dd24ca
  0x00007f2210dd24b3:   mov    QWORD PTR [rax+0x1b0],rdx
  0x00007f2210dd24ba:   mov    QWORD PTR [rax+0x1b8],0x1
  0x00007f2210dd24c5:   jmp    0x00007f2210dd24f6
  0x00007f2210dd24ca:   cmp    QWORD PTR [rax+0x1c0],0x0
  0x00007f2210dd24d5:   jne    0x00007f2210dd24ee
  0x00007f2210dd24d7:   mov    QWORD PTR [rax+0x1c0],rdx
  0x00007f2210dd24de:   mov    QWORD PTR [rax+0x1c8],0x1
  0x00007f2210dd24e9:   jmp    0x00007f2210dd24f6
  0x00007f2210dd24ee:   add    QWORD PTR [rax+0x1a0],0x1
  0x00007f2210dd24f6:   mov    edx,0x0
  0x00007f2210dd24fb:   mov    rsi,rbx                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2210dd24fe:   nop    DWORD PTR [rax+0x0]
  0x00007f2210dd2505:   movabs rax,0xffffffffffffffff
  0x00007f2210dd250f:   call   0x00007f22107ccc80           ; ImmutableOopMap {[48]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {virtual_call}
  0x00007f2210dd2514:   mov    edi,DWORD PTR [rsp+0x28]
  0x00007f2210dd2518:   inc    edi
  0x00007f2210dd251a:   movabs rsi,0x7f220975c200           ;   {metadata(method data for {method} {0x00007f2209723c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f2210dd2524:   mov    ebx,DWORD PTR [rsi+0x140]
  0x00007f2210dd252a:   add    ebx,0x8
  0x00007f2210dd252d:   mov    DWORD PTR [rsi+0x140],ebx
  0x00007f2210dd2533:   and    ebx,0xfff8
  0x00007f2210dd2539:   cmp    ebx,0x0
  0x00007f2210dd253c:   je     0x00007f2210dd25d3           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007f2210dd2542:   mov    r10,QWORD PTR [r15+0x108]    ; ImmutableOopMap {[48]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007f2210dd2549:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00007f2210dd254c:   movabs rsi,0x7f220975c200           ;   {metadata(method data for {method} {0x00007f2209723c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f2210dd2556:   inc    DWORD PTR [rsi+0x1d8]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007f2210dd255c:   mov    rsi,QWORD PTR [rsp+0x30]
  0x00007f2210dd2561:   cmp    edi,0x400000
  0x00007f2210dd2567:   movabs rdx,0x7f220975c200           ;   {metadata(method data for {method} {0x00007f2209723c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f2210dd2571:   movabs rcx,0x190
  0x00007f2210dd257b:   jl     0x00007f2210dd258b
  0x00007f2210dd2581:   movabs rcx,0x180
  0x00007f2210dd258b:   mov    rbx,QWORD PTR [rdx+rcx*1]
  0x00007f2210dd258f:   lea    rbx,[rbx+0x1]
  0x00007f2210dd2593:   mov    QWORD PTR [rdx+rcx*1],rbx
  0x00007f2210dd2597:   jl     0x00007f2210dd2448           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007f2210dd259d:   add    rsp,0x40
  0x00007f2210dd25a1:   pop    rbp
  0x00007f2210dd25a2:   mov    r10,QWORD PTR [r15+0x108]
  0x00007f2210dd25a9:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f2210dd25ac:   ret    
  0x00007f2210dd25ad:   movabs r10,0x7f2209723c58           ;   {metadata({method} {0x00007f2209723c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f2210dd25b7:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f2210dd25bc:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f2210dd25c4:   call   0x00007f2210881f80           ; ImmutableOopMap {rsi=Oop [48]=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f2210dd25c9:   jmp    0x00007f2210dd2439
  0x00007f2210dd25ce:   call   0x00007f22107eb9a0           ; ImmutableOopMap {rsi=Oop [48]=Oop rbx=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f2210dd25d3:   movabs r10,0x7f2209723c58           ;   {metadata({method} {0x00007f2209723c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f2210dd25dd:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f2210dd25e2:   mov    QWORD PTR [rsp],0x18
  0x00007f2210dd25ea:   call   0x00007f2210881f80           ; ImmutableOopMap {[48]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@24 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f2210dd25ef:   jmp    0x00007f2210dd2542
  0x00007f2210dd25f4:   nop
  0x00007f2210dd25f5:   nop
  0x00007f2210dd25f6:   mov    rax,QWORD PTR [r15+0x3f0]
  0x00007f2210dd25fd:   movabs r10,0x0
  0x00007f2210dd2607:   mov    QWORD PTR [r15+0x3f0],r10
  0x00007f2210dd260e:   movabs r10,0x0
  0x00007f2210dd2618:   mov    QWORD PTR [r15+0x3f8],r10
  0x00007f2210dd261f:   add    rsp,0x40
  0x00007f2210dd2623:   pop    rbp
  0x00007f2210dd2624:   jmp    0x00007f22107ecb80           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f2210dd2629:   hlt    
  0x00007f2210dd262a:   hlt    
  0x00007f2210dd262b:   hlt    
  0x00007f2210dd262c:   hlt    
  0x00007f2210dd262d:   hlt    
  0x00007f2210dd262e:   hlt    
  0x00007f2210dd262f:   hlt    
  0x00007f2210dd2630:   hlt    
  0x00007f2210dd2631:   hlt    
  0x00007f2210dd2632:   hlt    
  0x00007f2210dd2633:   hlt    
  0x00007f2210dd2634:   hlt    
  0x00007f2210dd2635:   hlt    
  0x00007f2210dd2636:   hlt    
  0x00007f2210dd2637:   hlt    
  0x00007f2210dd2638:   hlt    
  0x00007f2210dd2639:   hlt    
  0x00007f2210dd263a:   hlt    
  0x00007f2210dd263b:   hlt    
  0x00007f2210dd263c:   hlt    
  0x00007f2210dd263d:   hlt    
  0x00007f2210dd263e:   hlt    
  0x00007f2210dd263f:   hlt    
[Stub Code]
  0x00007f2210dd2640:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x00007f2210dd2645:   movabs rbx,0x0                      ;   {static_stub}
  0x00007f2210dd264f:   jmp    0x00007f2210dd264f           ;   {runtime_call}
[Exception Handler]
  0x00007f2210dd2654:   call   0x00007f221087d180           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f2210dd2659:   movabs rdi,0x7f222e1d8d72           ;   {external_word}
  0x00007f2210dd2663:   and    rsp,0xfffffffffffffff0
  0x00007f2210dd2667:   call   0x00007f222dc98880           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f2210dd266c:   hlt    
[Deopt Handler Code]
  0x00007f2210dd266d:   movabs r10,0x7f2210dd266d           ;   {section_word}
  0x00007f2210dd2677:   push   r10
  0x00007f2210dd2679:   jmp    0x00007f22107cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007f2210dd267e:   hlt    
  0x00007f2210dd267f:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     343  500 %     4       me.serce.BufferAccessBenchmark::putLong @ 2 (28 bytes)
 total in heap  [0x00007f2218273a10,0x00007f2218274468] = 2648
 relocation     [0x00007f2218273b70,0x00007f2218273ba0] = 48
 main code      [0x00007f2218273ba0,0x00007f2218273e60] = 704
 stub code      [0x00007f2218273e60,0x00007f2218273e78] = 24
 oops           [0x00007f2218273e78,0x00007f2218273e88] = 16
 metadata       [0x00007f2218273e88,0x00007f2218273ec8] = 64
 scopes data    [0x00007f2218273ec8,0x00007f2218274040] = 376
 scopes pcs     [0x00007f2218274040,0x00007f2218274430] = 1008
 dependencies   [0x00007f2218274430,0x00007f2218274438] = 8
 nul chk table  [0x00007f2218274438,0x00007f2218274468] = 48

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f2209723c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f2218273ba0:   call   0x00007f222ddcd230           ;   {runtime_call os::breakpoint()}
  0x00007f2218273ba5:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f2218273bb0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f2218273bb7:   push   rbp
  0x00007f2218273bb8:   sub    rsp,0x40
  0x00007f2218273bbc:   mov    rbx,QWORD PTR [rsi+0x10]
  0x00007f2218273bc0:   mov    ebp,DWORD PTR [rsi]
  0x00007f2218273bc2:   mov    rdi,rsi
  0x00007f2218273bc5:   movabs r10,0x7f222deb6b80
  0x00007f2218273bcf:   call   r10
  0x00007f2218273bd2:   mov    r10d,DWORD PTR [rbx+0x8]     ; implicit exception: dispatches to 0x00007f2218273e40
  0x00007f2218273bd6:   shl    r10,0x3
  0x00007f2218273bda:   movabs r12,0x800000000
  0x00007f2218273be4:   add    r10,r12
  0x00007f2218273be7:   xor    r12,r12
  0x00007f2218273bea:   mov    r10,QWORD PTR [r10+0x38]
  0x00007f2218273bee:   movabs r11,0x800b73a08              ;   {metadata('me/serce/BufferAccessBenchmark')}
  0x00007f2218273bf8:   cmp    r10,r11
  0x00007f2218273bfb:   jne    0x00007f2218273e00           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
  0x00007f2218273c01:   cmp    ebp,0x400000
  0x00007f2218273c07:   jge    0x00007f2218273def           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007f2218273c0d:   mov    edi,DWORD PTR [rbx+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f2218273c10:   mov    r8,QWORD PTR [rbx+0x10]      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007f2218273c14:   mov    r9d,ebp
  0x00007f2218273c17:   inc    r9d
  0x00007f2218273c1a:   mov    r11d,DWORD PTR [rdi+0x8]     ; implicit exception: dispatches to 0x00007f2218273e33
                                                            ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f2218273c1e:   cmp    r11d,0x2b613                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f2218273c25:   jne    0x00007f2218273dac           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273c2b:   mov    r10d,DWORD PTR [rdi+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273c2f:   cmp    r10d,0x8
  0x00007f2218273c33:   jl     0x00007f2218273e10           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273c39:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273c3d:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273c42:   test   r10d,r10d
  0x00007f2218273c45:   je     0x00007f2218273e17
  0x00007f2218273c4b:   mov    r10,rdx
  0x00007f2218273c4e:   bswap  r8
  0x00007f2218273c51:   mov    QWORD PTR [r10],r8           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273c54:   mov    r8,QWORD PTR [rbx+0x10]      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007f2218273c58:   mov    edi,DWORD PTR [rbx+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f2218273c5b:   inc    ebp                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007f2218273c5d:   cmp    ebp,r9d
  0x00007f2218273c60:   jl     0x00007f2218273c1a           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007f2218273c62:   cmp    ebp,0x3fffff
  0x00007f2218273c68:   jge    0x00007f2218273d31
  0x00007f2218273c6e:   mov    r11d,0x7d0
  0x00007f2218273c74:   mov    r9d,0x3fffff
  0x00007f2218273c7a:   sub    r9d,ebp
  0x00007f2218273c7d:   cmp    r9d,r11d
  0x00007f2218273c80:   cmovg  r9d,r11d
  0x00007f2218273c84:   add    r9d,ebp
  0x00007f2218273c87:   nop    WORD PTR [rax+rax*1+0x0]     ;*invokestatic convEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273c90:   mov    ecx,DWORD PTR [rdi+0x8]      ; implicit exception: dispatches to 0x00007f2218273e33
                                                            ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f2218273c93:   cmp    ecx,0x2b613                  ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f2218273c99:   jne    0x00007f2218273d3f           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273c9f:   mov    r10d,DWORD PTR [rdi+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273ca3:   cmp    r10d,0x8
  0x00007f2218273ca7:   jl     0x00007f2218273d5c           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273cad:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273cb1:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273cb6:   test   r10d,r10d
  0x00007f2218273cb9:   je     0x00007f2218273d84
  0x00007f2218273cbf:   bswap  r8
  0x00007f2218273cc2:   mov    r10,rdx
  0x00007f2218273cc5:   mov    QWORD PTR [r10],r8           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273cc8:   mov    r10d,DWORD PTR [rbx+0x18]    ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f2218273ccc:   mov    r8,QWORD PTR [rbx+0x10]      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007f2218273cd0:   mov    esi,DWORD PTR [r10+0x8]      ; implicit exception: dispatches to 0x00007f2218273e33
  0x00007f2218273cd4:   mov    ecx,ebp
  0x00007f2218273cd6:   inc    ecx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007f2218273cd8:   mov    rdi,r10                      ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f2218273cdb:   cmp    esi,0x2b613                  ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f2218273ce1:   jne    0x00007f2218273d41           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273ce3:   mov    r10d,DWORD PTR [rdi+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273ce7:   cmp    r10d,0x8
  0x00007f2218273ceb:   jl     0x00007f2218273d5e           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273ced:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273cf1:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273cf6:   test   r10d,r10d
  0x00007f2218273cf9:   je     0x00007f2218273d86           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273cff:   mov    r10,rdx
  0x00007f2218273d02:   bswap  r8                           ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@12 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273d05:   mov    QWORD PTR [r10],r8           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273d08:   mov    r8,QWORD PTR [rbx+0x10]      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007f2218273d0c:   mov    edi,DWORD PTR [rbx+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f2218273d0f:   add    ebp,0x2                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007f2218273d12:   cmp    ebp,r9d
  0x00007f2218273d15:   jl     0x00007f2218273c90           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007f2218273d1b:   mov    r10,QWORD PTR [r15+0x108]    ; ImmutableOopMap {rbx=Oop rdi=NarrowOop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007f2218273d22:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
                                                            ;   {poll}
  0x00007f2218273d25:   cmp    ebp,0x3fffff
  0x00007f2218273d2b:   jl     0x00007f2218273c74
  0x00007f2218273d31:   cmp    ebp,0x400000
  0x00007f2218273d37:   jge    0x00007f2218273def
  0x00007f2218273d3d:   jmp    0x00007f2218273db7
  0x00007f2218273d3f:   mov    ecx,ebp
  0x00007f2218273d41:   mov    esi,0xffffffde
  0x00007f2218273d46:   mov    rbp,rbx
  0x00007f2218273d49:   mov    DWORD PTR [rsp],ecx
  0x00007f2218273d4c:   mov    QWORD PTR [rsp+0x8],rdi
  0x00007f2218273d51:   mov    QWORD PTR [rsp+0x10],r8
  0x00007f2218273d56:   nop
  0x00007f2218273d57:   call   0x00007f221078ae80           ; ImmutableOopMap {rbp=Oop [8]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f2218273d5c:   mov    ecx,ebp                      ;*synchronization entry
                                                            ; - java.nio.Buffer::checkIndex@-1 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273d5e:   mov    esi,0xffffff45
  0x00007f2218273d63:   mov    rbp,rbx
  0x00007f2218273d66:   mov    DWORD PTR [rsp],ecx
  0x00007f2218273d69:   mov    QWORD PTR [rsp+0x10],r8
  0x00007f2218273d6e:   mov    QWORD PTR [rsp+0x18],rdi
  0x00007f2218273d73:   mov    QWORD PTR [rsp+0x20],rdi
  0x00007f2218273d78:   mov    DWORD PTR [rsp+0x4],r10d
  0x00007f2218273d7d:   xchg   ax,ax
  0x00007f2218273d7f:   call   0x00007f221078ae80           ; ImmutableOopMap {rbp=Oop [24]=Oop [32]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f2218273d84:   mov    ecx,ebp                      ;*synchronization entry
                                                            ; - jdk.internal.misc.Unsafe::convEndian@-1 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273d86:   mov    esi,0xffffff45
  0x00007f2218273d8b:   mov    rbp,rbx
  0x00007f2218273d8e:   mov    DWORD PTR [rsp],ecx
  0x00007f2218273d91:   mov    QWORD PTR [rsp+0x10],rdi
  0x00007f2218273d96:   mov    QWORD PTR [rsp+0x18],rdx
  0x00007f2218273d9b:   mov    QWORD PTR [rsp+0x20],r8
  0x00007f2218273da0:   mov    DWORD PTR [rsp+0x4],r10d
  0x00007f2218273da5:   xchg   ax,ax
  0x00007f2218273da7:   call   0x00007f221078ae80           ; ImmutableOopMap {rbp=Oop [16]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.misc.Unsafe::convEndian@4 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f2218273dac:   mov    ecx,ebp
  0x00007f2218273dae:   jmp    0x00007f2218273d41
  0x00007f2218273db0:   mov    edi,DWORD PTR [rbx+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f2218273db3:   mov    r8,QWORD PTR [rbx+0x10]      ;*invokestatic convEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273db7:   mov    r11d,DWORD PTR [rdi+0x8]     ; implicit exception: dispatches to 0x00007f2218273e33
                                                            ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f2218273dbb:   cmp    r11d,0x2b613                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f2218273dc2:   jne    0x00007f2218273e1e           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273dc4:   mov    r10d,DWORD PTR [rdi+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273dc8:   cmp    r10d,0x8
  0x00007f2218273dcc:   jl     0x00007f2218273e25           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273dce:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273dd3:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273dd7:   test   r10d,r10d
  0x00007f2218273dda:   je     0x00007f2218273e2c
  0x00007f2218273ddc:   mov    r10,rdx
  0x00007f2218273ddf:   bswap  r8
  0x00007f2218273de2:   mov    QWORD PTR [r10],r8           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218273de5:   inc    ebp                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007f2218273de7:   cmp    ebp,0x400000
  0x00007f2218273ded:   jl     0x00007f2218273db0           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007f2218273def:   mov    esi,0xffffff45
  0x00007f2218273df4:   mov    QWORD PTR [rsp],rbx
  0x00007f2218273df8:   data16 xchg ax,ax
  0x00007f2218273dfb:   call   0x00007f221078ae80           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@5 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f2218273e00:   mov    esi,0xffffff8d
  0x00007f2218273e05:   mov    QWORD PTR [rsp],rbx
  0x00007f2218273e09:   xchg   ax,ax
  0x00007f2218273e0b:   call   0x00007f221078ae80           ; ImmutableOopMap {[0]=Oop }
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f2218273e10:   mov    ecx,ebp
  0x00007f2218273e12:   jmp    0x00007f2218273d5e
  0x00007f2218273e17:   mov    ecx,ebp
  0x00007f2218273e19:   jmp    0x00007f2218273d86
  0x00007f2218273e1e:   mov    ecx,ebp
  0x00007f2218273e20:   jmp    0x00007f2218273d41
  0x00007f2218273e25:   mov    ecx,ebp
  0x00007f2218273e27:   jmp    0x00007f2218273d5e
  0x00007f2218273e2c:   mov    ecx,ebp
  0x00007f2218273e2e:   jmp    0x00007f2218273d86
  0x00007f2218273e33:   mov    esi,0xfffffff6
  0x00007f2218273e38:   mov    rbp,r8
  0x00007f2218273e3b:   call   0x00007f221078ae80           ; ImmutableOopMap {}
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f2218273e40:   mov    esi,0xffffff76
  0x00007f2218273e45:   xchg   ax,ax
  0x00007f2218273e47:   call   0x00007f221078ae80           ; ImmutableOopMap {}
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f2218273e4c:   hlt    
  0x00007f2218273e4d:   hlt    
  0x00007f2218273e4e:   hlt    
  0x00007f2218273e4f:   hlt    
  0x00007f2218273e50:   hlt    
  0x00007f2218273e51:   hlt    
  0x00007f2218273e52:   hlt    
  0x00007f2218273e53:   hlt    
  0x00007f2218273e54:   hlt    
  0x00007f2218273e55:   hlt    
  0x00007f2218273e56:   hlt    
  0x00007f2218273e57:   hlt    
  0x00007f2218273e58:   hlt    
  0x00007f2218273e59:   hlt    
  0x00007f2218273e5a:   hlt    
  0x00007f2218273e5b:   hlt    
  0x00007f2218273e5c:   hlt    
  0x00007f2218273e5d:   hlt    
  0x00007f2218273e5e:   hlt    
  0x00007f2218273e5f:   hlt    
[Exception Handler]
  0x00007f2218273e60:   jmp    0x00007f22107eb300           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f2218273e65:   call   0x00007f2218273e6a
  0x00007f2218273e6a:   sub    QWORD PTR [rsp],0x5
  0x00007f2218273e6f:   jmp    0x00007f22107cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007f2218273e74:   hlt    
  0x00007f2218273e75:   hlt    
  0x00007f2218273e76:   hlt    
  0x00007f2218273e77:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     367  501 %     4       me.serce.BufferAccessBenchmark::putLong @ 2 (28 bytes)
 total in heap  [0x00007f2218274490,0x00007f2218274ed8] = 2632
 relocation     [0x00007f22182745f0,0x00007f2218274620] = 48
 main code      [0x00007f2218274620,0x00007f22182748e0] = 704
 stub code      [0x00007f22182748e0,0x00007f22182748f8] = 24
 oops           [0x00007f22182748f8,0x00007f2218274908] = 16
 metadata       [0x00007f2218274908,0x00007f2218274948] = 64
 scopes data    [0x00007f2218274948,0x00007f2218274ab0] = 360
 scopes pcs     [0x00007f2218274ab0,0x00007f2218274ea0] = 1008
 dependencies   [0x00007f2218274ea0,0x00007f2218274ea8] = 8
 nul chk table  [0x00007f2218274ea8,0x00007f2218274ed8] = 48

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f2209723c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f2218274620:   call   0x00007f222ddcd230           ;   {runtime_call os::breakpoint()}
  0x00007f2218274625:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f2218274630:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f2218274637:   push   rbp
  0x00007f2218274638:   sub    rsp,0x40
  0x00007f221827463c:   mov    rbx,QWORD PTR [rsi+0x10]
  0x00007f2218274640:   mov    ebp,DWORD PTR [rsi]
  0x00007f2218274642:   mov    rdi,rsi
  0x00007f2218274645:   movabs r10,0x7f222deb6b80
  0x00007f221827464f:   call   r10
  0x00007f2218274652:   mov    r10d,DWORD PTR [rbx+0x8]     ; implicit exception: dispatches to 0x00007f22182748c8
  0x00007f2218274656:   shl    r10,0x3
  0x00007f221827465a:   movabs r12,0x800000000
  0x00007f2218274664:   add    r10,r12
  0x00007f2218274667:   xor    r12,r12
  0x00007f221827466a:   mov    r10,QWORD PTR [r10+0x38]
  0x00007f221827466e:   movabs r11,0x800b73a08              ;   {metadata('me/serce/BufferAccessBenchmark')}
  0x00007f2218274678:   cmp    r10,r11
  0x00007f221827467b:   jne    0x00007f2218274894
  0x00007f2218274681:   cmp    ebp,0x400000
  0x00007f2218274687:   jge    0x00007f2218274811           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
  0x00007f221827468d:   mov    edi,DWORD PTR [rbx+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f2218274690:   mov    r8,QWORD PTR [rbx+0x10]      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007f2218274694:   mov    r9d,ebp
  0x00007f2218274697:   inc    r9d
  0x00007f221827469a:   mov    r11d,DWORD PTR [rdi+0x8]     ; implicit exception: dispatches to 0x00007f22182748bb
                                                            ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f221827469e:   cmp    r11d,0x2b613                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f22182746a5:   jne    0x00007f2218274890           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182746ab:   mov    r10d,DWORD PTR [rdi+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182746af:   cmp    r10d,0x8
  0x00007f22182746b3:   jl     0x00007f22182748a4           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182746b9:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182746bd:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182746c2:   test   r10d,r10d
  0x00007f22182746c5:   je     0x00007f22182748a8
  0x00007f22182746cb:   mov    r10,rdx
  0x00007f22182746ce:   bswap  r8
  0x00007f22182746d1:   mov    QWORD PTR [r10],r8           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182746d4:   mov    r8,QWORD PTR [rbx+0x10]      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007f22182746d8:   mov    edi,DWORD PTR [rbx+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f22182746db:   inc    ebp                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007f22182746dd:   cmp    ebp,r9d
  0x00007f22182746e0:   jl     0x00007f221827469a           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007f22182746e2:   cmp    ebp,0x3fffff
  0x00007f22182746e8:   jge    0x00007f22182747b9
  0x00007f22182746ee:   mov    r11d,0x7d0
  0x00007f22182746f4:   mov    r9d,0x3fffff
  0x00007f22182746fa:   sub    r9d,ebp
  0x00007f22182746fd:   cmp    r9d,r11d
  0x00007f2218274700:   cmovg  r9d,r11d
  0x00007f2218274704:   add    r9d,ebp
  0x00007f2218274707:   nop    WORD PTR [rax+rax*1+0x0]     ;*invokestatic convEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218274710:   mov    ecx,DWORD PTR [rdi+0x8]      ; implicit exception: dispatches to 0x00007f22182748bb
                                                            ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f2218274713:   cmp    ecx,0x2b613                  ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f2218274719:   jne    0x00007f2218274821           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f221827471f:   mov    r10d,DWORD PTR [rdi+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218274723:   cmp    r10d,0x8
  0x00007f2218274727:   jl     0x00007f2218274840           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f221827472d:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218274731:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218274736:   test   r10d,r10d
  0x00007f2218274739:   je     0x00007f2218274868
  0x00007f221827473f:   bswap  r8
  0x00007f2218274742:   mov    r10,rdx
  0x00007f2218274745:   mov    QWORD PTR [r10],r8           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218274748:   mov    r10d,DWORD PTR [rbx+0x18]    ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f221827474c:   mov    r8,QWORD PTR [rbx+0x10]      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007f2218274750:   mov    esi,DWORD PTR [r10+0x8]      ; implicit exception: dispatches to 0x00007f22182748bb
  0x00007f2218274754:   mov    ecx,ebp
  0x00007f2218274756:   inc    ecx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007f2218274758:   mov    rdi,r10                      ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f221827475b:   cmp    esi,0x2b613                  ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f2218274761:   jne    0x00007f2218274823           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218274767:   mov    r10d,DWORD PTR [rdi+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f221827476b:   cmp    r10d,0x8
  0x00007f221827476f:   jl     0x00007f2218274842           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218274775:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218274779:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f221827477e:   test   r10d,r10d
  0x00007f2218274781:   je     0x00007f221827486a           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218274787:   mov    r10,rdx
  0x00007f221827478a:   bswap  r8                           ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@12 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f221827478d:   mov    QWORD PTR [r10],r8           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218274790:   mov    r8,QWORD PTR [rbx+0x10]      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007f2218274794:   mov    edi,DWORD PTR [rbx+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f2218274797:   add    ebp,0x2                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007f221827479a:   cmp    ebp,r9d
  0x00007f221827479d:   jl     0x00007f2218274710           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007f22182747a3:   mov    r10,QWORD PTR [r15+0x108]    ; ImmutableOopMap {rbx=Oop rdi=NarrowOop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007f22182747aa:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
                                                            ;   {poll}
  0x00007f22182747ad:   cmp    ebp,0x3fffff
  0x00007f22182747b3:   jl     0x00007f22182746f4
  0x00007f22182747b9:   cmp    ebp,0x400000
  0x00007f22182747bf:   jge    0x00007f2218274811
  0x00007f22182747c1:   data16 xchg ax,ax                   ;*invokestatic convEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182747c4:   mov    r11d,DWORD PTR [rdi+0x8]     ; implicit exception: dispatches to 0x00007f22182748bb
                                                            ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f22182747c8:   cmp    r11d,0x2b613                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f22182747cf:   jne    0x00007f22182748ac           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182747d5:   mov    r10d,DWORD PTR [rdi+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182747d9:   cmp    r10d,0x8
  0x00007f22182747dd:   jl     0x00007f22182748b3           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182747e3:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182747e7:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182747ec:   test   r10d,r10d
  0x00007f22182747ef:   je     0x00007f22182748b7
  0x00007f22182747f5:   mov    r10,rdx
  0x00007f22182747f8:   bswap  r8
  0x00007f22182747fb:   mov    QWORD PTR [r10],r8           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182747fe:   inc    ebp                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007f2218274800:   cmp    ebp,0x400000
  0x00007f2218274806:   jge    0x00007f2218274811           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007f2218274808:   mov    edi,DWORD PTR [rbx+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f221827480b:   mov    r8,QWORD PTR [rbx+0x10]      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007f221827480f:   jmp    0x00007f22182747c4           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
  0x00007f2218274811:   add    rsp,0x40
  0x00007f2218274815:   pop    rbp
  0x00007f2218274816:   mov    r10,QWORD PTR [r15+0x108]
  0x00007f221827481d:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f2218274820:   ret    
  0x00007f2218274821:   mov    ecx,ebp
  0x00007f2218274823:   mov    esi,0xffffffde
  0x00007f2218274828:   mov    rbp,rbx
  0x00007f221827482b:   mov    DWORD PTR [rsp],ecx
  0x00007f221827482e:   mov    QWORD PTR [rsp+0x8],rdi
  0x00007f2218274833:   mov    QWORD PTR [rsp+0x10],r8
  0x00007f2218274838:   data16 xchg ax,ax
  0x00007f221827483b:   call   0x00007f221078ae80           ; ImmutableOopMap {rbp=Oop [8]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f2218274840:   mov    ecx,ebp                      ;*synchronization entry
                                                            ; - java.nio.Buffer::checkIndex@-1 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218274842:   mov    esi,0xffffff45
  0x00007f2218274847:   mov    rbp,rbx
  0x00007f221827484a:   mov    DWORD PTR [rsp],ecx
  0x00007f221827484d:   mov    QWORD PTR [rsp+0x10],r8
  0x00007f2218274852:   mov    QWORD PTR [rsp+0x18],rdi
  0x00007f2218274857:   mov    QWORD PTR [rsp+0x20],rdi
  0x00007f221827485c:   mov    DWORD PTR [rsp+0x4],r10d
  0x00007f2218274861:   xchg   ax,ax
  0x00007f2218274863:   call   0x00007f221078ae80           ; ImmutableOopMap {rbp=Oop [24]=Oop [32]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f2218274868:   mov    ecx,ebp                      ;*synchronization entry
                                                            ; - jdk.internal.misc.Unsafe::convEndian@-1 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f221827486a:   mov    esi,0xffffff45
  0x00007f221827486f:   mov    rbp,rbx
  0x00007f2218274872:   mov    DWORD PTR [rsp],ecx
  0x00007f2218274875:   mov    QWORD PTR [rsp+0x10],rdi
  0x00007f221827487a:   mov    QWORD PTR [rsp+0x18],rdx
  0x00007f221827487f:   mov    QWORD PTR [rsp+0x20],r8
  0x00007f2218274884:   mov    DWORD PTR [rsp+0x4],r10d
  0x00007f2218274889:   xchg   ax,ax
  0x00007f221827488b:   call   0x00007f221078ae80           ; ImmutableOopMap {rbp=Oop [16]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.misc.Unsafe::convEndian@4 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f2218274890:   mov    ecx,ebp
  0x00007f2218274892:   jmp    0x00007f2218274823
  0x00007f2218274894:   mov    esi,0xffffff8d
  0x00007f2218274899:   mov    QWORD PTR [rsp],rbx
  0x00007f221827489d:   xchg   ax,ax
  0x00007f221827489f:   call   0x00007f221078ae80           ; ImmutableOopMap {[0]=Oop }
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f22182748a4:   mov    ecx,ebp
  0x00007f22182748a6:   jmp    0x00007f2218274842
  0x00007f22182748a8:   mov    ecx,ebp
  0x00007f22182748aa:   jmp    0x00007f221827486a
  0x00007f22182748ac:   mov    ecx,ebp
  0x00007f22182748ae:   jmp    0x00007f2218274823
  0x00007f22182748b3:   mov    ecx,ebp
  0x00007f22182748b5:   jmp    0x00007f2218274842
  0x00007f22182748b7:   mov    ecx,ebp
  0x00007f22182748b9:   jmp    0x00007f221827486a
  0x00007f22182748bb:   mov    esi,0xfffffff6
  0x00007f22182748c0:   mov    rbp,r8
  0x00007f22182748c3:   call   0x00007f221078ae80           ; ImmutableOopMap {}
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f22182748c8:   mov    esi,0xffffffbe
  0x00007f22182748cd:   xchg   ax,ax
  0x00007f22182748cf:   call   0x00007f221078ae80           ; ImmutableOopMap {}
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f22182748d4:   hlt    
  0x00007f22182748d5:   hlt    
  0x00007f22182748d6:   hlt    
  0x00007f22182748d7:   hlt    
  0x00007f22182748d8:   hlt    
  0x00007f22182748d9:   hlt    
  0x00007f22182748da:   hlt    
  0x00007f22182748db:   hlt    
  0x00007f22182748dc:   hlt    
  0x00007f22182748dd:   hlt    
  0x00007f22182748de:   hlt    
  0x00007f22182748df:   hlt    
[Exception Handler]
  0x00007f22182748e0:   jmp    0x00007f22107eb300           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f22182748e5:   call   0x00007f22182748ea
  0x00007f22182748ea:   sub    QWORD PTR [rsp],0x5
  0x00007f22182748ef:   jmp    0x00007f22107cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007f22182748f4:   hlt    
  0x00007f22182748f5:   hlt    
  0x00007f22182748f6:   hlt    
  0x00007f22182748f7:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     394  502       4       me.serce.BufferAccessBenchmark::putLong (28 bytes)
 total in heap  [0x00007f2218274f10,0x00007f2218275870] = 2400
 relocation     [0x00007f2218275070,0x00007f2218275098] = 40
 main code      [0x00007f22182750a0,0x00007f22182752e0] = 576
 stub code      [0x00007f22182752e0,0x00007f22182752f8] = 24
 oops           [0x00007f22182752f8,0x00007f2218275308] = 16
 metadata       [0x00007f2218275308,0x00007f2218275348] = 64
 scopes data    [0x00007f2218275348,0x00007f2218275490] = 328
 scopes pcs     [0x00007f2218275490,0x00007f2218275840] = 944
 dependencies   [0x00007f2218275840,0x00007f2218275848] = 8
 nul chk table  [0x00007f2218275848,0x00007f2218275870] = 40

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f2209723c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  # this:     rsi:rsi   = 'me/serce/BufferAccessBenchmark'
  # parm0:    rdx:rdx   = 'org/openjdk/jmh/infra/Blackhole'
  #           [sp+0x50]  (sp of caller)
  0x00007f22182750a0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f22182750a4:   shl    r10,0x3
  0x00007f22182750a8:   movabs r12,0x800000000
  0x00007f22182750b2:   add    r10,r12
  0x00007f22182750b5:   xor    r12,r12
  0x00007f22182750b8:   cmp    rax,r10
  0x00007f22182750bb:   jne    0x00007f22107cd580           ;   {runtime_call ic_miss_stub}
  0x00007f22182750c1:   data16 xchg ax,ax
  0x00007f22182750c4:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f22182750cc:   data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f22182750d0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f22182750d7:   push   rbp
  0x00007f22182750d8:   sub    rsp,0x40                     ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
  0x00007f22182750dc:   mov    rax,rsi
  0x00007f22182750df:   mov    rcx,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007f22182750e3:   mov    r11d,DWORD PTR [rsi+0x18]
  0x00007f22182750e7:   mov    r8d,DWORD PTR [r11+0x8]      ; implicit exception: dispatches to 0x00007f22182752cb
  0x00007f22182750eb:   mov    rbx,r11                      ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f22182750ee:   xor    r10d,r10d
  0x00007f22182750f1:   cmp    r8d,0x2b613                  ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f22182750f8:   jne    0x00007f2218275250           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182750fe:   mov    edi,DWORD PTR [rbx+0x1c]     ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218275101:   cmp    edi,0x8
  0x00007f2218275104:   jl     0x00007f221827526f           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f221827510a:   mov    rdx,QWORD PTR [rbx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f221827510e:   movzx  edi,BYTE PTR [rbx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218275112:   test   edi,edi
  0x00007f2218275114:   je     0x00007f2218275297           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f221827511a:   bswap  rcx                          ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@12 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f221827511d:   mov    r10,rdx
  0x00007f2218275120:   mov    QWORD PTR [r10],rcx          ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218275123:   mov    r11d,0x7d0
  0x00007f2218275129:   mov    r9d,0x1
  0x00007f221827512f:   mov    r8d,0x3fffff
  0x00007f2218275135:   sub    r8d,r9d
  0x00007f2218275138:   cmp    r8d,r11d
  0x00007f221827513b:   cmovg  r8d,r11d
  0x00007f221827513f:   add    r8d,r9d                      ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@8 (line 65)
  0x00007f2218275142:   mov    ebx,DWORD PTR [rax+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f2218275145:   mov    rcx,QWORD PTR [rax+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007f2218275149:   mov    r10d,DWORD PTR [rbx+0x8]     ; implicit exception: dispatches to 0x00007f22182752cb
                                                            ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f221827514d:   cmp    r10d,0x2b613                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f2218275154:   jne    0x00007f221827524d           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f221827515a:   mov    edi,DWORD PTR [rbx+0x1c]     ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f221827515d:   cmp    edi,0x8
  0x00007f2218275160:   jl     0x00007f221827526c           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218275166:   mov    rdx,QWORD PTR [rbx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f221827516a:   movzx  edi,BYTE PTR [rbx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f221827516e:   test   edi,edi
  0x00007f2218275170:   je     0x00007f2218275294           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218275176:   bswap  rcx                          ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@12 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218275179:   mov    r10,rdx
  0x00007f221827517c:   mov    QWORD PTR [r10],rcx          ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f221827517f:   mov    edi,DWORD PTR [rax+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f2218275182:   mov    rcx,QWORD PTR [rax+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007f2218275186:   mov    edx,DWORD PTR [rdi+0x8]      ; implicit exception: dispatches to 0x00007f22182752cb
  0x00007f2218275189:   mov    r10d,r9d
  0x00007f221827518c:   inc    r10d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007f221827518f:   mov    rbx,rdi                      ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f2218275192:   cmp    edx,0x2b613                  ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f2218275198:   jne    0x00007f2218275250           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f221827519e:   mov    edi,DWORD PTR [rbx+0x1c]     ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182751a1:   cmp    edi,0x8
  0x00007f22182751a4:   jl     0x00007f221827526f           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182751aa:   mov    rdx,QWORD PTR [rbx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182751ae:   movzx  edi,BYTE PTR [rbx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182751b2:   test   edi,edi
  0x00007f22182751b4:   je     0x00007f2218275297           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182751ba:   mov    r10,rdx
  0x00007f22182751bd:   bswap  rcx                          ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@12 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182751c0:   mov    QWORD PTR [r10],rcx          ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f22182751c3:   add    r9d,0x2                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007f22182751c7:   cmp    r9d,r8d
  0x00007f22182751ca:   jl     0x00007f2218275142           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007f22182751d0:   mov    r8,QWORD PTR [r15+0x108]     ; ImmutableOopMap {rax=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007f22182751d7:   test   DWORD PTR [r8],eax           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
                                                            ;   {poll}
  0x00007f22182751da:   cmp    r9d,0x3fffff
  0x00007f22182751e1:   jl     0x00007f221827512f
  0x00007f22182751e7:   cmp    r9d,0x400000
  0x00007f22182751ee:   jge    0x00007f221827523d           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@8 (line 65)
  0x00007f22182751f0:   mov    r11d,DWORD PTR [rax+0x18]    ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f22182751f4:   mov    rcx,QWORD PTR [rax+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007f22182751f8:   mov    r10d,DWORD PTR [r11+0x8]     ; implicit exception: dispatches to 0x00007f22182752cb
  0x00007f22182751fc:   mov    rbx,r11                      ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f22182751ff:   cmp    r10d,0x2b613                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f2218275206:   jne    0x00007f22182752bc           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f221827520c:   mov    edi,DWORD PTR [rbx+0x1c]     ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f221827520f:   cmp    edi,0x8
  0x00007f2218275212:   jl     0x00007f22182752c1           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218275218:   mov    rdx,QWORD PTR [rbx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f221827521c:   movzx  edi,BYTE PTR [rbx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218275220:   test   edi,edi
  0x00007f2218275222:   je     0x00007f22182752c6           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218275228:   mov    r10,rdx
  0x00007f221827522b:   bswap  rcx                          ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@12 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f221827522e:   mov    QWORD PTR [r10],rcx          ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f2218275231:   inc    r9d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007f2218275234:   cmp    r9d,0x400000
  0x00007f221827523b:   jl     0x00007f22182751f0           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007f221827523d:   add    rsp,0x40
  0x00007f2218275241:   pop    rbp
  0x00007f2218275242:   mov    r10,QWORD PTR [r15+0x108]
  0x00007f2218275249:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f221827524c:   ret    
  0x00007f221827524d:   mov    r10d,r9d
  0x00007f2218275250:   mov    esi,0xffffffde
  0x00007f2218275255:   mov    rbp,rax
  0x00007f2218275258:   mov    DWORD PTR [rsp],r10d
  0x00007f221827525c:   mov    QWORD PTR [rsp+0x8],rbx
  0x00007f2218275261:   mov    QWORD PTR [rsp+0x10],rcx
  0x00007f2218275266:   nop
  0x00007f2218275267:   call   0x00007f221078ae80           ; ImmutableOopMap {rbp=Oop [8]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f221827526c:   mov    r10d,r9d
  0x00007f221827526f:   mov    esi,0xffffff45
  0x00007f2218275274:   mov    rbp,rax
  0x00007f2218275277:   mov    DWORD PTR [rsp],r10d
  0x00007f221827527b:   mov    QWORD PTR [rsp+0x10],rcx
  0x00007f2218275280:   mov    QWORD PTR [rsp+0x18],rbx
  0x00007f2218275285:   mov    QWORD PTR [rsp+0x20],rbx
  0x00007f221827528a:   mov    DWORD PTR [rsp+0x4],edi
  0x00007f221827528e:   nop
  0x00007f221827528f:   call   0x00007f221078ae80           ; ImmutableOopMap {rbp=Oop [24]=Oop [32]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f2218275294:   mov    r10d,r9d
  0x00007f2218275297:   mov    esi,0xffffff45
  0x00007f221827529c:   mov    rbp,rax
  0x00007f221827529f:   mov    DWORD PTR [rsp],r10d
  0x00007f22182752a3:   mov    QWORD PTR [rsp+0x10],rbx
  0x00007f22182752a8:   mov    QWORD PTR [rsp+0x18],rdx
  0x00007f22182752ad:   mov    QWORD PTR [rsp+0x20],rcx
  0x00007f22182752b2:   mov    DWORD PTR [rsp+0x4],edi
  0x00007f22182752b6:   nop
  0x00007f22182752b7:   call   0x00007f221078ae80           ; ImmutableOopMap {rbp=Oop [16]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.misc.Unsafe::convEndian@4 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f22182752bc:   mov    r10d,r9d
  0x00007f22182752bf:   jmp    0x00007f2218275250
  0x00007f22182752c1:   mov    r10d,r9d
  0x00007f22182752c4:   jmp    0x00007f221827526f
  0x00007f22182752c6:   mov    r10d,r9d
  0x00007f22182752c9:   jmp    0x00007f2218275297
  0x00007f22182752cb:   mov    esi,0xfffffff6
  0x00007f22182752d0:   mov    rbp,rcx
  0x00007f22182752d3:   call   0x00007f221078ae80           ; ImmutableOopMap {}
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f22182752d8:   hlt    
  0x00007f22182752d9:   hlt    
  0x00007f22182752da:   hlt    
  0x00007f22182752db:   hlt    
  0x00007f22182752dc:   hlt    
  0x00007f22182752dd:   hlt    
  0x00007f22182752de:   hlt    
  0x00007f22182752df:   hlt    
[Exception Handler]
  0x00007f22182752e0:   jmp    0x00007f22107eb300           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f22182752e5:   call   0x00007f22182752ea
  0x00007f22182752ea:   sub    QWORD PTR [rsp],0x5
  0x00007f22182752ef:   jmp    0x00007f22107cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007f22182752f4:   hlt    
  0x00007f22182752f5:   hlt    
  0x00007f22182752f6:   hlt    
  0x00007f22182752f7:   hlt    
--------------------------------------------------------------------------------
6171624.437 ns/op
Iteration   1: 6154750.842 ns/op
Iteration   2: 6124870.298 ns/op
Iteration   3: 6123343.229 ns/op


Result "me.serce.BufferAccessBenchmark.putLong":
  6134321.456 ±(99.9%) 323075.071 ns/op [Average]
  (min, avg, max) = (6123343.229, 6134321.456, 6154750.842), stdev = 17708.835
  CI (99.9%): [5811246.385, 6457396.528] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 13.0.4, OpenJDK 64-Bit Server VM, 13.0.4+8-MTS
# VM invoker: /usr/lib/jvm/zulu-13-amd64/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:PrintAssemblyOptions=intel -XX:CompileCommand=print,*BufferAccessBenchmark.putLong*
# Warmup: 1 iterations, 10 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: me.serce.BufferAccessBenchmark.putLong
# Parameters: (bufferType = direct-native)

# Run progress: 33.33% complete, ETA 00:01:20
# Fork: 1 of 1
CompileCommand: print *BufferAccessBenchmark.putLong*
OpenJDK 64-Bit Server VM warning: printing of assembly code is enabled; turning on DebugNonSafepoints to gain additional output
# Warmup Iteration   1: 
============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     308  496 %     3       me.serce.BufferAccessBenchmark::putLong @ 2 (28 bytes)
 total in heap  [0x00007efe68dcfb90,0x00007efe68dd01d0] = 1600
 relocation     [0x00007efe68dcfcf0,0x00007efe68dcfd38] = 72
 main code      [0x00007efe68dcfd40,0x00007efe68dcffe0] = 672
 stub code      [0x00007efe68dcffe0,0x00007efe68dd0020] = 64
 oops           [0x00007efe68dd0020,0x00007efe68dd0028] = 8
 metadata       [0x00007efe68dd0028,0x00007efe68dd0030] = 8
 scopes data    [0x00007efe68dd0030,0x00007efe68dd00a0] = 112
 scopes pcs     [0x00007efe68dd00a0,0x00007efe68dd01b0] = 272
 dependencies   [0x00007efe68dd01b0,0x00007efe68dd01b8] = 8
 nul chk table  [0x00007efe68dd01b8,0x00007efe68dd01d0] = 24

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007efe64783c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007efe68dcfd40:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007efe68dcfd44:   shl    r10,0x3
  0x00007efe68dcfd48:   movabs r12,0x800000000
  0x00007efe68dcfd52:   add    r10,r12
  0x00007efe68dcfd55:   xor    r12,r12
  0x00007efe68dcfd58:   cmp    r10,rax
  0x00007efe68dcfd5b:   jne    0x00007efe687cd580           ;   {runtime_call ic_miss_stub}
  0x00007efe68dcfd61:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007efe68dcfd6c:   data16 data16 xchg ax,ax
  0x00007efe68dcfd70:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007efe68dcfd7b:   data16 data16 xchg ax,ax
  0x00007efe68dcfd7f:   nop
[Verified Entry Point]
  0x00007efe68dcfd80:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007efe68dcfd87:   push   rbp
  0x00007efe68dcfd88:   sub    rsp,0x50
  0x00007efe68dcfd8c:   movabs rdi,0x7efe647bc200           ;   {metadata(method data for {method} {0x00007efe64783c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007efe68dcfd96:   mov    ebx,DWORD PTR [rdi+0x13c]
  0x00007efe68dcfd9c:   add    ebx,0x8
  0x00007efe68dcfd9f:   mov    DWORD PTR [rdi+0x13c],ebx
  0x00007efe68dcfda5:   and    ebx,0x1ff8
  0x00007efe68dcfdab:   cmp    ebx,0x0
  0x00007efe68dcfdae:   je     0x00007efe68dcff59           ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@0 (line 64)
  0x00007efe68dcfdb4:   mov    edi,0x0
  0x00007efe68dcfdb9:   jmp    0x00007efe68dcfed9           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
  0x00007efe68dcfdbe:   xchg   ax,ax
  0x00007efe68dcfdc0:   mov    DWORD PTR [rsp+0x2c],edi
  0x00007efe68dcfdc4:   mov    ebx,DWORD PTR [rsi+0x18]     ; implicit exception: dispatches to 0x00007efe68dcff7a
                                                            ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe68dcfdc7:   mov    rcx,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007efe68dcfdcb:   cmp    rax,QWORD PTR [rbx]          ; implicit exception: dispatches to 0x00007efe68dcff7f
  0x00007efe68dcfdce:   mov    rdx,rbx
  0x00007efe68dcfdd1:   movabs rax,0x7efe647bc200           ;   {metadata(method data for {method} {0x00007efe64783c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007efe68dcfddb:   mov    edx,DWORD PTR [rdx+0x8]
  0x00007efe68dcfdde:   shl    rdx,0x3
  0x00007efe68dcfde2:   movabs r12,0x800000000
  0x00007efe68dcfdec:   add    rdx,r12
  0x00007efe68dcfdef:   xor    r12,r12
  0x00007efe68dcfdf2:   cmp    rdx,QWORD PTR [rax+0x1b0]
  0x00007efe68dcfdf9:   jne    0x00007efe68dcfe08
  0x00007efe68dcfdfb:   add    QWORD PTR [rax+0x1b8],0x1
  0x00007efe68dcfe03:   jmp    0x00007efe68dcfe6e
  0x00007efe68dcfe08:   cmp    rdx,QWORD PTR [rax+0x1c0]
  0x00007efe68dcfe0f:   jne    0x00007efe68dcfe1e
  0x00007efe68dcfe11:   add    QWORD PTR [rax+0x1c8],0x1
  0x00007efe68dcfe19:   jmp    0x00007efe68dcfe6e
  0x00007efe68dcfe1e:   cmp    QWORD PTR [rax+0x1b0],0x0
  0x00007efe68dcfe29:   jne    0x00007efe68dcfe42
  0x00007efe68dcfe2b:   mov    QWORD PTR [rax+0x1b0],rdx
  0x00007efe68dcfe32:   mov    QWORD PTR [rax+0x1b8],0x1
  0x00007efe68dcfe3d:   jmp    0x00007efe68dcfe6e
  0x00007efe68dcfe42:   cmp    QWORD PTR [rax+0x1c0],0x0
  0x00007efe68dcfe4d:   jne    0x00007efe68dcfe66
  0x00007efe68dcfe4f:   mov    QWORD PTR [rax+0x1c0],rdx
  0x00007efe68dcfe56:   mov    QWORD PTR [rax+0x1c8],0x1
  0x00007efe68dcfe61:   jmp    0x00007efe68dcfe6e
  0x00007efe68dcfe66:   add    QWORD PTR [rax+0x1a0],0x1
  0x00007efe68dcfe6e:   mov    edx,0x0
  0x00007efe68dcfe73:   mov    QWORD PTR [rsp+0x38],rsi
  0x00007efe68dcfe78:   mov    rsi,rbx                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe68dcfe7b:   xchg   ax,ax
  0x00007efe68dcfe7d:   movabs rax,0x80015b098
  0x00007efe68dcfe87:   call   0x00007efe70273680           ; ImmutableOopMap {[56]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {virtual_call}
  0x00007efe68dcfe8c:   mov    edi,DWORD PTR [rsp+0x2c]
  0x00007efe68dcfe90:   inc    edi
  0x00007efe68dcfe92:   movabs rsi,0x7efe647bc200           ;   {metadata(method data for {method} {0x00007efe64783c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007efe68dcfe9c:   mov    ebx,DWORD PTR [rsi+0x140]
  0x00007efe68dcfea2:   add    ebx,0x8
  0x00007efe68dcfea5:   mov    DWORD PTR [rsi+0x140],ebx
  0x00007efe68dcfeab:   and    ebx,0xfff8
  0x00007efe68dcfeb1:   cmp    ebx,0x0
  0x00007efe68dcfeb4:   je     0x00007efe68dcff84           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007efe68dcfeba:   mov    r10,QWORD PTR [r15+0x108]    ; ImmutableOopMap {[56]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007efe68dcfec1:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00007efe68dcfec4:   movabs rsi,0x7efe647bc200           ;   {metadata(method data for {method} {0x00007efe64783c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007efe68dcfece:   inc    DWORD PTR [rsi+0x1d8]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007efe68dcfed4:   mov    rsi,QWORD PTR [rsp+0x38]
  0x00007efe68dcfed9:   cmp    edi,0x400000
  0x00007efe68dcfedf:   movabs rdx,0x7efe647bc200           ;   {metadata(method data for {method} {0x00007efe64783c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007efe68dcfee9:   movabs rcx,0x190
  0x00007efe68dcfef3:   jl     0x00007efe68dcff03
  0x00007efe68dcfef9:   movabs rcx,0x180
  0x00007efe68dcff03:   mov    rbx,QWORD PTR [rdx+rcx*1]
  0x00007efe68dcff07:   lea    rbx,[rbx+0x1]
  0x00007efe68dcff0b:   mov    QWORD PTR [rdx+rcx*1],rbx
  0x00007efe68dcff0f:   jl     0x00007efe68dcfdc0           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007efe68dcff15:   add    rsp,0x50
  0x00007efe68dcff19:   pop    rbp
  0x00007efe68dcff1a:   mov    r10,QWORD PTR [r15+0x108]
  0x00007efe68dcff21:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007efe68dcff24:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@27 (line 67)
  0x00007efe68dcff25:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007efe68dcff2c:   push   rbp
  0x00007efe68dcff2d:   sub    rsp,0x50
  0x00007efe68dcff31:   mov    rbx,QWORD PTR [rsi+0x10]
  0x00007efe68dcff35:   mov    eax,DWORD PTR [rsi]
  0x00007efe68dcff37:   mov    rdi,rsi
  0x00007efe68dcff3a:   mov    QWORD PTR [rsp+0x30],rbx
  0x00007efe68dcff3f:   mov    DWORD PTR [rsp+0x28],eax
  0x00007efe68dcff43:   call   0x00007efe874c7b80           ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x00007efe68dcff48:   mov    eax,DWORD PTR [rsp+0x28]
  0x00007efe68dcff4c:   mov    rdi,rax
  0x00007efe68dcff4f:   mov    rbx,QWORD PTR [rsp+0x30]
  0x00007efe68dcff54:   mov    rsi,rbx
  0x00007efe68dcff57:   jmp    0x00007efe68dcfed9
  0x00007efe68dcff59:   movabs r10,0x7efe64783c58           ;   {metadata({method} {0x00007efe64783c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007efe68dcff63:   mov    QWORD PTR [rsp+0x8],r10
  0x00007efe68dcff68:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007efe68dcff70:   call   0x00007efe68881980           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007efe68dcff75:   jmp    0x00007efe68dcfdb4
  0x00007efe68dcff7a:   call   0x00007efe687ed720           ; ImmutableOopMap {rsi=Oop }
                                                            ;*getfield buffer {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@9 (line 65)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007efe68dcff7f:   call   0x00007efe687ed720           ; ImmutableOopMap {rsi=Oop rbx=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007efe68dcff84:   movabs r10,0x7efe64783c58           ;   {metadata({method} {0x00007efe64783c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007efe68dcff8e:   mov    QWORD PTR [rsp+0x8],r10
  0x00007efe68dcff93:   mov    QWORD PTR [rsp],0x18
  0x00007efe68dcff9b:   call   0x00007efe68881980           ; ImmutableOopMap {[56]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@24 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007efe68dcffa0:   jmp    0x00007efe68dcfeba
  0x00007efe68dcffa5:   nop
  0x00007efe68dcffa6:   nop
  0x00007efe68dcffa7:   mov    rax,QWORD PTR [r15+0x3f0]
  0x00007efe68dcffae:   movabs r10,0x0
  0x00007efe68dcffb8:   mov    QWORD PTR [r15+0x3f0],r10
  0x00007efe68dcffbf:   movabs r10,0x0
  0x00007efe68dcffc9:   mov    QWORD PTR [r15+0x3f8],r10
  0x00007efe68dcffd0:   add    rsp,0x50
  0x00007efe68dcffd4:   pop    rbp
  0x00007efe68dcffd5:   jmp    0x00007efe687ee600           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007efe68dcffda:   hlt    
  0x00007efe68dcffdb:   hlt    
  0x00007efe68dcffdc:   hlt    
  0x00007efe68dcffdd:   hlt    
  0x00007efe68dcffde:   hlt    
  0x00007efe68dcffdf:   hlt    
[Stub Code]
  0x00007efe68dcffe0:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x00007efe68dcffe5:   movabs rbx,0x0                      ;   {static_stub}
  0x00007efe68dcffef:   jmp    0x00007efe68dcffef           ;   {runtime_call}
[Exception Handler]
  0x00007efe68dcfff4:   call   0x00007efe6887cd00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007efe68dcfff9:   movabs rdi,0x7efe877e9d72           ;   {external_word}
  0x00007efe68dd0003:   and    rsp,0xfffffffffffffff0
  0x00007efe68dd0007:   call   0x00007efe872a9880           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007efe68dd000c:   hlt    
[Deopt Handler Code]
  0x00007efe68dd000d:   movabs r10,0x7efe68dd000d           ;   {section_word}
  0x00007efe68dd0017:   push   r10
  0x00007efe68dd0019:   jmp    0x00007efe687cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007efe68dd001e:   hlt    
  0x00007efe68dd001f:   hlt    
--------------------------------------------------------------------------------

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     333  497       3       me.serce.BufferAccessBenchmark::putLong (28 bytes)
 total in heap  [0x00007efe68dd0210,0x00007efe68dd0800] = 1520
 relocation     [0x00007efe68dd0370,0x00007efe68dd03b8] = 72
 main code      [0x00007efe68dd03c0,0x00007efe68dd0640] = 640
 stub code      [0x00007efe68dd0640,0x00007efe68dd0680] = 64
 oops           [0x00007efe68dd0680,0x00007efe68dd0688] = 8
 metadata       [0x00007efe68dd0688,0x00007efe68dd0690] = 8
 scopes data    [0x00007efe68dd0690,0x00007efe68dd06f8] = 104
 scopes pcs     [0x00007efe68dd06f8,0x00007efe68dd07e8] = 240
 dependencies   [0x00007efe68dd07e8,0x00007efe68dd07f0] = 8
 nul chk table  [0x00007efe68dd07f0,0x00007efe68dd0800] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007efe64783c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  # this:     rsi:rsi   = 'me/serce/BufferAccessBenchmark'
  # parm0:    rdx:rdx   = 'org/openjdk/jmh/infra/Blackhole'
  #           [sp+0x50]  (sp of caller)
  0x00007efe68dd03c0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007efe68dd03c4:   shl    r10,0x3
  0x00007efe68dd03c8:   movabs r12,0x800000000
  0x00007efe68dd03d2:   add    r10,r12
  0x00007efe68dd03d5:   xor    r12,r12
  0x00007efe68dd03d8:   cmp    r10,rax
  0x00007efe68dd03db:   jne    0x00007efe687cd580           ;   {runtime_call ic_miss_stub}
  0x00007efe68dd03e1:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007efe68dd03ec:   data16 data16 xchg ax,ax
  0x00007efe68dd03f0:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007efe68dd03fb:   data16 data16 xchg ax,ax
  0x00007efe68dd03ff:   nop
[Verified Entry Point]
  0x00007efe68dd0400:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007efe68dd0407:   push   rbp
  0x00007efe68dd0408:   sub    rsp,0x40
  0x00007efe68dd040c:   mov    QWORD PTR [rsp+0x30],rsi
  0x00007efe68dd0411:   movabs rcx,0x7efe647bc200           ;   {metadata(method data for {method} {0x00007efe64783c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007efe68dd041b:   mov    edi,DWORD PTR [rcx+0x13c]
  0x00007efe68dd0421:   add    edi,0x8
  0x00007efe68dd0424:   mov    DWORD PTR [rcx+0x13c],edi
  0x00007efe68dd042a:   and    edi,0x1ff8
  0x00007efe68dd0430:   cmp    edi,0x0
  0x00007efe68dd0433:   je     0x00007efe68dd05ad           ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@0 (line 64)
  0x00007efe68dd0439:   mov    edi,0x0
  0x00007efe68dd043e:   jmp    0x00007efe68dd0561           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
  0x00007efe68dd0443:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00007efe68dd0448:   mov    DWORD PTR [rsp+0x28],edi
  0x00007efe68dd044c:   mov    ebx,DWORD PTR [rsi+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe68dd044f:   mov    rcx,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007efe68dd0453:   cmp    rax,QWORD PTR [rbx]          ; implicit exception: dispatches to 0x00007efe68dd05ce
  0x00007efe68dd0456:   mov    rdx,rbx
  0x00007efe68dd0459:   movabs rax,0x7efe647bc200           ;   {metadata(method data for {method} {0x00007efe64783c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007efe68dd0463:   mov    edx,DWORD PTR [rdx+0x8]
  0x00007efe68dd0466:   shl    rdx,0x3
  0x00007efe68dd046a:   movabs r12,0x800000000
  0x00007efe68dd0474:   add    rdx,r12
  0x00007efe68dd0477:   xor    r12,r12
  0x00007efe68dd047a:   cmp    rdx,QWORD PTR [rax+0x1b0]
  0x00007efe68dd0481:   jne    0x00007efe68dd0490
  0x00007efe68dd0483:   add    QWORD PTR [rax+0x1b8],0x1
  0x00007efe68dd048b:   jmp    0x00007efe68dd04f6
  0x00007efe68dd0490:   cmp    rdx,QWORD PTR [rax+0x1c0]
  0x00007efe68dd0497:   jne    0x00007efe68dd04a6
  0x00007efe68dd0499:   add    QWORD PTR [rax+0x1c8],0x1
  0x00007efe68dd04a1:   jmp    0x00007efe68dd04f6
  0x00007efe68dd04a6:   cmp    QWORD PTR [rax+0x1b0],0x0
  0x00007efe68dd04b1:   jne    0x00007efe68dd04ca
  0x00007efe68dd04b3:   mov    QWORD PTR [rax+0x1b0],rdx
  0x00007efe68dd04ba:   mov    QWORD PTR [rax+0x1b8],0x1
  0x00007efe68dd04c5:   jmp    0x00007efe68dd04f6
  0x00007efe68dd04ca:   cmp    QWORD PTR [rax+0x1c0],0x0
  0x00007efe68dd04d5:   jne    0x00007efe68dd04ee
  0x00007efe68dd04d7:   mov    QWORD PTR [rax+0x1c0],rdx
  0x00007efe68dd04de:   mov    QWORD PTR [rax+0x1c8],0x1
  0x00007efe68dd04e9:   jmp    0x00007efe68dd04f6
  0x00007efe68dd04ee:   add    QWORD PTR [rax+0x1a0],0x1
  0x00007efe68dd04f6:   mov    edx,0x0
  0x00007efe68dd04fb:   mov    rsi,rbx                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe68dd04fe:   nop    DWORD PTR [rax+0x0]
  0x00007efe68dd0505:   movabs rax,0xffffffffffffffff
  0x00007efe68dd050f:   call   0x00007efe687ccc80           ; ImmutableOopMap {[48]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {virtual_call}
  0x00007efe68dd0514:   mov    edi,DWORD PTR [rsp+0x28]
  0x00007efe68dd0518:   inc    edi
  0x00007efe68dd051a:   movabs rsi,0x7efe647bc200           ;   {metadata(method data for {method} {0x00007efe64783c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007efe68dd0524:   mov    ebx,DWORD PTR [rsi+0x140]
  0x00007efe68dd052a:   add    ebx,0x8
  0x00007efe68dd052d:   mov    DWORD PTR [rsi+0x140],ebx
  0x00007efe68dd0533:   and    ebx,0xfff8
  0x00007efe68dd0539:   cmp    ebx,0x0
  0x00007efe68dd053c:   je     0x00007efe68dd05d3           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007efe68dd0542:   mov    r10,QWORD PTR [r15+0x108]    ; ImmutableOopMap {[48]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007efe68dd0549:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00007efe68dd054c:   movabs rsi,0x7efe647bc200           ;   {metadata(method data for {method} {0x00007efe64783c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007efe68dd0556:   inc    DWORD PTR [rsi+0x1d8]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007efe68dd055c:   mov    rsi,QWORD PTR [rsp+0x30]
  0x00007efe68dd0561:   cmp    edi,0x400000
  0x00007efe68dd0567:   movabs rdx,0x7efe647bc200           ;   {metadata(method data for {method} {0x00007efe64783c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007efe68dd0571:   movabs rcx,0x190
  0x00007efe68dd057b:   jl     0x00007efe68dd058b
  0x00007efe68dd0581:   movabs rcx,0x180
  0x00007efe68dd058b:   mov    rbx,QWORD PTR [rdx+rcx*1]
  0x00007efe68dd058f:   lea    rbx,[rbx+0x1]
  0x00007efe68dd0593:   mov    QWORD PTR [rdx+rcx*1],rbx
  0x00007efe68dd0597:   jl     0x00007efe68dd0448           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007efe68dd059d:   add    rsp,0x40
  0x00007efe68dd05a1:   pop    rbp
  0x00007efe68dd05a2:   mov    r10,QWORD PTR [r15+0x108]
  0x00007efe68dd05a9:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007efe68dd05ac:   ret    
  0x00007efe68dd05ad:   movabs r10,0x7efe64783c58           ;   {metadata({method} {0x00007efe64783c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007efe68dd05b7:   mov    QWORD PTR [rsp+0x8],r10
  0x00007efe68dd05bc:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007efe68dd05c4:   call   0x00007efe68881980           ; ImmutableOopMap {rsi=Oop [48]=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007efe68dd05c9:   jmp    0x00007efe68dd0439
  0x00007efe68dd05ce:   call   0x00007efe687ed720           ; ImmutableOopMap {rsi=Oop [48]=Oop rbx=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007efe68dd05d3:   movabs r10,0x7efe64783c58           ;   {metadata({method} {0x00007efe64783c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007efe68dd05dd:   mov    QWORD PTR [rsp+0x8],r10
  0x00007efe68dd05e2:   mov    QWORD PTR [rsp],0x18
  0x00007efe68dd05ea:   call   0x00007efe68881980           ; ImmutableOopMap {[48]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@24 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007efe68dd05ef:   jmp    0x00007efe68dd0542
  0x00007efe68dd05f4:   nop
  0x00007efe68dd05f5:   nop
  0x00007efe68dd05f6:   mov    rax,QWORD PTR [r15+0x3f0]
  0x00007efe68dd05fd:   movabs r10,0x0
  0x00007efe68dd0607:   mov    QWORD PTR [r15+0x3f0],r10
  0x00007efe68dd060e:   movabs r10,0x0
  0x00007efe68dd0618:   mov    QWORD PTR [r15+0x3f8],r10
  0x00007efe68dd061f:   add    rsp,0x40
  0x00007efe68dd0623:   pop    rbp
  0x00007efe68dd0624:   jmp    0x00007efe687ee600           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007efe68dd0629:   hlt    
  0x00007efe68dd062a:   hlt    
  0x00007efe68dd062b:   hlt    
  0x00007efe68dd062c:   hlt    
  0x00007efe68dd062d:   hlt    
  0x00007efe68dd062e:   hlt    
  0x00007efe68dd062f:   hlt    
  0x00007efe68dd0630:   hlt    
  0x00007efe68dd0631:   hlt    
  0x00007efe68dd0632:   hlt    
  0x00007efe68dd0633:   hlt    
  0x00007efe68dd0634:   hlt    
  0x00007efe68dd0635:   hlt    
  0x00007efe68dd0636:   hlt    
  0x00007efe68dd0637:   hlt    
  0x00007efe68dd0638:   hlt    
  0x00007efe68dd0639:   hlt    
  0x00007efe68dd063a:   hlt    
  0x00007efe68dd063b:   hlt    
  0x00007efe68dd063c:   hlt    
  0x00007efe68dd063d:   hlt    
  0x00007efe68dd063e:   hlt    
  0x00007efe68dd063f:   hlt    
[Stub Code]
  0x00007efe68dd0640:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x00007efe68dd0645:   movabs rbx,0x0                      ;   {static_stub}
  0x00007efe68dd064f:   jmp    0x00007efe68dd064f           ;   {runtime_call}
[Exception Handler]
  0x00007efe68dd0654:   call   0x00007efe6887cd00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007efe68dd0659:   movabs rdi,0x7efe877e9d72           ;   {external_word}
  0x00007efe68dd0663:   and    rsp,0xfffffffffffffff0
  0x00007efe68dd0667:   call   0x00007efe872a9880           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007efe68dd066c:   hlt    
[Deopt Handler Code]
  0x00007efe68dd066d:   movabs r10,0x7efe68dd066d           ;   {section_word}
  0x00007efe68dd0677:   push   r10
  0x00007efe68dd0679:   jmp    0x00007efe687cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007efe68dd067e:   hlt    
  0x00007efe68dd067f:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     345  498 %     4       me.serce.BufferAccessBenchmark::putLong @ 2 (28 bytes)
 total in heap  [0x00007efe70274310,0x00007efe70274d48] = 2616
 relocation     [0x00007efe70274470,0x00007efe702744a0] = 48
 main code      [0x00007efe702744a0,0x00007efe70274760] = 704
 stub code      [0x00007efe70274760,0x00007efe70274778] = 24
 oops           [0x00007efe70274778,0x00007efe70274788] = 16
 metadata       [0x00007efe70274788,0x00007efe702747c8] = 64
 scopes data    [0x00007efe702747c8,0x00007efe70274940] = 376
 scopes pcs     [0x00007efe70274940,0x00007efe70274d10] = 976
 dependencies   [0x00007efe70274d10,0x00007efe70274d18] = 8
 nul chk table  [0x00007efe70274d18,0x00007efe70274d48] = 48

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007efe64783c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007efe702744a0:   call   0x00007efe873de230           ;   {runtime_call os::breakpoint()}
  0x00007efe702744a5:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007efe702744b0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007efe702744b7:   push   rbp
  0x00007efe702744b8:   sub    rsp,0x40
  0x00007efe702744bc:   mov    rbx,QWORD PTR [rsi+0x10]
  0x00007efe702744c0:   mov    ebp,DWORD PTR [rsi]
  0x00007efe702744c2:   mov    rdi,rsi
  0x00007efe702744c5:   movabs r10,0x7efe874c7b80
  0x00007efe702744cf:   call   r10
  0x00007efe702744d2:   mov    r10d,DWORD PTR [rbx+0x8]     ; implicit exception: dispatches to 0x00007efe70274738
  0x00007efe702744d6:   shl    r10,0x3
  0x00007efe702744da:   movabs r12,0x800000000
  0x00007efe702744e4:   add    r10,r12
  0x00007efe702744e7:   xor    r12,r12
  0x00007efe702744ea:   mov    r10,QWORD PTR [r10+0x38]
  0x00007efe702744ee:   movabs r11,0x800b73a08              ;   {metadata('me/serce/BufferAccessBenchmark')}
  0x00007efe702744f8:   cmp    r10,r11
  0x00007efe702744fb:   jne    0x00007efe702746f8           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
  0x00007efe70274501:   cmp    ebp,0x400000
  0x00007efe70274507:   jge    0x00007efe702746e8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007efe7027450d:   mov    edi,DWORD PTR [rbx+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe70274510:   mov    r8,QWORD PTR [rbx+0x10]      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007efe70274514:   mov    r9d,ebp
  0x00007efe70274517:   inc    r9d
  0x00007efe7027451a:   mov    r11d,DWORD PTR [rdi+0x8]     ; implicit exception: dispatches to 0x00007efe7027472b
                                                            ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe7027451e:   cmp    r11d,0x2b613                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007efe70274525:   jne    0x00007efe702746a8           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe7027452b:   mov    r10d,DWORD PTR [rdi+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe7027452f:   cmp    r10d,0x8
  0x00007efe70274533:   jl     0x00007efe7027470f           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70274539:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe7027453d:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70274542:   test   r10d,r10d
  0x00007efe70274545:   jne    0x00007efe70274708
  0x00007efe7027454b:   mov    r10,rdx
  0x00007efe7027454e:   mov    QWORD PTR [r10],r8           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70274551:   mov    r8,QWORD PTR [rbx+0x10]      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007efe70274555:   mov    edi,DWORD PTR [rbx+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe70274558:   inc    ebp                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007efe7027455a:   cmp    ebp,r9d
  0x00007efe7027455d:   jl     0x00007efe7027451a           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007efe7027455f:   cmp    ebp,0x3fffff
  0x00007efe70274565:   jge    0x00007efe7027462b
  0x00007efe7027456b:   mov    r11d,0x7d0
  0x00007efe70274571:   mov    r9d,0x3fffff
  0x00007efe70274577:   sub    r9d,ebp
  0x00007efe7027457a:   cmp    r9d,r11d
  0x00007efe7027457d:   cmovg  r9d,r11d
  0x00007efe70274581:   add    r9d,ebp
  0x00007efe70274584:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00007efe7027458c:   data16 data16 xchg ax,ax            ;*invokestatic convEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70274590:   mov    ecx,DWORD PTR [rdi+0x8]      ; implicit exception: dispatches to 0x00007efe7027472b
                                                            ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe70274593:   cmp    ecx,0x2b613                  ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007efe70274599:   jne    0x00007efe70274639           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe7027459f:   mov    r10d,DWORD PTR [rdi+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702745a3:   cmp    r10d,0x8
  0x00007efe702745a7:   jl     0x00007efe70274680           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702745ad:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702745b1:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702745b6:   test   r10d,r10d
  0x00007efe702745b9:   jne    0x00007efe70274658
  0x00007efe702745bf:   mov    r10,rdx
  0x00007efe702745c2:   mov    QWORD PTR [r10],r8           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702745c5:   mov    r10d,DWORD PTR [rbx+0x18]    ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe702745c9:   mov    r8,QWORD PTR [rbx+0x10]      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007efe702745cd:   mov    esi,DWORD PTR [r10+0x8]      ; implicit exception: dispatches to 0x00007efe7027472b
  0x00007efe702745d1:   mov    ecx,ebp
  0x00007efe702745d3:   inc    ecx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007efe702745d5:   mov    rdi,r10                      ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe702745d8:   cmp    esi,0x2b613                  ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007efe702745de:   jne    0x00007efe7027463b           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702745e0:   mov    r10d,DWORD PTR [rdi+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702745e4:   cmp    r10d,0x8
  0x00007efe702745e8:   jl     0x00007efe70274682           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702745ee:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702745f2:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702745f7:   test   r10d,r10d
  0x00007efe702745fa:   jne    0x00007efe7027465a
  0x00007efe702745fc:   mov    r10,rdx
  0x00007efe702745ff:   mov    QWORD PTR [r10],r8           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70274602:   mov    r8,QWORD PTR [rbx+0x10]      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007efe70274606:   mov    edi,DWORD PTR [rbx+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe70274609:   add    ebp,0x2                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007efe7027460c:   cmp    ebp,r9d
  0x00007efe7027460f:   jl     0x00007efe70274590           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007efe70274615:   mov    r10,QWORD PTR [r15+0x108]    ; ImmutableOopMap {rbx=Oop rdi=NarrowOop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007efe7027461c:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
                                                            ;   {poll}
  0x00007efe7027461f:   cmp    ebp,0x3fffff
  0x00007efe70274625:   jl     0x00007efe70274571
  0x00007efe7027462b:   cmp    ebp,0x400000
  0x00007efe70274631:   jge    0x00007efe702746e8
  0x00007efe70274637:   jmp    0x00007efe702746b3
  0x00007efe70274639:   mov    ecx,ebp
  0x00007efe7027463b:   mov    esi,0xffffffde
  0x00007efe70274640:   mov    rbp,rbx
  0x00007efe70274643:   mov    DWORD PTR [rsp],ecx
  0x00007efe70274646:   mov    QWORD PTR [rsp+0x8],rdi
  0x00007efe7027464b:   mov    QWORD PTR [rsp+0x10],r8
  0x00007efe70274650:   data16 xchg ax,ax
  0x00007efe70274653:   call   0x00007efe6878ae80           ; ImmutableOopMap {rbp=Oop [8]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007efe70274658:   mov    ecx,ebp                      ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@4 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe7027465a:   mov    esi,0xffffff45
  0x00007efe7027465f:   mov    rbp,rbx
  0x00007efe70274662:   mov    DWORD PTR [rsp],ecx
  0x00007efe70274665:   mov    QWORD PTR [rsp+0x10],rdi
  0x00007efe7027466a:   mov    QWORD PTR [rsp+0x18],rdx
  0x00007efe7027466f:   mov    QWORD PTR [rsp+0x20],r8
  0x00007efe70274674:   mov    DWORD PTR [rsp+0x4],r10d
  0x00007efe70274679:   xchg   ax,ax
  0x00007efe7027467b:   call   0x00007efe6878ae80           ; ImmutableOopMap {rbp=Oop [16]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.misc.Unsafe::convEndian@4 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007efe70274680:   mov    ecx,ebp                      ;*synchronization entry
                                                            ; - java.nio.Buffer::checkIndex@-1 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70274682:   mov    esi,0xffffff45
  0x00007efe70274687:   mov    rbp,rbx
  0x00007efe7027468a:   mov    DWORD PTR [rsp],ecx
  0x00007efe7027468d:   mov    QWORD PTR [rsp+0x10],r8
  0x00007efe70274692:   mov    QWORD PTR [rsp+0x18],rdi
  0x00007efe70274697:   mov    QWORD PTR [rsp+0x20],rdi
  0x00007efe7027469c:   mov    DWORD PTR [rsp+0x4],r10d
  0x00007efe702746a1:   xchg   ax,ax
  0x00007efe702746a3:   call   0x00007efe6878ae80           ; ImmutableOopMap {rbp=Oop [24]=Oop [32]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007efe702746a8:   mov    ecx,ebp
  0x00007efe702746aa:   jmp    0x00007efe7027463b
  0x00007efe702746ac:   mov    edi,DWORD PTR [rbx+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe702746af:   mov    r8,QWORD PTR [rbx+0x10]      ;*invokestatic convEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702746b3:   mov    r11d,DWORD PTR [rdi+0x8]     ; implicit exception: dispatches to 0x00007efe7027472b
                                                            ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe702746b7:   cmp    r11d,0x2b613                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007efe702746be:   jne    0x00007efe70274716           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702746c0:   mov    r10d,DWORD PTR [rdi+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702746c4:   cmp    r10d,0x8
  0x00007efe702746c8:   jl     0x00007efe70274724           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702746ca:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702746cf:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702746d3:   test   r10d,r10d
  0x00007efe702746d6:   jne    0x00007efe7027471d
  0x00007efe702746d8:   mov    r10,rdx
  0x00007efe702746db:   mov    QWORD PTR [r10],r8           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702746de:   inc    ebp                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007efe702746e0:   cmp    ebp,0x400000
  0x00007efe702746e6:   jl     0x00007efe702746ac           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007efe702746e8:   mov    esi,0xffffff45
  0x00007efe702746ed:   mov    QWORD PTR [rsp],rbx
  0x00007efe702746f1:   xchg   ax,ax
  0x00007efe702746f3:   call   0x00007efe6878ae80           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@5 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007efe702746f8:   mov    esi,0xffffff8d
  0x00007efe702746fd:   mov    QWORD PTR [rsp],rbx
  0x00007efe70274701:   xchg   ax,ax
  0x00007efe70274703:   call   0x00007efe6878ae80           ; ImmutableOopMap {[0]=Oop }
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007efe70274708:   mov    ecx,ebp
  0x00007efe7027470a:   jmp    0x00007efe7027465a
  0x00007efe7027470f:   mov    ecx,ebp
  0x00007efe70274711:   jmp    0x00007efe70274682
  0x00007efe70274716:   mov    ecx,ebp
  0x00007efe70274718:   jmp    0x00007efe7027463b
  0x00007efe7027471d:   mov    ecx,ebp
  0x00007efe7027471f:   jmp    0x00007efe7027465a
  0x00007efe70274724:   mov    ecx,ebp
  0x00007efe70274726:   jmp    0x00007efe70274682
  0x00007efe7027472b:   mov    esi,0xfffffff6
  0x00007efe70274730:   mov    rbp,r8
  0x00007efe70274733:   call   0x00007efe6878ae80           ; ImmutableOopMap {}
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007efe70274738:   mov    esi,0xffffff76
  0x00007efe7027473d:   xchg   ax,ax
  0x00007efe7027473f:   call   0x00007efe6878ae80           ; ImmutableOopMap {}
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007efe70274744:   hlt    
  0x00007efe70274745:   hlt    
  0x00007efe70274746:   hlt    
  0x00007efe70274747:   hlt    
  0x00007efe70274748:   hlt    
  0x00007efe70274749:   hlt    
  0x00007efe7027474a:   hlt    
  0x00007efe7027474b:   hlt    
  0x00007efe7027474c:   hlt    
  0x00007efe7027474d:   hlt    
  0x00007efe7027474e:   hlt    
  0x00007efe7027474f:   hlt    
  0x00007efe70274750:   hlt    
  0x00007efe70274751:   hlt    
  0x00007efe70274752:   hlt    
  0x00007efe70274753:   hlt    
  0x00007efe70274754:   hlt    
  0x00007efe70274755:   hlt    
  0x00007efe70274756:   hlt    
  0x00007efe70274757:   hlt    
  0x00007efe70274758:   hlt    
  0x00007efe70274759:   hlt    
  0x00007efe7027475a:   hlt    
  0x00007efe7027475b:   hlt    
  0x00007efe7027475c:   hlt    
  0x00007efe7027475d:   hlt    
  0x00007efe7027475e:   hlt    
  0x00007efe7027475f:   hlt    
[Exception Handler]
  0x00007efe70274760:   jmp    0x00007efe687eb300           ;   {no_reloc}
[Deopt Handler Code]
  0x00007efe70274765:   call   0x00007efe7027476a
  0x00007efe7027476a:   sub    QWORD PTR [rsp],0x5
  0x00007efe7027476f:   jmp    0x00007efe687cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007efe70274774:   hlt    
  0x00007efe70274775:   hlt    
  0x00007efe70274776:   hlt    
  0x00007efe70274777:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     366  499 %     4       me.serce.BufferAccessBenchmark::putLong @ 2 (28 bytes)
 total in heap  [0x00007efe70274d90,0x00007efe702757b0] = 2592
 relocation     [0x00007efe70274ef0,0x00007efe70274f20] = 48
 main code      [0x00007efe70274f20,0x00007efe702751e0] = 704
 stub code      [0x00007efe702751e0,0x00007efe702751f8] = 24
 oops           [0x00007efe702751f8,0x00007efe70275208] = 16
 metadata       [0x00007efe70275208,0x00007efe70275248] = 64
 scopes data    [0x00007efe70275248,0x00007efe702753a8] = 352
 scopes pcs     [0x00007efe702753a8,0x00007efe70275778] = 976
 dependencies   [0x00007efe70275778,0x00007efe70275780] = 8
 nul chk table  [0x00007efe70275780,0x00007efe702757b0] = 48

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007efe64783c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007efe70274f20:   call   0x00007efe873de230           ;   {runtime_call os::breakpoint()}
  0x00007efe70274f25:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007efe70274f30:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007efe70274f37:   push   rbp
  0x00007efe70274f38:   sub    rsp,0x40
  0x00007efe70274f3c:   mov    rbx,QWORD PTR [rsi+0x10]
  0x00007efe70274f40:   mov    ebp,DWORD PTR [rsi]
  0x00007efe70274f42:   mov    rdi,rsi
  0x00007efe70274f45:   movabs r10,0x7efe874c7b80
  0x00007efe70274f4f:   call   r10
  0x00007efe70274f52:   mov    r10d,DWORD PTR [rbx+0x8]     ; implicit exception: dispatches to 0x00007efe702751bc
  0x00007efe70274f56:   shl    r10,0x3
  0x00007efe70274f5a:   movabs r12,0x800000000
  0x00007efe70274f64:   add    r10,r12
  0x00007efe70274f67:   xor    r12,r12
  0x00007efe70274f6a:   mov    r10,QWORD PTR [r10+0x38]
  0x00007efe70274f6e:   movabs r11,0x800b73a08              ;   {metadata('me/serce/BufferAccessBenchmark')}
  0x00007efe70274f78:   cmp    r10,r11
  0x00007efe70274f7b:   jne    0x00007efe70275188
  0x00007efe70274f81:   cmp    ebp,0x400000
  0x00007efe70274f87:   jge    0x00007efe70275106           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
  0x00007efe70274f8d:   mov    edi,DWORD PTR [rbx+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe70274f90:   mov    r8,QWORD PTR [rbx+0x10]      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007efe70274f94:   mov    r9d,ebp
  0x00007efe70274f97:   inc    r9d
  0x00007efe70274f9a:   mov    r11d,DWORD PTR [rdi+0x8]     ; implicit exception: dispatches to 0x00007efe702751af
                                                            ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe70274f9e:   cmp    r11d,0x2b613                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007efe70274fa5:   jne    0x00007efe70275184           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70274fab:   mov    r10d,DWORD PTR [rdi+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70274faf:   cmp    r10d,0x8
  0x00007efe70274fb3:   jl     0x00007efe7027519c           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70274fb9:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70274fbd:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70274fc2:   test   r10d,r10d
  0x00007efe70274fc5:   jne    0x00007efe70275198
  0x00007efe70274fcb:   mov    r10,rdx
  0x00007efe70274fce:   mov    QWORD PTR [r10],r8           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70274fd1:   mov    r8,QWORD PTR [rbx+0x10]      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007efe70274fd5:   mov    edi,DWORD PTR [rbx+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe70274fd8:   inc    ebp                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007efe70274fda:   cmp    ebp,r9d
  0x00007efe70274fdd:   jl     0x00007efe70274f9a           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007efe70274fdf:   cmp    ebp,0x3fffff
  0x00007efe70274fe5:   jge    0x00007efe702750b3
  0x00007efe70274feb:   mov    r11d,0x7d0
  0x00007efe70274ff1:   mov    r9d,0x3fffff
  0x00007efe70274ff7:   sub    r9d,ebp
  0x00007efe70274ffa:   cmp    r9d,r11d
  0x00007efe70274ffd:   cmovg  r9d,r11d
  0x00007efe70275001:   add    r9d,ebp
  0x00007efe70275004:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00007efe7027500c:   data16 data16 xchg ax,ax            ;*invokestatic convEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275010:   mov    ecx,DWORD PTR [rdi+0x8]      ; implicit exception: dispatches to 0x00007efe702751af
                                                            ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe70275013:   cmp    ecx,0x2b613                  ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007efe70275019:   jne    0x00007efe70275116           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe7027501f:   mov    r10d,DWORD PTR [rdi+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275023:   cmp    r10d,0x8
  0x00007efe70275027:   jl     0x00007efe7027515c           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe7027502d:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275031:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275036:   test   r10d,r10d
  0x00007efe70275039:   jne    0x00007efe70275134
  0x00007efe7027503f:   mov    r10,rdx
  0x00007efe70275042:   mov    QWORD PTR [r10],r8           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275045:   mov    r10d,DWORD PTR [rbx+0x18]    ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe70275049:   mov    r8,QWORD PTR [rbx+0x10]      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007efe7027504d:   mov    esi,DWORD PTR [r10+0x8]      ; implicit exception: dispatches to 0x00007efe702751af
  0x00007efe70275051:   mov    ecx,ebp
  0x00007efe70275053:   inc    ecx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007efe70275055:   mov    rdi,r10                      ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe70275058:   cmp    esi,0x2b613                  ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007efe7027505e:   jne    0x00007efe70275118           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275064:   mov    r10d,DWORD PTR [rdi+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275068:   cmp    r10d,0x8
  0x00007efe7027506c:   jl     0x00007efe7027515e           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275072:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275076:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe7027507b:   test   r10d,r10d
  0x00007efe7027507e:   jne    0x00007efe70275136
  0x00007efe70275084:   mov    r10,rdx
  0x00007efe70275087:   mov    QWORD PTR [r10],r8           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe7027508a:   mov    r8,QWORD PTR [rbx+0x10]      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007efe7027508e:   mov    edi,DWORD PTR [rbx+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe70275091:   add    ebp,0x2                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007efe70275094:   cmp    ebp,r9d
  0x00007efe70275097:   jl     0x00007efe70275010           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007efe7027509d:   mov    r10,QWORD PTR [r15+0x108]    ; ImmutableOopMap {rbx=Oop rdi=NarrowOop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007efe702750a4:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
                                                            ;   {poll}
  0x00007efe702750a7:   cmp    ebp,0x3fffff
  0x00007efe702750ad:   jl     0x00007efe70274ff1
  0x00007efe702750b3:   cmp    ebp,0x400000
  0x00007efe702750b9:   jge    0x00007efe70275106
  0x00007efe702750bb:   nop                                 ;*invokestatic convEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702750bc:   mov    r11d,DWORD PTR [rdi+0x8]     ; implicit exception: dispatches to 0x00007efe702751af
                                                            ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe702750c0:   cmp    r11d,0x2b613                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007efe702750c7:   jne    0x00007efe702751a0           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702750cd:   mov    r10d,DWORD PTR [rdi+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702750d1:   cmp    r10d,0x8
  0x00007efe702750d5:   jl     0x00007efe702751ab           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702750db:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702750df:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702750e4:   test   r10d,r10d
  0x00007efe702750e7:   jne    0x00007efe702751a7
  0x00007efe702750ed:   mov    r10,rdx
  0x00007efe702750f0:   mov    QWORD PTR [r10],r8           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702750f3:   inc    ebp                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007efe702750f5:   cmp    ebp,0x400000
  0x00007efe702750fb:   jge    0x00007efe70275106           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007efe702750fd:   mov    edi,DWORD PTR [rbx+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe70275100:   mov    r8,QWORD PTR [rbx+0x10]      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007efe70275104:   jmp    0x00007efe702750bc           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
  0x00007efe70275106:   add    rsp,0x40
  0x00007efe7027510a:   pop    rbp
  0x00007efe7027510b:   mov    r10,QWORD PTR [r15+0x108]
  0x00007efe70275112:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007efe70275115:   ret    
  0x00007efe70275116:   mov    ecx,ebp
  0x00007efe70275118:   mov    esi,0xffffffde
  0x00007efe7027511d:   mov    rbp,rbx
  0x00007efe70275120:   mov    DWORD PTR [rsp],ecx
  0x00007efe70275123:   mov    QWORD PTR [rsp+0x8],rdi
  0x00007efe70275128:   mov    QWORD PTR [rsp+0x10],r8
  0x00007efe7027512d:   xchg   ax,ax
  0x00007efe7027512f:   call   0x00007efe6878ae80           ; ImmutableOopMap {rbp=Oop [8]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007efe70275134:   mov    ecx,ebp                      ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@4 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275136:   mov    esi,0xffffff45
  0x00007efe7027513b:   mov    rbp,rbx
  0x00007efe7027513e:   mov    DWORD PTR [rsp],ecx
  0x00007efe70275141:   mov    QWORD PTR [rsp+0x10],rdi
  0x00007efe70275146:   mov    QWORD PTR [rsp+0x18],rdx
  0x00007efe7027514b:   mov    QWORD PTR [rsp+0x20],r8
  0x00007efe70275150:   mov    DWORD PTR [rsp+0x4],r10d
  0x00007efe70275155:   xchg   ax,ax
  0x00007efe70275157:   call   0x00007efe6878ae80           ; ImmutableOopMap {rbp=Oop [16]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.misc.Unsafe::convEndian@4 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007efe7027515c:   mov    ecx,ebp                      ;*synchronization entry
                                                            ; - java.nio.Buffer::checkIndex@-1 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe7027515e:   mov    esi,0xffffff45
  0x00007efe70275163:   mov    rbp,rbx
  0x00007efe70275166:   mov    DWORD PTR [rsp],ecx
  0x00007efe70275169:   mov    QWORD PTR [rsp+0x10],r8
  0x00007efe7027516e:   mov    QWORD PTR [rsp+0x18],rdi
  0x00007efe70275173:   mov    QWORD PTR [rsp+0x20],rdi
  0x00007efe70275178:   mov    DWORD PTR [rsp+0x4],r10d
  0x00007efe7027517d:   xchg   ax,ax
  0x00007efe7027517f:   call   0x00007efe6878ae80           ; ImmutableOopMap {rbp=Oop [24]=Oop [32]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007efe70275184:   mov    ecx,ebp
  0x00007efe70275186:   jmp    0x00007efe70275118
  0x00007efe70275188:   mov    esi,0xffffff8d
  0x00007efe7027518d:   mov    QWORD PTR [rsp],rbx
  0x00007efe70275191:   xchg   ax,ax
  0x00007efe70275193:   call   0x00007efe6878ae80           ; ImmutableOopMap {[0]=Oop }
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007efe70275198:   mov    ecx,ebp
  0x00007efe7027519a:   jmp    0x00007efe70275136
  0x00007efe7027519c:   mov    ecx,ebp
  0x00007efe7027519e:   jmp    0x00007efe7027515e
  0x00007efe702751a0:   mov    ecx,ebp
  0x00007efe702751a2:   jmp    0x00007efe70275118
  0x00007efe702751a7:   mov    ecx,ebp
  0x00007efe702751a9:   jmp    0x00007efe70275136
  0x00007efe702751ab:   mov    ecx,ebp
  0x00007efe702751ad:   jmp    0x00007efe7027515e
  0x00007efe702751af:   mov    esi,0xfffffff6
  0x00007efe702751b4:   mov    rbp,r8
  0x00007efe702751b7:   call   0x00007efe6878ae80           ; ImmutableOopMap {}
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007efe702751bc:   mov    esi,0xffffffbe
  0x00007efe702751c1:   xchg   ax,ax
  0x00007efe702751c3:   call   0x00007efe6878ae80           ; ImmutableOopMap {}
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007efe702751c8:   hlt    
  0x00007efe702751c9:   hlt    
  0x00007efe702751ca:   hlt    
  0x00007efe702751cb:   hlt    
  0x00007efe702751cc:   hlt    
  0x00007efe702751cd:   hlt    
  0x00007efe702751ce:   hlt    
  0x00007efe702751cf:   hlt    
  0x00007efe702751d0:   hlt    
  0x00007efe702751d1:   hlt    
  0x00007efe702751d2:   hlt    
  0x00007efe702751d3:   hlt    
  0x00007efe702751d4:   hlt    
  0x00007efe702751d5:   hlt    
  0x00007efe702751d6:   hlt    
  0x00007efe702751d7:   hlt    
  0x00007efe702751d8:   hlt    
  0x00007efe702751d9:   hlt    
  0x00007efe702751da:   hlt    
  0x00007efe702751db:   hlt    
  0x00007efe702751dc:   hlt    
  0x00007efe702751dd:   hlt    
  0x00007efe702751de:   hlt    
  0x00007efe702751df:   hlt    
[Exception Handler]
  0x00007efe702751e0:   jmp    0x00007efe687eb300           ;   {no_reloc}
[Deopt Handler Code]
  0x00007efe702751e5:   call   0x00007efe702751ea
  0x00007efe702751ea:   sub    QWORD PTR [rsp],0x5
  0x00007efe702751ef:   jmp    0x00007efe687cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007efe702751f4:   hlt    
  0x00007efe702751f5:   hlt    
  0x00007efe702751f6:   hlt    
  0x00007efe702751f7:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     392  500       4       me.serce.BufferAccessBenchmark::putLong (28 bytes)
 total in heap  [0x00007efe70275810,0x00007efe702760e0] = 2256
 relocation     [0x00007efe70275970,0x00007efe70275998] = 40
 main code      [0x00007efe702759a0,0x00007efe70275be0] = 576
 stub code      [0x00007efe70275be0,0x00007efe70275bf8] = 24
 oops           [0x00007efe70275bf8,0x00007efe70275c08] = 16
 metadata       [0x00007efe70275c08,0x00007efe70275c48] = 64
 scopes data    [0x00007efe70275c48,0x00007efe70275d80] = 312
 scopes pcs     [0x00007efe70275d80,0x00007efe702760b0] = 816
 dependencies   [0x00007efe702760b0,0x00007efe702760b8] = 8
 nul chk table  [0x00007efe702760b8,0x00007efe702760e0] = 40

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007efe64783c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  # this:     rsi:rsi   = 'me/serce/BufferAccessBenchmark'
  # parm0:    rdx:rdx   = 'org/openjdk/jmh/infra/Blackhole'
  #           [sp+0x50]  (sp of caller)
  0x00007efe702759a0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007efe702759a4:   shl    r10,0x3
  0x00007efe702759a8:   movabs r12,0x800000000
  0x00007efe702759b2:   add    r10,r12
  0x00007efe702759b5:   xor    r12,r12
  0x00007efe702759b8:   cmp    rax,r10
  0x00007efe702759bb:   jne    0x00007efe687cd580           ;   {runtime_call ic_miss_stub}
  0x00007efe702759c1:   data16 xchg ax,ax
  0x00007efe702759c4:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00007efe702759cc:   data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007efe702759d0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007efe702759d7:   push   rbp
  0x00007efe702759d8:   sub    rsp,0x40                     ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
  0x00007efe702759dc:   mov    rax,rsi
  0x00007efe702759df:   mov    rcx,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007efe702759e3:   mov    r11d,DWORD PTR [rsi+0x18]
  0x00007efe702759e7:   mov    r8d,DWORD PTR [r11+0x8]      ; implicit exception: dispatches to 0x00007efe70275bbf
  0x00007efe702759eb:   mov    rbx,r11                      ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe702759ee:   xor    r10d,r10d
  0x00007efe702759f1:   cmp    r8d,0x2b613                  ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007efe702759f8:   jne    0x00007efe70275b45           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe702759fe:   mov    edi,DWORD PTR [rbx+0x1c]     ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275a01:   cmp    edi,0x8
  0x00007efe70275a04:   jl     0x00007efe70275b8b           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275a0a:   mov    rdx,QWORD PTR [rbx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275a0e:   movzx  edi,BYTE PTR [rbx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275a12:   test   edi,edi
  0x00007efe70275a14:   jne    0x00007efe70275b63
  0x00007efe70275a1a:   mov    r10,rdx
  0x00007efe70275a1d:   mov    QWORD PTR [r10],rcx          ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275a20:   mov    r11d,0x7d0
  0x00007efe70275a26:   mov    r9d,0x1
  0x00007efe70275a2c:   mov    r8d,0x3fffff
  0x00007efe70275a32:   sub    r8d,r9d
  0x00007efe70275a35:   cmp    r8d,r11d
  0x00007efe70275a38:   cmovg  r8d,r11d
  0x00007efe70275a3c:   add    r8d,r9d
  0x00007efe70275a3f:   nop                                 ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@8 (line 65)
  0x00007efe70275a40:   mov    ebx,DWORD PTR [rax+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe70275a43:   mov    rcx,QWORD PTR [rax+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007efe70275a47:   mov    r10d,DWORD PTR [rbx+0x8]     ; implicit exception: dispatches to 0x00007efe70275bbf
                                                            ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe70275a4b:   cmp    r10d,0x2b613                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007efe70275a52:   jne    0x00007efe70275b42           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275a58:   mov    edi,DWORD PTR [rbx+0x1c]     ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275a5b:   cmp    edi,0x8
  0x00007efe70275a5e:   jl     0x00007efe70275b88           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275a64:   mov    rdx,QWORD PTR [rbx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275a68:   movzx  edi,BYTE PTR [rbx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275a6c:   test   edi,edi
  0x00007efe70275a6e:   jne    0x00007efe70275b60
  0x00007efe70275a74:   mov    r10,rdx
  0x00007efe70275a77:   mov    QWORD PTR [r10],rcx          ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275a7a:   mov    edi,DWORD PTR [rax+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe70275a7d:   mov    rcx,QWORD PTR [rax+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007efe70275a81:   mov    edx,DWORD PTR [rdi+0x8]      ; implicit exception: dispatches to 0x00007efe70275bbf
  0x00007efe70275a84:   mov    r10d,r9d
  0x00007efe70275a87:   inc    r10d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007efe70275a8a:   mov    rbx,rdi                      ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe70275a8d:   cmp    edx,0x2b613                  ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007efe70275a93:   jne    0x00007efe70275b45           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275a99:   mov    edi,DWORD PTR [rbx+0x1c]     ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275a9c:   cmp    edi,0x8
  0x00007efe70275a9f:   jl     0x00007efe70275b8b           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275aa5:   mov    rdx,QWORD PTR [rbx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275aa9:   movzx  edi,BYTE PTR [rbx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275aad:   test   edi,edi
  0x00007efe70275aaf:   jne    0x00007efe70275b63
  0x00007efe70275ab5:   mov    r10,rdx
  0x00007efe70275ab8:   mov    QWORD PTR [r10],rcx          ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275abb:   add    r9d,0x2                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007efe70275abf:   cmp    r9d,r8d
  0x00007efe70275ac2:   jl     0x00007efe70275a40           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007efe70275ac8:   mov    r8,QWORD PTR [r15+0x108]     ; ImmutableOopMap {rax=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007efe70275acf:   test   DWORD PTR [r8],eax           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
                                                            ;   {poll}
  0x00007efe70275ad2:   cmp    r9d,0x3fffff
  0x00007efe70275ad9:   jl     0x00007efe70275a2c
  0x00007efe70275adf:   cmp    r9d,0x400000
  0x00007efe70275ae6:   jge    0x00007efe70275b32           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@8 (line 65)
  0x00007efe70275ae8:   mov    r11d,DWORD PTR [rax+0x18]    ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe70275aec:   mov    rcx,QWORD PTR [rax+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007efe70275af0:   mov    r10d,DWORD PTR [r11+0x8]     ; implicit exception: dispatches to 0x00007efe70275bbf
  0x00007efe70275af4:   mov    rbx,r11                      ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007efe70275af7:   cmp    r10d,0x2b613                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007efe70275afe:   jne    0x00007efe70275bb0           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275b04:   mov    edi,DWORD PTR [rbx+0x1c]     ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275b07:   cmp    edi,0x8
  0x00007efe70275b0a:   jl     0x00007efe70275bba           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275b10:   mov    rdx,QWORD PTR [rbx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275b14:   movzx  edi,BYTE PTR [rbx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275b18:   test   edi,edi
  0x00007efe70275b1a:   jne    0x00007efe70275bb5
  0x00007efe70275b20:   mov    r10,rdx
  0x00007efe70275b23:   mov    QWORD PTR [r10],rcx          ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007efe70275b26:   inc    r9d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007efe70275b29:   cmp    r9d,0x400000
  0x00007efe70275b30:   jl     0x00007efe70275ae8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007efe70275b32:   add    rsp,0x40
  0x00007efe70275b36:   pop    rbp
  0x00007efe70275b37:   mov    r10,QWORD PTR [r15+0x108]
  0x00007efe70275b3e:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007efe70275b41:   ret    
  0x00007efe70275b42:   mov    r10d,r9d
  0x00007efe70275b45:   mov    esi,0xffffffde
  0x00007efe70275b4a:   mov    rbp,rax
  0x00007efe70275b4d:   mov    DWORD PTR [rsp],r10d
  0x00007efe70275b51:   mov    QWORD PTR [rsp+0x8],rbx
  0x00007efe70275b56:   mov    QWORD PTR [rsp+0x10],rcx
  0x00007efe70275b5b:   call   0x00007efe6878ae80           ; ImmutableOopMap {rbp=Oop [8]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007efe70275b60:   mov    r10d,r9d
  0x00007efe70275b63:   mov    esi,0xffffff45
  0x00007efe70275b68:   mov    rbp,rax
  0x00007efe70275b6b:   mov    DWORD PTR [rsp],r10d
  0x00007efe70275b6f:   mov    QWORD PTR [rsp+0x10],rbx
  0x00007efe70275b74:   mov    QWORD PTR [rsp+0x18],rdx
  0x00007efe70275b79:   mov    QWORD PTR [rsp+0x20],rcx
  0x00007efe70275b7e:   mov    DWORD PTR [rsp+0x4],edi
  0x00007efe70275b82:   nop
  0x00007efe70275b83:   call   0x00007efe6878ae80           ; ImmutableOopMap {rbp=Oop [16]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.misc.Unsafe::convEndian@4 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007efe70275b88:   mov    r10d,r9d
  0x00007efe70275b8b:   mov    esi,0xffffff45
  0x00007efe70275b90:   mov    rbp,rax
  0x00007efe70275b93:   mov    DWORD PTR [rsp],r10d
  0x00007efe70275b97:   mov    QWORD PTR [rsp+0x10],rcx
  0x00007efe70275b9c:   mov    QWORD PTR [rsp+0x18],rbx
  0x00007efe70275ba1:   mov    QWORD PTR [rsp+0x20],rbx
  0x00007efe70275ba6:   mov    DWORD PTR [rsp+0x4],edi
  0x00007efe70275baa:   nop
  0x00007efe70275bab:   call   0x00007efe6878ae80           ; ImmutableOopMap {rbp=Oop [24]=Oop [32]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007efe70275bb0:   mov    r10d,r9d
  0x00007efe70275bb3:   jmp    0x00007efe70275b45
  0x00007efe70275bb5:   mov    r10d,r9d
  0x00007efe70275bb8:   jmp    0x00007efe70275b63
  0x00007efe70275bba:   mov    r10d,r9d
  0x00007efe70275bbd:   jmp    0x00007efe70275b8b
  0x00007efe70275bbf:   mov    esi,0xfffffff6
  0x00007efe70275bc4:   mov    rbp,rcx
  0x00007efe70275bc7:   call   0x00007efe6878ae80           ; ImmutableOopMap {}
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007efe70275bcc:   hlt    
  0x00007efe70275bcd:   hlt    
  0x00007efe70275bce:   hlt    
  0x00007efe70275bcf:   hlt    
  0x00007efe70275bd0:   hlt    
  0x00007efe70275bd1:   hlt    
  0x00007efe70275bd2:   hlt    
  0x00007efe70275bd3:   hlt    
  0x00007efe70275bd4:   hlt    
  0x00007efe70275bd5:   hlt    
  0x00007efe70275bd6:   hlt    
  0x00007efe70275bd7:   hlt    
  0x00007efe70275bd8:   hlt    
  0x00007efe70275bd9:   hlt    
  0x00007efe70275bda:   hlt    
  0x00007efe70275bdb:   hlt    
  0x00007efe70275bdc:   hlt    
  0x00007efe70275bdd:   hlt    
  0x00007efe70275bde:   hlt    
  0x00007efe70275bdf:   hlt    
[Exception Handler]
  0x00007efe70275be0:   jmp    0x00007efe687eb300           ;   {no_reloc}
[Deopt Handler Code]
  0x00007efe70275be5:   call   0x00007efe70275bea
  0x00007efe70275bea:   sub    QWORD PTR [rsp],0x5
  0x00007efe70275bef:   jmp    0x00007efe687cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007efe70275bf4:   hlt    
  0x00007efe70275bf5:   hlt    
  0x00007efe70275bf6:   hlt    
  0x00007efe70275bf7:   hlt    
--------------------------------------------------------------------------------
6853060.043 ns/op
Iteration   1: 6800550.469 ns/op
Iteration   2: 6801477.861 ns/op
Iteration   3: 6799042.743 ns/op


Result "me.serce.BufferAccessBenchmark.putLong":
  6800357.024 ±(99.9%) 22422.086 ns/op [Average]
  (min, avg, max) = (6799042.743, 6800357.024, 6801477.861), stdev = 1229.030
  CI (99.9%): [6777934.939, 6822779.110] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 13.0.4, OpenJDK 64-Bit Server VM, 13.0.4+8-MTS
# VM invoker: /usr/lib/jvm/zulu-13-amd64/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:PrintAssemblyOptions=intel -XX:CompileCommand=print,*BufferAccessBenchmark.putLong*
# Warmup: 1 iterations, 10 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: me.serce.BufferAccessBenchmark.putLong
# Parameters: (bufferType = heap)

# Run progress: 66.67% complete, ETA 00:00:40
# Fork: 1 of 1
CompileCommand: print *BufferAccessBenchmark.putLong*
OpenJDK 64-Bit Server VM warning: printing of assembly code is enabled; turning on DebugNonSafepoints to gain additional output
# Warmup Iteration   1: 
============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     270  504 %     3       me.serce.BufferAccessBenchmark::putLong @ 2 (28 bytes)
 total in heap  [0x00007f34a09adc90,0x00007f34a09ae2d0] = 1600
 relocation     [0x00007f34a09addf0,0x00007f34a09ade38] = 72
 main code      [0x00007f34a09ade40,0x00007f34a09ae0e0] = 672
 stub code      [0x00007f34a09ae0e0,0x00007f34a09ae120] = 64
 oops           [0x00007f34a09ae120,0x00007f34a09ae128] = 8
 metadata       [0x00007f34a09ae128,0x00007f34a09ae130] = 8
 scopes data    [0x00007f34a09ae130,0x00007f34a09ae1a0] = 112
 scopes pcs     [0x00007f34a09ae1a0,0x00007f34a09ae2b0] = 272
 dependencies   [0x00007f34a09ae2b0,0x00007f34a09ae2b8] = 8
 nul chk table  [0x00007f34a09ae2b8,0x00007f34a09ae2d0] = 24

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f3498ce3c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f34a09ade40:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f34a09ade44:   shl    r10,0x3
  0x00007f34a09ade48:   movabs r12,0x800000000
  0x00007f34a09ade52:   add    r10,r12
  0x00007f34a09ade55:   xor    r12,r12
  0x00007f34a09ade58:   cmp    r10,rax
  0x00007f34a09ade5b:   jne    0x00007f34a03a8580           ;   {runtime_call ic_miss_stub}
  0x00007f34a09ade61:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f34a09ade6c:   data16 data16 xchg ax,ax
  0x00007f34a09ade70:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f34a09ade7b:   data16 data16 xchg ax,ax
  0x00007f34a09ade7f:   nop
[Verified Entry Point]
  0x00007f34a09ade80:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f34a09ade87:   push   rbp
  0x00007f34a09ade88:   sub    rsp,0x50
  0x00007f34a09ade8c:   movabs rdi,0x7f3498d1c200           ;   {metadata(method data for {method} {0x00007f3498ce3c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f34a09ade96:   mov    ebx,DWORD PTR [rdi+0x13c]
  0x00007f34a09ade9c:   add    ebx,0x8
  0x00007f34a09ade9f:   mov    DWORD PTR [rdi+0x13c],ebx
  0x00007f34a09adea5:   and    ebx,0x1ff8
  0x00007f34a09adeab:   cmp    ebx,0x0
  0x00007f34a09adeae:   je     0x00007f34a09ae059           ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@0 (line 64)
  0x00007f34a09adeb4:   mov    edi,0x0
  0x00007f34a09adeb9:   jmp    0x00007f34a09adfd9           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
  0x00007f34a09adebe:   xchg   ax,ax
  0x00007f34a09adec0:   mov    DWORD PTR [rsp+0x2c],edi
  0x00007f34a09adec4:   mov    ebx,DWORD PTR [rsi+0x18]     ; implicit exception: dispatches to 0x00007f34a09ae07a
                                                            ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f34a09adec7:   mov    rcx,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007f34a09adecb:   cmp    rax,QWORD PTR [rbx]          ; implicit exception: dispatches to 0x00007f34a09ae07f
  0x00007f34a09adece:   mov    rdx,rbx
  0x00007f34a09aded1:   movabs rax,0x7f3498d1c200           ;   {metadata(method data for {method} {0x00007f3498ce3c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f34a09adedb:   mov    edx,DWORD PTR [rdx+0x8]
  0x00007f34a09adede:   shl    rdx,0x3
  0x00007f34a09adee2:   movabs r12,0x800000000
  0x00007f34a09adeec:   add    rdx,r12
  0x00007f34a09adeef:   xor    r12,r12
  0x00007f34a09adef2:   cmp    rdx,QWORD PTR [rax+0x1b0]
  0x00007f34a09adef9:   jne    0x00007f34a09adf08
  0x00007f34a09adefb:   add    QWORD PTR [rax+0x1b8],0x1
  0x00007f34a09adf03:   jmp    0x00007f34a09adf6e
  0x00007f34a09adf08:   cmp    rdx,QWORD PTR [rax+0x1c0]
  0x00007f34a09adf0f:   jne    0x00007f34a09adf1e
  0x00007f34a09adf11:   add    QWORD PTR [rax+0x1c8],0x1
  0x00007f34a09adf19:   jmp    0x00007f34a09adf6e
  0x00007f34a09adf1e:   cmp    QWORD PTR [rax+0x1b0],0x0
  0x00007f34a09adf29:   jne    0x00007f34a09adf42
  0x00007f34a09adf2b:   mov    QWORD PTR [rax+0x1b0],rdx
  0x00007f34a09adf32:   mov    QWORD PTR [rax+0x1b8],0x1
  0x00007f34a09adf3d:   jmp    0x00007f34a09adf6e
  0x00007f34a09adf42:   cmp    QWORD PTR [rax+0x1c0],0x0
  0x00007f34a09adf4d:   jne    0x00007f34a09adf66
  0x00007f34a09adf4f:   mov    QWORD PTR [rax+0x1c0],rdx
  0x00007f34a09adf56:   mov    QWORD PTR [rax+0x1c8],0x1
  0x00007f34a09adf61:   jmp    0x00007f34a09adf6e
  0x00007f34a09adf66:   add    QWORD PTR [rax+0x1a0],0x1
  0x00007f34a09adf6e:   mov    edx,0x0
  0x00007f34a09adf73:   mov    QWORD PTR [rsp+0x38],rsi
  0x00007f34a09adf78:   mov    rsi,rbx                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f34a09adf7b:   xchg   ax,ax
  0x00007f34a09adf7d:   movabs rax,0x8002eae40
  0x00007f34a09adf87:   call   0x00007f34a7e4e8a0           ; ImmutableOopMap {[56]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {virtual_call}
  0x00007f34a09adf8c:   mov    edi,DWORD PTR [rsp+0x2c]
  0x00007f34a09adf90:   inc    edi
  0x00007f34a09adf92:   movabs rsi,0x7f3498d1c200           ;   {metadata(method data for {method} {0x00007f3498ce3c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f34a09adf9c:   mov    ebx,DWORD PTR [rsi+0x140]
  0x00007f34a09adfa2:   add    ebx,0x8
  0x00007f34a09adfa5:   mov    DWORD PTR [rsi+0x140],ebx
  0x00007f34a09adfab:   and    ebx,0xfff8
  0x00007f34a09adfb1:   cmp    ebx,0x0
  0x00007f34a09adfb4:   je     0x00007f34a09ae084           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007f34a09adfba:   mov    r10,QWORD PTR [r15+0x108]    ; ImmutableOopMap {[56]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007f34a09adfc1:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00007f34a09adfc4:   movabs rsi,0x7f3498d1c200           ;   {metadata(method data for {method} {0x00007f3498ce3c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f34a09adfce:   inc    DWORD PTR [rsi+0x1d8]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007f34a09adfd4:   mov    rsi,QWORD PTR [rsp+0x38]
  0x00007f34a09adfd9:   cmp    edi,0x400000
  0x00007f34a09adfdf:   movabs rdx,0x7f3498d1c200           ;   {metadata(method data for {method} {0x00007f3498ce3c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f34a09adfe9:   movabs rcx,0x190
  0x00007f34a09adff3:   jl     0x00007f34a09ae003
  0x00007f34a09adff9:   movabs rcx,0x180
  0x00007f34a09ae003:   mov    rbx,QWORD PTR [rdx+rcx*1]
  0x00007f34a09ae007:   lea    rbx,[rbx+0x1]
  0x00007f34a09ae00b:   mov    QWORD PTR [rdx+rcx*1],rbx
  0x00007f34a09ae00f:   jl     0x00007f34a09adec0           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007f34a09ae015:   add    rsp,0x50
  0x00007f34a09ae019:   pop    rbp
  0x00007f34a09ae01a:   mov    r10,QWORD PTR [r15+0x108]
  0x00007f34a09ae021:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f34a09ae024:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@27 (line 67)
  0x00007f34a09ae025:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f34a09ae02c:   push   rbp
  0x00007f34a09ae02d:   sub    rsp,0x50
  0x00007f34a09ae031:   mov    rbx,QWORD PTR [rsi+0x10]
  0x00007f34a09ae035:   mov    eax,DWORD PTR [rsi]
  0x00007f34a09ae037:   mov    rdi,rsi
  0x00007f34a09ae03a:   mov    QWORD PTR [rsp+0x30],rbx
  0x00007f34a09ae03f:   mov    DWORD PTR [rsp+0x28],eax
  0x00007f34a09ae043:   call   0x00007f34bd465b80           ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x00007f34a09ae048:   mov    eax,DWORD PTR [rsp+0x28]
  0x00007f34a09ae04c:   mov    rdi,rax
  0x00007f34a09ae04f:   mov    rbx,QWORD PTR [rsp+0x30]
  0x00007f34a09ae054:   mov    rsi,rbx
  0x00007f34a09ae057:   jmp    0x00007f34a09adfd9
  0x00007f34a09ae059:   movabs r10,0x7f3498ce3c58           ;   {metadata({method} {0x00007f3498ce3c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f34a09ae063:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f34a09ae068:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f34a09ae070:   call   0x00007f34a045cb00           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f34a09ae075:   jmp    0x00007f34a09adeb4
  0x00007f34a09ae07a:   call   0x00007f34a03c8720           ; ImmutableOopMap {rsi=Oop }
                                                            ;*getfield buffer {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@9 (line 65)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f34a09ae07f:   call   0x00007f34a03c8720           ; ImmutableOopMap {rsi=Oop rbx=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f34a09ae084:   movabs r10,0x7f3498ce3c58           ;   {metadata({method} {0x00007f3498ce3c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f34a09ae08e:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f34a09ae093:   mov    QWORD PTR [rsp],0x18
  0x00007f34a09ae09b:   call   0x00007f34a045cb00           ; ImmutableOopMap {[56]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@24 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f34a09ae0a0:   jmp    0x00007f34a09adfba
  0x00007f34a09ae0a5:   nop
  0x00007f34a09ae0a6:   nop
  0x00007f34a09ae0a7:   mov    rax,QWORD PTR [r15+0x3f0]
  0x00007f34a09ae0ae:   movabs r10,0x0
  0x00007f34a09ae0b8:   mov    QWORD PTR [r15+0x3f0],r10
  0x00007f34a09ae0bf:   movabs r10,0x0
  0x00007f34a09ae0c9:   mov    QWORD PTR [r15+0x3f8],r10
  0x00007f34a09ae0d0:   add    rsp,0x50
  0x00007f34a09ae0d4:   pop    rbp
  0x00007f34a09ae0d5:   jmp    0x00007f34a03c9600           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f34a09ae0da:   hlt    
  0x00007f34a09ae0db:   hlt    
  0x00007f34a09ae0dc:   hlt    
  0x00007f34a09ae0dd:   hlt    
  0x00007f34a09ae0de:   hlt    
  0x00007f34a09ae0df:   hlt    
[Stub Code]
  0x00007f34a09ae0e0:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x00007f34a09ae0e5:   movabs rbx,0x0                      ;   {static_stub}
  0x00007f34a09ae0ef:   jmp    0x00007f34a09ae0ef           ;   {runtime_call}
[Exception Handler]
  0x00007f34a09ae0f4:   call   0x00007f34a0458e80           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f34a09ae0f9:   movabs rdi,0x7f34bd787d72           ;   {external_word}
  0x00007f34a09ae103:   and    rsp,0xfffffffffffffff0
  0x00007f34a09ae107:   call   0x00007f34bd247880           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f34a09ae10c:   hlt    
[Deopt Handler Code]
  0x00007f34a09ae10d:   movabs r10,0x7f34a09ae10d           ;   {section_word}
  0x00007f34a09ae117:   push   r10
  0x00007f34a09ae119:   jmp    0x00007f34a03a5c20           ;   {runtime_call DeoptimizationBlob}
  0x00007f34a09ae11e:   hlt    
  0x00007f34a09ae11f:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     287  505 %     4       me.serce.BufferAccessBenchmark::putLong @ 2 (28 bytes)
 total in heap  [0x00007f34a7e4ec10,0x00007f34a7e4f0e0] = 1232
 relocation     [0x00007f34a7e4ed70,0x00007f34a7e4ed88] = 24
 main code      [0x00007f34a7e4eda0,0x00007f34a7e4ef00] = 352
 stub code      [0x00007f34a7e4ef00,0x00007f34a7e4ef18] = 24
 oops           [0x00007f34a7e4ef18,0x00007f34a7e4ef20] = 8
 metadata       [0x00007f34a7e4ef20,0x00007f34a7e4ef40] = 32
 scopes data    [0x00007f34a7e4ef40,0x00007f34a7e4ef98] = 88
 scopes pcs     [0x00007f34a7e4ef98,0x00007f34a7e4f0c8] = 304
 dependencies   [0x00007f34a7e4f0c8,0x00007f34a7e4f0d0] = 8
 nul chk table  [0x00007f34a7e4f0d0,0x00007f34a7e4f0e0] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f3498ce3c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f34a7e4eda0:   call   0x00007f34bd37c230           ;   {runtime_call os::breakpoint()}
  0x00007f34a7e4eda5:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f34a7e4edb0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f34a7e4edb7:   push   rbp
  0x00007f34a7e4edb8:   sub    rsp,0x20
  0x00007f34a7e4edbc:   mov    rbp,QWORD PTR [rsi+0x10]
  0x00007f34a7e4edc0:   mov    ebx,DWORD PTR [rsi]
  0x00007f34a7e4edc2:   mov    rdi,rsi
  0x00007f34a7e4edc5:   movabs r10,0x7f34bd465b80
  0x00007f34a7e4edcf:   call   r10
  0x00007f34a7e4edd2:   test   rbp,rbp
  0x00007f34a7e4edd5:   je     0x00007f34a7e4eec0
  0x00007f34a7e4eddb:   mov    r11d,DWORD PTR [rbp+0x8]
  0x00007f34a7e4eddf:   movabs r10,0x800000000
  0x00007f34a7e4ede9:   lea    r10,[r10+r11*8]
  0x00007f34a7e4eded:   mov    r10,QWORD PTR [r10+0x38]
  0x00007f34a7e4edf1:   movabs r11,0x800b73a08              ;   {metadata('me/serce/BufferAccessBenchmark')}
  0x00007f34a7e4edfb:   cmp    r10,r11
  0x00007f34a7e4edfe:   jne    0x00007f34a7e4eed5           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
  0x00007f34a7e4ee04:   mov    r10d,DWORD PTR [rbp+0x18]    ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f34a7e4ee08:   mov    r8d,DWORD PTR [r10+0x8]      ; implicit exception: dispatches to 0x00007f34a7e4eec2
  0x00007f34a7e4ee0c:   cmp    r8d,0x5d5c8                  ;   {metadata('java/nio/HeapByteBuffer')}
  0x00007f34a7e4ee13:   jne    0x00007f34a7e4eec2           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f34a7e4ee19:   mov    r11d,DWORD PTR [r10+0x1c]
  0x00007f34a7e4ee1d:   cmp    r11d,0x8
  0x00007f34a7e4ee21:   jl     0x00007f34a7e4eec2
  0x00007f34a7e4ee27:   movzx  r11d,BYTE PTR [r10+0x29]
  0x00007f34a7e4ee2c:   test   r11d,r11d
  0x00007f34a7e4ee2f:   je     0x00007f34a7e4eec2
  0x00007f34a7e4ee35:   mov    r11d,DWORD PTR [r10+0x2c]    ;*getfield hb {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::putLong@4 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f34a7e4ee39:   test   r11d,r11d
  0x00007f34a7e4ee3c:   je     0x00007f34a7e4eec2
  0x00007f34a7e4ee42:   cmp    ebx,0x400000
  0x00007f34a7e4ee48:   jge    0x00007f34a7e4eee4           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007f34a7e4ee4e:   mov    r10,QWORD PTR [r10+0x10]
  0x00007f34a7e4ee52:   mov    r8,QWORD PTR [rbp+0x10]
  0x00007f34a7e4ee56:   mov    ecx,ebx
  0x00007f34a7e4ee58:   inc    ecx
  0x00007f34a7e4ee5a:   bswap  r8                           ;*getfield hb {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::putLong@4 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f34a7e4ee5d:   add    r11,r10
  0x00007f34a7e4ee60:   mov    QWORD PTR [r11],r8           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
  0x00007f34a7e4ee63:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007f34a7e4ee65:   cmp    ebx,ecx
  0x00007f34a7e4ee67:   jge    0x00007f34a7e4ee6e           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007f34a7e4ee69:   mov    QWORD PTR [r11],r8
  0x00007f34a7e4ee6c:   jmp    0x00007f34a7e4ee63
  0x00007f34a7e4ee6e:   cmp    ebx,0x3fffff
  0x00007f34a7e4ee74:   jge    0x00007f34a7e4eed0
  0x00007f34a7e4ee76:   mov    QWORD PTR [r11],r8           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.HeapByteBuffer::putLong@24 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f34a7e4ee79:   movsxd r10,ebx
  0x00007f34a7e4ee7c:   mov    r9d,0x400000
  0x00007f34a7e4ee82:   sub    r9,r10
  0x00007f34a7e4ee85:   and    r9,0xfffffffffffffffe
  0x00007f34a7e4ee89:   mov    r9d,r9d
  0x00007f34a7e4ee8c:   add    r9d,ebx                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007f34a7e4ee8f:   cmp    r9d,0x400000
  0x00007f34a7e4ee96:   jge    0x00007f34a7e4eeaf
  0x00007f34a7e4ee98:   mov    QWORD PTR [r11],r8
  0x00007f34a7e4ee9b:   jmp    0x00007f34a7e4eea3
  0x00007f34a7e4ee9d:   data16 xchg ax,ax
  0x00007f34a7e4eea0:   mov    QWORD PTR [r11],r8           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
  0x00007f34a7e4eea3:   inc    r9d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007f34a7e4eea6:   cmp    r9d,0x400000
  0x00007f34a7e4eead:   jl     0x00007f34a7e4eea0           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007f34a7e4eeaf:   mov    esi,0xffffff45
  0x00007f34a7e4eeb4:   mov    DWORD PTR [rsp+0x4],r9d
  0x00007f34a7e4eeb9:   xchg   ax,ax
  0x00007f34a7e4eebb:   call   0x00007f34a0365e80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@5 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f34a7e4eec0:   xor    ebp,ebp
  0x00007f34a7e4eec2:   mov    esi,0xffffff76
  0x00007f34a7e4eec7:   mov    DWORD PTR [rsp],ebx
  0x00007f34a7e4eeca:   nop
  0x00007f34a7e4eecb:   call   0x00007f34a0365e80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f34a7e4eed0:   mov    r9d,ebx
  0x00007f34a7e4eed3:   jmp    0x00007f34a7e4ee8f
  0x00007f34a7e4eed5:   mov    esi,0xffffff8d
  0x00007f34a7e4eeda:   mov    DWORD PTR [rsp],ebx
  0x00007f34a7e4eedd:   xchg   ax,ax
  0x00007f34a7e4eedf:   call   0x00007f34a0365e80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f34a7e4eee4:   mov    r9d,ebx
  0x00007f34a7e4eee7:   jmp    0x00007f34a7e4eeaf
  0x00007f34a7e4eee9:   hlt    
  0x00007f34a7e4eeea:   hlt    
  0x00007f34a7e4eeeb:   hlt    
  0x00007f34a7e4eeec:   hlt    
  0x00007f34a7e4eeed:   hlt    
  0x00007f34a7e4eeee:   hlt    
  0x00007f34a7e4eeef:   hlt    
  0x00007f34a7e4eef0:   hlt    
  0x00007f34a7e4eef1:   hlt    
  0x00007f34a7e4eef2:   hlt    
  0x00007f34a7e4eef3:   hlt    
  0x00007f34a7e4eef4:   hlt    
  0x00007f34a7e4eef5:   hlt    
  0x00007f34a7e4eef6:   hlt    
  0x00007f34a7e4eef7:   hlt    
  0x00007f34a7e4eef8:   hlt    
  0x00007f34a7e4eef9:   hlt    
  0x00007f34a7e4eefa:   hlt    
  0x00007f34a7e4eefb:   hlt    
  0x00007f34a7e4eefc:   hlt    
  0x00007f34a7e4eefd:   hlt    
  0x00007f34a7e4eefe:   hlt    
  0x00007f34a7e4eeff:   hlt    
[Exception Handler]
  0x00007f34a7e4ef00:   jmp    0x00007f34a03c6300           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f34a7e4ef05:   call   0x00007f34a7e4ef0a
  0x00007f34a7e4ef0a:   sub    QWORD PTR [rsp],0x5
  0x00007f34a7e4ef0f:   jmp    0x00007f34a03a5c20           ;   {runtime_call DeoptimizationBlob}
  0x00007f34a7e4ef14:   hlt    
  0x00007f34a7e4ef15:   hlt    
  0x00007f34a7e4ef16:   hlt    
  0x00007f34a7e4ef17:   hlt    
--------------------------------------------------------------------------------

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     291  506 %     3       me.serce.BufferAccessBenchmark::putLong @ 2 (28 bytes)
 total in heap  [0x00007f34a09ae310,0x00007f34a09ae950] = 1600
 relocation     [0x00007f34a09ae470,0x00007f34a09ae4b8] = 72
 main code      [0x00007f34a09ae4c0,0x00007f34a09ae760] = 672
 stub code      [0x00007f34a09ae760,0x00007f34a09ae7a0] = 64
 oops           [0x00007f34a09ae7a0,0x00007f34a09ae7a8] = 8
 metadata       [0x00007f34a09ae7a8,0x00007f34a09ae7b0] = 8
 scopes data    [0x00007f34a09ae7b0,0x00007f34a09ae820] = 112
 scopes pcs     [0x00007f34a09ae820,0x00007f34a09ae930] = 272
 dependencies   [0x00007f34a09ae930,0x00007f34a09ae938] = 8
 nul chk table  [0x00007f34a09ae938,0x00007f34a09ae950] = 24

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f3498ce3c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f34a09ae4c0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f34a09ae4c4:   shl    r10,0x3
  0x00007f34a09ae4c8:   movabs r12,0x800000000
  0x00007f34a09ae4d2:   add    r10,r12
  0x00007f34a09ae4d5:   xor    r12,r12
  0x00007f34a09ae4d8:   cmp    r10,rax
  0x00007f34a09ae4db:   jne    0x00007f34a03a8580           ;   {runtime_call ic_miss_stub}
  0x00007f34a09ae4e1:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f34a09ae4ec:   data16 data16 xchg ax,ax
  0x00007f34a09ae4f0:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f34a09ae4fb:   data16 data16 xchg ax,ax
  0x00007f34a09ae4ff:   nop
[Verified Entry Point]
  0x00007f34a09ae500:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f34a09ae507:   push   rbp
  0x00007f34a09ae508:   sub    rsp,0x50
  0x00007f34a09ae50c:   movabs rdi,0x7f3498d1c200           ;   {metadata(method data for {method} {0x00007f3498ce3c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f34a09ae516:   mov    ebx,DWORD PTR [rdi+0x13c]
  0x00007f34a09ae51c:   add    ebx,0x8
  0x00007f34a09ae51f:   mov    DWORD PTR [rdi+0x13c],ebx
  0x00007f34a09ae525:   and    ebx,0x1ff8
  0x00007f34a09ae52b:   cmp    ebx,0x0
  0x00007f34a09ae52e:   je     0x00007f34a09ae6d9           ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@0 (line 64)
  0x00007f34a09ae534:   mov    edi,0x0
  0x00007f34a09ae539:   jmp    0x00007f34a09ae659           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
  0x00007f34a09ae53e:   xchg   ax,ax
  0x00007f34a09ae540:   mov    DWORD PTR [rsp+0x2c],edi
  0x00007f34a09ae544:   mov    ebx,DWORD PTR [rsi+0x18]     ; implicit exception: dispatches to 0x00007f34a09ae6fa
                                                            ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f34a09ae547:   mov    rcx,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 65)
  0x00007f34a09ae54b:   cmp    rax,QWORD PTR [rbx]          ; implicit exception: dispatches to 0x00007f34a09ae6ff
  0x00007f34a09ae54e:   mov    rdx,rbx
  0x00007f34a09ae551:   movabs rax,0x7f3498d1c200           ;   {metadata(method data for {method} {0x00007f3498ce3c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f34a09ae55b:   mov    edx,DWORD PTR [rdx+0x8]
  0x00007f34a09ae55e:   shl    rdx,0x3
  0x00007f34a09ae562:   movabs r12,0x800000000
  0x00007f34a09ae56c:   add    rdx,r12
  0x00007f34a09ae56f:   xor    r12,r12
  0x00007f34a09ae572:   cmp    rdx,QWORD PTR [rax+0x1b0]
  0x00007f34a09ae579:   jne    0x00007f34a09ae588
  0x00007f34a09ae57b:   add    QWORD PTR [rax+0x1b8],0x1
  0x00007f34a09ae583:   jmp    0x00007f34a09ae5ee
  0x00007f34a09ae588:   cmp    rdx,QWORD PTR [rax+0x1c0]
  0x00007f34a09ae58f:   jne    0x00007f34a09ae59e
  0x00007f34a09ae591:   add    QWORD PTR [rax+0x1c8],0x1
  0x00007f34a09ae599:   jmp    0x00007f34a09ae5ee
  0x00007f34a09ae59e:   cmp    QWORD PTR [rax+0x1b0],0x0
  0x00007f34a09ae5a9:   jne    0x00007f34a09ae5c2
  0x00007f34a09ae5ab:   mov    QWORD PTR [rax+0x1b0],rdx
  0x00007f34a09ae5b2:   mov    QWORD PTR [rax+0x1b8],0x1
  0x00007f34a09ae5bd:   jmp    0x00007f34a09ae5ee
  0x00007f34a09ae5c2:   cmp    QWORD PTR [rax+0x1c0],0x0
  0x00007f34a09ae5cd:   jne    0x00007f34a09ae5e6
  0x00007f34a09ae5cf:   mov    QWORD PTR [rax+0x1c0],rdx
  0x00007f34a09ae5d6:   mov    QWORD PTR [rax+0x1c8],0x1
  0x00007f34a09ae5e1:   jmp    0x00007f34a09ae5ee
  0x00007f34a09ae5e6:   add    QWORD PTR [rax+0x1a0],0x1
  0x00007f34a09ae5ee:   mov    edx,0x0
  0x00007f34a09ae5f3:   mov    QWORD PTR [rsp+0x38],rsi
  0x00007f34a09ae5f8:   mov    rsi,rbx                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f34a09ae5fb:   xchg   ax,ax
  0x00007f34a09ae5fd:   movabs rax,0x8002eae40
  0x00007f34a09ae607:   call   0x00007f34a7e4e8a0           ; ImmutableOopMap {[56]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {virtual_call}
  0x00007f34a09ae60c:   mov    edi,DWORD PTR [rsp+0x2c]
  0x00007f34a09ae610:   inc    edi
  0x00007f34a09ae612:   movabs rsi,0x7f3498d1c200           ;   {metadata(method data for {method} {0x00007f3498ce3c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f34a09ae61c:   mov    ebx,DWORD PTR [rsi+0x140]
  0x00007f34a09ae622:   add    ebx,0x8
  0x00007f34a09ae625:   mov    DWORD PTR [rsi+0x140],ebx
  0x00007f34a09ae62b:   and    ebx,0xfff8
  0x00007f34a09ae631:   cmp    ebx,0x0
  0x00007f34a09ae634:   je     0x00007f34a09ae704           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007f34a09ae63a:   mov    r10,QWORD PTR [r15+0x108]    ; ImmutableOopMap {[56]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007f34a09ae641:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00007f34a09ae644:   movabs rsi,0x7f3498d1c200           ;   {metadata(method data for {method} {0x00007f3498ce3c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f34a09ae64e:   inc    DWORD PTR [rsi+0x1d8]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@24 (line 64)
  0x00007f34a09ae654:   mov    rsi,QWORD PTR [rsp+0x38]
  0x00007f34a09ae659:   cmp    edi,0x400000
  0x00007f34a09ae65f:   movabs rdx,0x7f3498d1c200           ;   {metadata(method data for {method} {0x00007f3498ce3c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f34a09ae669:   movabs rcx,0x190
  0x00007f34a09ae673:   jl     0x00007f34a09ae683
  0x00007f34a09ae679:   movabs rcx,0x180
  0x00007f34a09ae683:   mov    rbx,QWORD PTR [rdx+rcx*1]
  0x00007f34a09ae687:   lea    rbx,[rbx+0x1]
  0x00007f34a09ae68b:   mov    QWORD PTR [rdx+rcx*1],rbx
  0x00007f34a09ae68f:   jl     0x00007f34a09ae540           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007f34a09ae695:   add    rsp,0x50
  0x00007f34a09ae699:   pop    rbp
  0x00007f34a09ae69a:   mov    r10,QWORD PTR [r15+0x108]
  0x00007f34a09ae6a1:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f34a09ae6a4:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@27 (line 67)
  0x00007f34a09ae6a5:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f34a09ae6ac:   push   rbp
  0x00007f34a09ae6ad:   sub    rsp,0x50
  0x00007f34a09ae6b1:   mov    rbx,QWORD PTR [rsi+0x10]
  0x00007f34a09ae6b5:   mov    eax,DWORD PTR [rsi]
  0x00007f34a09ae6b7:   mov    rdi,rsi
  0x00007f34a09ae6ba:   mov    QWORD PTR [rsp+0x30],rbx
  0x00007f34a09ae6bf:   mov    DWORD PTR [rsp+0x28],eax
  0x00007f34a09ae6c3:   call   0x00007f34bd465b80           ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x00007f34a09ae6c8:   mov    eax,DWORD PTR [rsp+0x28]
  0x00007f34a09ae6cc:   mov    rdi,rax
  0x00007f34a09ae6cf:   mov    rbx,QWORD PTR [rsp+0x30]
  0x00007f34a09ae6d4:   mov    rsi,rbx
  0x00007f34a09ae6d7:   jmp    0x00007f34a09ae659
  0x00007f34a09ae6d9:   movabs r10,0x7f3498ce3c58           ;   {metadata({method} {0x00007f3498ce3c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f34a09ae6e3:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f34a09ae6e8:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f34a09ae6f0:   call   0x00007f34a045cb00           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f34a09ae6f5:   jmp    0x00007f34a09ae534
  0x00007f34a09ae6fa:   call   0x00007f34a03c8720           ; ImmutableOopMap {rsi=Oop }
                                                            ;*getfield buffer {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@9 (line 65)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f34a09ae6ff:   call   0x00007f34a03c8720           ; ImmutableOopMap {rsi=Oop rbx=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f34a09ae704:   movabs r10,0x7f3498ce3c58           ;   {metadata({method} {0x00007f3498ce3c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f34a09ae70e:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f34a09ae713:   mov    QWORD PTR [rsp],0x18
  0x00007f34a09ae71b:   call   0x00007f34a045cb00           ; ImmutableOopMap {[56]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@24 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f34a09ae720:   jmp    0x00007f34a09ae63a
  0x00007f34a09ae725:   nop
  0x00007f34a09ae726:   nop
  0x00007f34a09ae727:   mov    rax,QWORD PTR [r15+0x3f0]
  0x00007f34a09ae72e:   movabs r10,0x0
  0x00007f34a09ae738:   mov    QWORD PTR [r15+0x3f0],r10
  0x00007f34a09ae73f:   movabs r10,0x0
  0x00007f34a09ae749:   mov    QWORD PTR [r15+0x3f8],r10
  0x00007f34a09ae750:   add    rsp,0x50
  0x00007f34a09ae754:   pop    rbp
  0x00007f34a09ae755:   jmp    0x00007f34a03c9600           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f34a09ae75a:   hlt    
  0x00007f34a09ae75b:   hlt    
  0x00007f34a09ae75c:   hlt    
  0x00007f34a09ae75d:   hlt    
  0x00007f34a09ae75e:   hlt    
  0x00007f34a09ae75f:   hlt    
[Stub Code]
  0x00007f34a09ae760:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x00007f34a09ae765:   movabs rbx,0x0                      ;   {static_stub}
  0x00007f34a09ae76f:   jmp    0x00007f34a09ae76f           ;   {runtime_call}
[Exception Handler]
  0x00007f34a09ae774:   call   0x00007f34a0458e80           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f34a09ae779:   movabs rdi,0x7f34bd787d72           ;   {external_word}
  0x00007f34a09ae783:   and    rsp,0xfffffffffffffff0
  0x00007f34a09ae787:   call   0x00007f34bd247880           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f34a09ae78c:   hlt    
[Deopt Handler Code]
  0x00007f34a09ae78d:   movabs r10,0x7f34a09ae78d           ;   {section_word}
  0x00007f34a09ae797:   push   r10
  0x00007f34a09ae799:   jmp    0x00007f34a03a5c20           ;   {runtime_call DeoptimizationBlob}
  0x00007f34a09ae79e:   hlt    
  0x00007f34a09ae79f:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     300  507 %     4       me.serce.BufferAccessBenchmark::putLong @ 2 (28 bytes)
 total in heap  [0x00007f34a7e4f110,0x00007f34a7e4f5b8] = 1192
 relocation     [0x00007f34a7e4f270,0x00007f34a7e4f288] = 24
 main code      [0x00007f34a7e4f2a0,0x00007f34a7e4f3e0] = 320
 stub code      [0x00007f34a7e4f3e0,0x00007f34a7e4f3f8] = 24
 oops           [0x00007f34a7e4f3f8,0x00007f34a7e4f400] = 8
 metadata       [0x00007f34a7e4f400,0x00007f34a7e4f420] = 32
 scopes data    [0x00007f34a7e4f420,0x00007f34a7e4f460] = 64
 scopes pcs     [0x00007f34a7e4f460,0x00007f34a7e4f5a0] = 320
 dependencies   [0x00007f34a7e4f5a0,0x00007f34a7e4f5a8] = 8
 nul chk table  [0x00007f34a7e4f5a8,0x00007f34a7e4f5b8] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f3498ce3c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f34a7e4f2a0:   call   0x00007f34bd37c230           ;   {runtime_call os::breakpoint()}
  0x00007f34a7e4f2a5:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f34a7e4f2b0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f34a7e4f2b7:   push   rbp
  0x00007f34a7e4f2b8:   sub    rsp,0x20
  0x00007f34a7e4f2bc:   mov    rbp,QWORD PTR [rsi+0x10]
  0x00007f34a7e4f2c0:   mov    ebx,DWORD PTR [rsi]
  0x00007f34a7e4f2c2:   mov    rdi,rsi
  0x00007f34a7e4f2c5:   movabs r10,0x7f34bd465b80
  0x00007f34a7e4f2cf:   call   r10
  0x00007f34a7e4f2d2:   test   rbp,rbp
  0x00007f34a7e4f2d5:   je     0x00007f34a7e4f3b5
  0x00007f34a7e4f2db:   mov    r11d,DWORD PTR [rbp+0x8]
  0x00007f34a7e4f2df:   movabs r10,0x800000000
  0x00007f34a7e4f2e9:   lea    r10,[r10+r11*8]
  0x00007f34a7e4f2ed:   mov    r10,QWORD PTR [r10+0x38]
  0x00007f34a7e4f2f1:   movabs r11,0x800b73a08              ;   {metadata('me/serce/BufferAccessBenchmark')}
  0x00007f34a7e4f2fb:   cmp    r10,r11
  0x00007f34a7e4f2fe:   jne    0x00007f34a7e4f3c9           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
  0x00007f34a7e4f304:   mov    r10d,DWORD PTR [rbp+0x18]    ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f34a7e4f308:   mov    r8d,DWORD PTR [r10+0x8]      ; implicit exception: dispatches to 0x00007f34a7e4f3b7
  0x00007f34a7e4f30c:   cmp    r8d,0x5d5c8                  ;   {metadata('java/nio/HeapByteBuffer')}
  0x00007f34a7e4f313:   jne    0x00007f34a7e4f3b7           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f34a7e4f319:   mov    r11d,DWORD PTR [r10+0x1c]
  0x00007f34a7e4f31d:   cmp    r11d,0x8
  0x00007f34a7e4f321:   jl     0x00007f34a7e4f3b7
  0x00007f34a7e4f327:   movzx  r11d,BYTE PTR [r10+0x29]
  0x00007f34a7e4f32c:   test   r11d,r11d
  0x00007f34a7e4f32f:   je     0x00007f34a7e4f3b7
  0x00007f34a7e4f335:   mov    r11d,DWORD PTR [r10+0x2c]    ;*getfield hb {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::putLong@4 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f34a7e4f339:   test   r11d,r11d
  0x00007f34a7e4f33c:   je     0x00007f34a7e4f3b7
  0x00007f34a7e4f33e:   cmp    ebx,0x400000
  0x00007f34a7e4f344:   jge    0x00007f34a7e4f3a5           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007f34a7e4f346:   mov    r10,QWORD PTR [r10+0x10]
  0x00007f34a7e4f34a:   mov    r8,QWORD PTR [rbp+0x10]
  0x00007f34a7e4f34e:   mov    ecx,ebx
  0x00007f34a7e4f350:   inc    ecx
  0x00007f34a7e4f352:   bswap  r8                           ;*getfield hb {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::putLong@4 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f34a7e4f355:   add    r11,r10
  0x00007f34a7e4f358:   mov    QWORD PTR [r11],r8           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
  0x00007f34a7e4f35b:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007f34a7e4f35d:   cmp    ebx,ecx
  0x00007f34a7e4f35f:   jge    0x00007f34a7e4f366           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007f34a7e4f361:   mov    QWORD PTR [r11],r8
  0x00007f34a7e4f364:   jmp    0x00007f34a7e4f35b
  0x00007f34a7e4f366:   cmp    ebx,0x3fffff
  0x00007f34a7e4f36c:   jge    0x00007f34a7e4f3c4
  0x00007f34a7e4f36e:   mov    QWORD PTR [r11],r8           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.HeapByteBuffer::putLong@24 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f34a7e4f371:   movsxd r10,ebx
  0x00007f34a7e4f374:   mov    r9d,0x400000
  0x00007f34a7e4f37a:   sub    r9,r10
  0x00007f34a7e4f37d:   and    r9,0xfffffffffffffffe
  0x00007f34a7e4f381:   mov    r10d,r9d
  0x00007f34a7e4f384:   add    r10d,ebx                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007f34a7e4f387:   cmp    r10d,0x400000
  0x00007f34a7e4f38e:   jge    0x00007f34a7e4f3a5
  0x00007f34a7e4f390:   mov    QWORD PTR [r11],r8           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.HeapByteBuffer::putLong@24 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f34a7e4f393:   nop                                 ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
  0x00007f34a7e4f394:   inc    r10d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 64)
  0x00007f34a7e4f397:   cmp    r10d,0x400000
  0x00007f34a7e4f39e:   jge    0x00007f34a7e4f3a5           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@5 (line 64)
  0x00007f34a7e4f3a0:   mov    QWORD PTR [r11],r8           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.HeapByteBuffer::putLong@24 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f34a7e4f3a3:   jmp    0x00007f34a7e4f394
  0x00007f34a7e4f3a5:   add    rsp,0x20
  0x00007f34a7e4f3a9:   pop    rbp
  0x00007f34a7e4f3aa:   mov    r10,QWORD PTR [r15+0x108]
  0x00007f34a7e4f3b1:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f34a7e4f3b4:   ret    
  0x00007f34a7e4f3b5:   xor    ebp,ebp
  0x00007f34a7e4f3b7:   mov    esi,0xffffffbe
  0x00007f34a7e4f3bc:   mov    DWORD PTR [rsp],ebx
  0x00007f34a7e4f3bf:   call   0x00007f34a0365e80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f34a7e4f3c4:   mov    r10d,ebx
  0x00007f34a7e4f3c7:   jmp    0x00007f34a7e4f387
  0x00007f34a7e4f3c9:   mov    esi,0xffffff8d
  0x00007f34a7e4f3ce:   mov    DWORD PTR [rsp],ebx
  0x00007f34a7e4f3d1:   xchg   ax,ax
  0x00007f34a7e4f3d3:   call   0x00007f34a0365e80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@2 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f34a7e4f3d8:   hlt    
  0x00007f34a7e4f3d9:   hlt    
  0x00007f34a7e4f3da:   hlt    
  0x00007f34a7e4f3db:   hlt    
  0x00007f34a7e4f3dc:   hlt    
  0x00007f34a7e4f3dd:   hlt    
  0x00007f34a7e4f3de:   hlt    
  0x00007f34a7e4f3df:   hlt    
[Exception Handler]
  0x00007f34a7e4f3e0:   jmp    0x00007f34a03c6300           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f34a7e4f3e5:   call   0x00007f34a7e4f3ea
  0x00007f34a7e4f3ea:   sub    QWORD PTR [rsp],0x5
  0x00007f34a7e4f3ef:   jmp    0x00007f34a03a5c20           ;   {runtime_call DeoptimizationBlob}
  0x00007f34a7e4f3f4:   hlt    
  0x00007f34a7e4f3f5:   hlt    
  0x00007f34a7e4f3f6:   hlt    
  0x00007f34a7e4f3f7:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     309  508       4       me.serce.BufferAccessBenchmark::putLong (28 bytes)
 total in heap  [0x00007f34a7e4f610,0x00007f34a7e4f980] = 880
 relocation     [0x00007f34a7e4f770,0x00007f34a7e4f780] = 16
 main code      [0x00007f34a7e4f780,0x00007f34a7e4f820] = 160
 stub code      [0x00007f34a7e4f820,0x00007f34a7e4f838] = 24
 oops           [0x00007f34a7e4f838,0x00007f34a7e4f840] = 8
 metadata       [0x00007f34a7e4f840,0x00007f34a7e4f870] = 48
 scopes data    [0x00007f34a7e4f870,0x00007f34a7e4f8c8] = 88
 scopes pcs     [0x00007f34a7e4f8c8,0x00007f34a7e4f968] = 160
 dependencies   [0x00007f34a7e4f968,0x00007f34a7e4f970] = 8
 nul chk table  [0x00007f34a7e4f970,0x00007f34a7e4f980] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f3498ce3c58} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  # this:     rsi:rsi   = 'me/serce/BufferAccessBenchmark'
  # parm0:    rdx:rdx   = 'org/openjdk/jmh/infra/Blackhole'
  #           [sp+0x20]  (sp of caller)
  0x00007f34a7e4f780:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f34a7e4f784:   shl    r10,0x3
  0x00007f34a7e4f788:   movabs r12,0x800000000
  0x00007f34a7e4f792:   add    r10,r12
  0x00007f34a7e4f795:   xor    r12,r12
  0x00007f34a7e4f798:   cmp    rax,r10
  0x00007f34a7e4f79b:   jne    0x00007f34a03a8580           ;   {runtime_call ic_miss_stub}
  0x00007f34a7e4f7a1:   data16 xchg ax,ax
  0x00007f34a7e4f7a4:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f34a7e4f7ac:   data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f34a7e4f7b0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f34a7e4f7b7:   push   rbp
  0x00007f34a7e4f7b8:   sub    rsp,0x10                     ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
  0x00007f34a7e4f7bc:   mov    r10d,DWORD PTR [rsi+0x18]    ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@9 (line 65)
  0x00007f34a7e4f7c0:   mov    r8d,DWORD PTR [r10+0x8]      ; implicit exception: dispatches to 0x00007f34a7e4f809
  0x00007f34a7e4f7c4:   cmp    r8d,0x5d5c8                  ;   {metadata('java/nio/HeapByteBuffer')}
  0x00007f34a7e4f7cb:   jne    0x00007f34a7e4f809           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f34a7e4f7cd:   mov    r11d,DWORD PTR [r10+0x1c]
  0x00007f34a7e4f7d1:   cmp    r11d,0x8
  0x00007f34a7e4f7d5:   jl     0x00007f34a7e4f809
  0x00007f34a7e4f7d7:   movzx  r11d,BYTE PTR [r10+0x29]
  0x00007f34a7e4f7dc:   test   r11d,r11d
  0x00007f34a7e4f7df:   je     0x00007f34a7e4f809
  0x00007f34a7e4f7e1:   mov    r11d,DWORD PTR [r10+0x2c]    ;*getfield hb {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::putLong@4 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f34a7e4f7e5:   test   r11d,r11d
  0x00007f34a7e4f7e8:   je     0x00007f34a7e4f809
  0x00007f34a7e4f7ea:   mov    r10,QWORD PTR [r10+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::byteOffset@1 (line 159)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f34a7e4f7ee:   mov    r8,QWORD PTR [rsi+0x10]
  0x00007f34a7e4f7f2:   bswap  r8                           ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@12 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.HeapByteBuffer::putLong@24 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f34a7e4f7f5:   mov    QWORD PTR [r11+r10*1],r8     ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.HeapByteBuffer::putLong@24 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@17 (line 65)
  0x00007f34a7e4f7f9:   add    rsp,0x10
  0x00007f34a7e4f7fd:   pop    rbp
  0x00007f34a7e4f7fe:   mov    r10,QWORD PTR [r15+0x108]
  0x00007f34a7e4f805:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f34a7e4f808:   ret    
  0x00007f34a7e4f809:   mov    rbp,rsi
  0x00007f34a7e4f80c:   mov    esi,0xffffff76
  0x00007f34a7e4f811:   xchg   ax,ax
  0x00007f34a7e4f813:   call   0x00007f34a0365e80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@5 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f34a7e4f818:   hlt    
  0x00007f34a7e4f819:   hlt    
  0x00007f34a7e4f81a:   hlt    
  0x00007f34a7e4f81b:   hlt    
  0x00007f34a7e4f81c:   hlt    
  0x00007f34a7e4f81d:   hlt    
  0x00007f34a7e4f81e:   hlt    
  0x00007f34a7e4f81f:   hlt    
[Exception Handler]
  0x00007f34a7e4f820:   jmp    0x00007f34a03c6300           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f34a7e4f825:   call   0x00007f34a7e4f82a
  0x00007f34a7e4f82a:   sub    QWORD PTR [rsp],0x5
  0x00007f34a7e4f82f:   jmp    0x00007f34a03a5c20           ;   {runtime_call DeoptimizationBlob}
  0x00007f34a7e4f834:   hlt    
  0x00007f34a7e4f835:   hlt    
  0x00007f34a7e4f836:   hlt    
  0x00007f34a7e4f837:   hlt    
--------------------------------------------------------------------------------
1.859 ns/op
Iteration   1: 1.855 ns/op
Iteration   2: 1.848 ns/op
Iteration   3: 1.847 ns/op


Result "me.serce.BufferAccessBenchmark.putLong":
  1.850 ±(99.9%) 0.080 ns/op [Average]
  (min, avg, max) = (1.847, 1.850, 1.855), stdev = 0.004
  CI (99.9%): [1.771, 1.930] (assumes normal distribution)


# Run complete. Total time: 00:02:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                       (bufferType)  Mode  Cnt        Score        Error  Units
BufferAccessBenchmark.putLong         direct  avgt    3  6134321.456 ± 323075.071  ns/op
BufferAccessBenchmark.putLong  direct-native  avgt    3  6800357.024 ±  22422.086  ns/op
BufferAccessBenchmark.putLong           heap  avgt    3        1.850 ±      0.080  ns/op
