[2020-11-07 09:04:44] bench.sh: INFO: starting me.serce.BufferAccessBenchmark.putLong
# JMH version: 1.25.2
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+8
# VM invoker: /usr/lib/jvm/zulu-15-amd64/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:PrintAssemblyOptions=intel -XX:CompileCommand=print,*BufferAccessBenchmark.putLong*
# Warmup: 1 iterations, 10 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: me.serce.BufferAccessBenchmark.putLong
# Parameters: (bufferType = direct)

# Run progress: 0.00% complete, ETA 00:02:00
# Fork: 1 of 1
CompileCommand: print *BufferAccessBenchmark.putLonOpenJg*D
K 64-Bit Server VM warning: printing of assembly code is enabled; turning on DebugNonSafepoints to gain additional output
# Warmup Iteration   1: 
============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     365  526 %     3       me.serce.BufferAccessBenchmark::putLong @ 14 (37 bytes)
 total in heap  [0x00007f7ff109fc10,0x00007f7ff10a0250] = 1600
 relocation     [0x00007f7ff109fd68,0x00007f7ff109fdb0] = 72
 main code      [0x00007f7ff109fdc0,0x00007f7ff10a0060] = 672
 stub code      [0x00007f7ff10a0060,0x00007f7ff10a00a0] = 64
 oops           [0x00007f7ff10a00a0,0x00007f7ff10a00a8] = 8
 metadata       [0x00007f7ff10a00a8,0x00007f7ff10a00b0] = 8
 scopes data    [0x00007f7ff10a00b0,0x00007f7ff10a0138] = 136
 scopes pcs     [0x00007f7ff10a0138,0x00007f7ff10a0238] = 256
 dependencies   [0x00007f7ff10a0238,0x00007f7ff10a0240] = 8
 nul chk table  [0x00007f7ff10a0240,0x00007f7ff10a0250] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f800d124588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f7ff109fdc0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f7ff109fdc4:   shl    r10,0x3
  0x00007f7ff109fdc8:   movabs r11,0x800000000
  0x00007f7ff109fdd2:   add    r10,r11
  0x00007f7ff109fdd5:   cmp    r10,rax
  0x00007f7ff109fdd8:   jne    0x00007f7ff0a9e700           ;   {runtime_call ic_miss_stub}
  0x00007f7ff109fdde:   xchg   ax,ax
[Verified Entry Point]
  0x00007f7ff109fde0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f7ff109fde7:   push   rbp
  0x00007f7ff109fde8:   sub    rsp,0x60
  0x00007f7ff109fdec:   movabs rdi,0x7f800d15cd28           ;   {metadata(method data for {method} {0x00007f800d124588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f7ff109fdf6:   mov    ebx,DWORD PTR [rdi+0x12c]
  0x00007f7ff109fdfc:   add    ebx,0x2
  0x00007f7ff109fdff:   mov    DWORD PTR [rdi+0x12c],ebx
  0x00007f7ff109fe05:   and    ebx,0x7fe
  0x00007f7ff109fe0b:   cmp    ebx,0x0
  0x00007f7ff109fe0e:   je     0x00007f7ff109ffda           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@0 (line 64)
  0x00007f7ff109fe14:   mov    rdi,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@1 (line 64)
  0x00007f7ff109fe18:   mov    esi,DWORD PTR [rsi+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@6 (line 65)
  0x00007f7ff109fe1b:   mov    ebx,0x0
  0x00007f7ff109fe20:   jmp    0x00007f7ff109ff46           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f7ff109fe25:   data16 xchg ax,ax
  0x00007f7ff109fe28:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x00007f7ff109fffb
  0x00007f7ff109fe2b:   mov    rdx,rsi
  0x00007f7ff109fe2e:   movabs rcx,0x7f800d15cd28           ;   {metadata(method data for {method} {0x00007f800d124588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f7ff109fe38:   mov    edx,DWORD PTR [rdx+0x8]
  0x00007f7ff109fe3b:   shl    rdx,0x3
  0x00007f7ff109fe3f:   movabs r10,0x800000000
  0x00007f7ff109fe49:   add    rdx,r10
  0x00007f7ff109fe4c:   cmp    rdx,QWORD PTR [rcx+0x1a0]
  0x00007f7ff109fe53:   jne    0x00007f7ff109fe62
  0x00007f7ff109fe55:   add    QWORD PTR [rcx+0x1a8],0x1
  0x00007f7ff109fe5d:   jmp    0x00007f7ff109fec8
  0x00007f7ff109fe62:   cmp    rdx,QWORD PTR [rcx+0x1b0]
  0x00007f7ff109fe69:   jne    0x00007f7ff109fe78
  0x00007f7ff109fe6b:   add    QWORD PTR [rcx+0x1b8],0x1
  0x00007f7ff109fe73:   jmp    0x00007f7ff109fec8
  0x00007f7ff109fe78:   cmp    QWORD PTR [rcx+0x1a0],0x0
  0x00007f7ff109fe83:   jne    0x00007f7ff109fe9c
  0x00007f7ff109fe85:   mov    QWORD PTR [rcx+0x1a0],rdx
  0x00007f7ff109fe8c:   mov    QWORD PTR [rcx+0x1a8],0x1
  0x00007f7ff109fe97:   jmp    0x00007f7ff109fec8
  0x00007f7ff109fe9c:   cmp    QWORD PTR [rcx+0x1b0],0x0
  0x00007f7ff109fea7:   jne    0x00007f7ff109fec0
  0x00007f7ff109fea9:   mov    QWORD PTR [rcx+0x1b0],rdx
  0x00007f7ff109feb0:   mov    QWORD PTR [rcx+0x1b8],0x1
  0x00007f7ff109febb:   jmp    0x00007f7ff109fec8
  0x00007f7ff109fec0:   add    QWORD PTR [rcx+0x190],0x1
  0x00007f7ff109fec8:   mov    rdx,rbx
  0x00007f7ff109fecb:   mov    rcx,rdi
  0x00007f7ff109fece:   mov    rax,rsi
  0x00007f7ff109fed1:   mov    rsi,rax                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff109fed4:   mov    QWORD PTR [rsp+0x48],rdi
  0x00007f7ff109fed9:   mov    QWORD PTR [rsp+0x40],rax
  0x00007f7ff109fede:   mov    DWORD PTR [rsp+0x2c],ebx
  0x00007f7ff109fee2:   data16 xchg ax,ax
  0x00007f7ff109fee5:   movabs rax,0x8001f9488
  0x00007f7ff109feef:   call   0x00007f7ff8546280           ; ImmutableOopMap {[64]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {virtual_call}
  0x00007f7ff109fef4:   mov    ebx,DWORD PTR [rsp+0x2c]
  0x00007f7ff109fef8:   inc    ebx
  0x00007f7ff109fefa:   movabs rsi,0x7f800d15cd28           ;   {metadata(method data for {method} {0x00007f800d124588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f7ff109ff04:   mov    edi,DWORD PTR [rsi+0x130]
  0x00007f7ff109ff0a:   add    edi,0x2
  0x00007f7ff109ff0d:   mov    DWORD PTR [rsi+0x130],edi
  0x00007f7ff109ff13:   and    edi,0x3ffe
  0x00007f7ff109ff19:   cmp    edi,0x0
  0x00007f7ff109ff1c:   je     0x00007f7ff10a0000           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f7ff109ff22:   mov    r10,QWORD PTR [r15+0x110]    ; ImmutableOopMap {[64]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f7ff109ff29:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00007f7ff109ff2c:   movabs rsi,0x7f800d15cd28           ;   {metadata(method data for {method} {0x00007f800d124588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f7ff109ff36:   inc    DWORD PTR [rsi+0x1c8]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f7ff109ff3c:   mov    rsi,QWORD PTR [rsp+0x40]
  0x00007f7ff109ff41:   mov    rdi,QWORD PTR [rsp+0x48]
  0x00007f7ff109ff46:   cmp    ebx,0x400000
  0x00007f7ff109ff4c:   movabs rdx,0x7f800d15cd28           ;   {metadata(method data for {method} {0x00007f800d124588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f7ff109ff56:   movabs rcx,0x180
  0x00007f7ff109ff60:   jl     0x00007f7ff109ff70
  0x00007f7ff109ff66:   movabs rcx,0x170
  0x00007f7ff109ff70:   mov    rax,QWORD PTR [rdx+rcx*1]
  0x00007f7ff109ff74:   lea    rax,[rax+0x1]
  0x00007f7ff109ff78:   mov    QWORD PTR [rdx+rcx*1],rax
  0x00007f7ff109ff7c:   jl     0x00007f7ff109fe28           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f7ff109ff82:   add    rsp,0x60
  0x00007f7ff109ff86:   pop    rbp
  0x00007f7ff109ff87:   mov    r10,QWORD PTR [r15+0x110]
  0x00007f7ff109ff8e:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f7ff109ff91:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@36 (line 69)
  0x00007f7ff109ff92:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f7ff109ff99:   push   rbp
  0x00007f7ff109ff9a:   sub    rsp,0x60
  0x00007f7ff109ff9e:   mov    rbx,QWORD PTR [rsi+0x10]
  0x00007f7ff109ffa2:   mov    rax,QWORD PTR [rsi+0x8]
  0x00007f7ff109ffa6:   mov    edx,DWORD PTR [rsi]
  0x00007f7ff109ffa8:   mov    rdi,rsi
  0x00007f7ff109ffab:   mov    QWORD PTR [rsp+0x38],rbx
  0x00007f7ff109ffb0:   mov    QWORD PTR [rsp+0x30],rax
  0x00007f7ff109ffb5:   mov    DWORD PTR [rsp+0x28],edx
  0x00007f7ff109ffb9:   call   0x00007f800fec36d0           ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x00007f7ff109ffbe:   mov    edx,DWORD PTR [rsp+0x28]
  0x00007f7ff109ffc2:   mov    rbx,rdx
  0x00007f7ff109ffc5:   mov    rax,QWORD PTR [rsp+0x30]
  0x00007f7ff109ffca:   mov    rsi,rax
  0x00007f7ff109ffcd:   mov    rdx,QWORD PTR [rsp+0x38]
  0x00007f7ff109ffd2:   mov    rdi,rdx
  0x00007f7ff109ffd5:   jmp    0x00007f7ff109ff46
  0x00007f7ff109ffda:   movabs r10,0x7f800d124588           ;   {metadata({method} {0x00007f800d124588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f7ff109ffe4:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f7ff109ffe9:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f7ff109fff1:   call   0x00007f7ff0b54180           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f7ff109fff6:   jmp    0x00007f7ff109fe14
  0x00007f7ff109fffb:   call   0x00007f7ff0abfa20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f7ff10a0000:   movabs r10,0x7f800d124588           ;   {metadata({method} {0x00007f800d124588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f7ff10a000a:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f7ff10a000f:   mov    QWORD PTR [rsp],0x21
  0x00007f7ff10a0017:   call   0x00007f7ff0b54180           ; ImmutableOopMap {[64]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f7ff10a001c:   jmp    0x00007f7ff109ff22
  0x00007f7ff10a0021:   nop
  0x00007f7ff10a0022:   nop
  0x00007f7ff10a0023:   mov    rax,QWORD PTR [r15+0x400]
  0x00007f7ff10a002a:   movabs r10,0x0
  0x00007f7ff10a0034:   mov    QWORD PTR [r15+0x400],r10
  0x00007f7ff10a003b:   movabs r10,0x0
  0x00007f7ff10a0045:   mov    QWORD PTR [r15+0x408],r10
  0x00007f7ff10a004c:   add    rsp,0x60
  0x00007f7ff10a0050:   pop    rbp
  0x00007f7ff10a0051:   jmp    0x00007f7ff0ac0900           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f7ff10a0056:   hlt    
  0x00007f7ff10a0057:   hlt    
  0x00007f7ff10a0058:   hlt    
  0x00007f7ff10a0059:   hlt    
  0x00007f7ff10a005a:   hlt    
  0x00007f7ff10a005b:   hlt    
  0x00007f7ff10a005c:   hlt    
  0x00007f7ff10a005d:   hlt    
  0x00007f7ff10a005e:   hlt    
  0x00007f7ff10a005f:   hlt    
[Stub Code]
  0x00007f7ff10a0060:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x00007f7ff10a0065:   movabs rbx,0x0                      ;   {static_stub}
  0x00007f7ff10a006f:   jmp    0x00007f7ff10a006f           ;   {runtime_call}
[Exception Handler]
  0x00007f7ff10a0074:   call   0x00007f7ff0b4ff00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f7ff10a0079:   movabs rdi,0x7f801019a19e           ;   {external_word}
  0x00007f7ff10a0083:   and    rsp,0xfffffffffffffff0
  0x00007f7ff10a0087:   call   0x00007f800fcb3b90           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f7ff10a008c:   hlt    
[Deopt Handler Code]
  0x00007f7ff10a008d:   movabs r10,0x7f7ff10a008d           ;   {section_word}
  0x00007f7ff10a0097:   push   r10
  0x00007f7ff10a0099:   jmp    0x00007f7ff0aa0f20           ;   {runtime_call DeoptimizationBlob}
  0x00007f7ff10a009e:   hlt    
  0x00007f7ff10a009f:   hlt    
--------------------------------------------------------------------------------

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     381  527       3       me.serce.BufferAccessBenchmark::putLong (37 bytes)
 total in heap  [0x00007f7ff10a0290,0x00007f7ff10a0878] = 1512
 relocation     [0x00007f7ff10a03e8,0x00007f7ff10a0430] = 72
 main code      [0x00007f7ff10a0440,0x00007f7ff10a06a0] = 608
 stub code      [0x00007f7ff10a06a0,0x00007f7ff10a06e0] = 64
 oops           [0x00007f7ff10a06e0,0x00007f7ff10a06e8] = 8
 metadata       [0x00007f7ff10a06e8,0x00007f7ff10a06f0] = 8
 scopes data    [0x00007f7ff10a06f0,0x00007f7ff10a0770] = 128
 scopes pcs     [0x00007f7ff10a0770,0x00007f7ff10a0860] = 240
 dependencies   [0x00007f7ff10a0860,0x00007f7ff10a0868] = 8
 nul chk table  [0x00007f7ff10a0868,0x00007f7ff10a0878] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f800d124588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  # this:     rsi:rsi   = 'me/serce/BufferAccessBenchmark'
  # parm0:    rdx:rdx   = 'org/openjdk/jmh/infra/Blackhole'
  #           [sp+0x60]  (sp of caller)
  0x00007f7ff10a0440:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f7ff10a0444:   shl    r10,0x3
  0x00007f7ff10a0448:   movabs r11,0x800000000
  0x00007f7ff10a0452:   add    r10,r11
  0x00007f7ff10a0455:   cmp    r10,rax
  0x00007f7ff10a0458:   jne    0x00007f7ff0a9e700           ;   {runtime_call ic_miss_stub}
  0x00007f7ff10a045e:   xchg   ax,ax
[Verified Entry Point]
  0x00007f7ff10a0460:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f7ff10a0467:   push   rbp
  0x00007f7ff10a0468:   sub    rsp,0x50
  0x00007f7ff10a046c:   movabs rcx,0x7f800d15cd28           ;   {metadata(method data for {method} {0x00007f800d124588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f7ff10a0476:   mov    edi,DWORD PTR [rcx+0x12c]
  0x00007f7ff10a047c:   add    edi,0x2
  0x00007f7ff10a047f:   mov    DWORD PTR [rcx+0x12c],edi
  0x00007f7ff10a0485:   and    edi,0x7fe
  0x00007f7ff10a048b:   cmp    edi,0x0
  0x00007f7ff10a048e:   je     0x00007f7ff10a060a           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@0 (line 64)
  0x00007f7ff10a0494:   mov    rdi,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@1 (line 64)
  0x00007f7ff10a0498:   mov    QWORD PTR [rsp+0x38],rdi
  0x00007f7ff10a049d:   mov    ebx,DWORD PTR [rsi+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@6 (line 65)
  0x00007f7ff10a04a0:   mov    QWORD PTR [rsp+0x30],rbx
  0x00007f7ff10a04a5:   mov    eax,0x0
  0x00007f7ff10a04aa:   jmp    0x00007f7ff10a05be           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f7ff10a04af:   nop
  0x00007f7ff10a04b0:   cmp    rax,QWORD PTR [rbx]          ; implicit exception: dispatches to 0x00007f7ff10a062b
  0x00007f7ff10a04b3:   mov    rdx,rbx
  0x00007f7ff10a04b6:   movabs rcx,0x7f800d15cd28           ;   {metadata(method data for {method} {0x00007f800d124588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f7ff10a04c0:   mov    edx,DWORD PTR [rdx+0x8]
  0x00007f7ff10a04c3:   shl    rdx,0x3
  0x00007f7ff10a04c7:   movabs r10,0x800000000
  0x00007f7ff10a04d1:   add    rdx,r10
  0x00007f7ff10a04d4:   cmp    rdx,QWORD PTR [rcx+0x1a0]
  0x00007f7ff10a04db:   jne    0x00007f7ff10a04ea
  0x00007f7ff10a04dd:   add    QWORD PTR [rcx+0x1a8],0x1
  0x00007f7ff10a04e5:   jmp    0x00007f7ff10a0550
  0x00007f7ff10a04ea:   cmp    rdx,QWORD PTR [rcx+0x1b0]
  0x00007f7ff10a04f1:   jne    0x00007f7ff10a0500
  0x00007f7ff10a04f3:   add    QWORD PTR [rcx+0x1b8],0x1
  0x00007f7ff10a04fb:   jmp    0x00007f7ff10a0550
  0x00007f7ff10a0500:   cmp    QWORD PTR [rcx+0x1a0],0x0
  0x00007f7ff10a050b:   jne    0x00007f7ff10a0524
  0x00007f7ff10a050d:   mov    QWORD PTR [rcx+0x1a0],rdx
  0x00007f7ff10a0514:   mov    QWORD PTR [rcx+0x1a8],0x1
  0x00007f7ff10a051f:   jmp    0x00007f7ff10a0550
  0x00007f7ff10a0524:   cmp    QWORD PTR [rcx+0x1b0],0x0
  0x00007f7ff10a052f:   jne    0x00007f7ff10a0548
  0x00007f7ff10a0531:   mov    QWORD PTR [rcx+0x1b0],rdx
  0x00007f7ff10a0538:   mov    QWORD PTR [rcx+0x1b8],0x1
  0x00007f7ff10a0543:   jmp    0x00007f7ff10a0550
  0x00007f7ff10a0548:   add    QWORD PTR [rcx+0x190],0x1
  0x00007f7ff10a0550:   mov    rdx,rax
  0x00007f7ff10a0553:   mov    rcx,rdi
  0x00007f7ff10a0556:   mov    rsi,rbx                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff10a0559:   mov    DWORD PTR [rsp+0x28],eax
  0x00007f7ff10a055d:   movabs rax,0xffffffffffffffff
  0x00007f7ff10a0567:   call   0x00007f7ff0a9f000           ; ImmutableOopMap {[48]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {virtual_call}
  0x00007f7ff10a056c:   mov    eax,DWORD PTR [rsp+0x28]
  0x00007f7ff10a0570:   inc    eax
  0x00007f7ff10a0572:   movabs rsi,0x7f800d15cd28           ;   {metadata(method data for {method} {0x00007f800d124588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f7ff10a057c:   mov    edi,DWORD PTR [rsi+0x130]
  0x00007f7ff10a0582:   add    edi,0x2
  0x00007f7ff10a0585:   mov    DWORD PTR [rsi+0x130],edi
  0x00007f7ff10a058b:   and    edi,0x3ffe
  0x00007f7ff10a0591:   cmp    edi,0x0
  0x00007f7ff10a0594:   je     0x00007f7ff10a0630           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f7ff10a059a:   mov    r10,QWORD PTR [r15+0x110]    ; ImmutableOopMap {[48]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f7ff10a05a1:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00007f7ff10a05a4:   movabs rsi,0x7f800d15cd28           ;   {metadata(method data for {method} {0x00007f800d124588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f7ff10a05ae:   inc    DWORD PTR [rsi+0x1c8]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f7ff10a05b4:   mov    rbx,QWORD PTR [rsp+0x30]
  0x00007f7ff10a05b9:   mov    rdi,QWORD PTR [rsp+0x38]
  0x00007f7ff10a05be:   cmp    eax,0x400000
  0x00007f7ff10a05c4:   movabs rdx,0x7f800d15cd28           ;   {metadata(method data for {method} {0x00007f800d124588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f7ff10a05ce:   movabs rcx,0x180
  0x00007f7ff10a05d8:   jl     0x00007f7ff10a05e8
  0x00007f7ff10a05de:   movabs rcx,0x170
  0x00007f7ff10a05e8:   mov    rsi,QWORD PTR [rdx+rcx*1]
  0x00007f7ff10a05ec:   lea    rsi,[rsi+0x1]
  0x00007f7ff10a05f0:   mov    QWORD PTR [rdx+rcx*1],rsi
  0x00007f7ff10a05f4:   jl     0x00007f7ff10a04b0           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f7ff10a05fa:   add    rsp,0x50
  0x00007f7ff10a05fe:   pop    rbp
  0x00007f7ff10a05ff:   mov    r10,QWORD PTR [r15+0x110]
  0x00007f7ff10a0606:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f7ff10a0609:   ret    
  0x00007f7ff10a060a:   movabs r10,0x7f800d124588           ;   {metadata({method} {0x00007f800d124588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f7ff10a0614:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f7ff10a0619:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f7ff10a0621:   call   0x00007f7ff0b54180           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f7ff10a0626:   jmp    0x00007f7ff10a0494
  0x00007f7ff10a062b:   call   0x00007f7ff0abfa20           ; ImmutableOopMap {rbx=Oop [48]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f7ff10a0630:   movabs r10,0x7f800d124588           ;   {metadata({method} {0x00007f800d124588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f7ff10a063a:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f7ff10a063f:   mov    QWORD PTR [rsp],0x21
  0x00007f7ff10a0647:   call   0x00007f7ff0b54180           ; ImmutableOopMap {[48]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f7ff10a064c:   jmp    0x00007f7ff10a059a
  0x00007f7ff10a0651:   nop
  0x00007f7ff10a0652:   nop
  0x00007f7ff10a0653:   mov    rax,QWORD PTR [r15+0x400]
  0x00007f7ff10a065a:   movabs r10,0x0
  0x00007f7ff10a0664:   mov    QWORD PTR [r15+0x400],r10
  0x00007f7ff10a066b:   movabs r10,0x0
  0x00007f7ff10a0675:   mov    QWORD PTR [r15+0x408],r10
  0x00007f7ff10a067c:   add    rsp,0x50
  0x00007f7ff10a0680:   pop    rbp
  0x00007f7ff10a0681:   jmp    0x00007f7ff0ac0900           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f7ff10a0686:   hlt    
  0x00007f7ff10a0687:   hlt    
  0x00007f7ff10a0688:   hlt    
  0x00007f7ff10a0689:   hlt    
  0x00007f7ff10a068a:   hlt    
  0x00007f7ff10a068b:   hlt    
  0x00007f7ff10a068c:   hlt    
  0x00007f7ff10a068d:   hlt    
  0x00007f7ff10a068e:   hlt    
  0x00007f7ff10a068f:   hlt    
  0x00007f7ff10a0690:   hlt    
  0x00007f7ff10a0691:   hlt    
  0x00007f7ff10a0692:   hlt    
  0x00007f7ff10a0693:   hlt    
  0x00007f7ff10a0694:   hlt    
  0x00007f7ff10a0695:   hlt    
  0x00007f7ff10a0696:   hlt    
  0x00007f7ff10a0697:   hlt    
  0x00007f7ff10a0698:   hlt    
  0x00007f7ff10a0699:   hlt    
  0x00007f7ff10a069a:   hlt    
  0x00007f7ff10a069b:   hlt    
  0x00007f7ff10a069c:   hlt    
  0x00007f7ff10a069d:   hlt    
  0x00007f7ff10a069e:   hlt    
  0x00007f7ff10a069f:   hlt    
[Stub Code]
  0x00007f7ff10a06a0:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x00007f7ff10a06a5:   movabs rbx,0x0                      ;   {static_stub}
  0x00007f7ff10a06af:   jmp    0x00007f7ff10a06af           ;   {runtime_call}
[Exception Handler]
  0x00007f7ff10a06b4:   call   0x00007f7ff0b4ff00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f7ff10a06b9:   movabs rdi,0x7f801019a19e           ;   {external_word}
  0x00007f7ff10a06c3:   and    rsp,0xfffffffffffffff0
  0x00007f7ff10a06c7:   call   0x00007f800fcb3b90           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f7ff10a06cc:   hlt    
[Deopt Handler Code]
  0x00007f7ff10a06cd:   movabs r10,0x7f7ff10a06cd           ;   {section_word}
  0x00007f7ff10a06d7:   push   r10
  0x00007f7ff10a06d9:   jmp    0x00007f7ff0aa0f20           ;   {runtime_call DeoptimizationBlob}
  0x00007f7ff10a06de:   hlt    
  0x00007f7ff10a06df:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     391  528 %     4       me.serce.BufferAccessBenchmark::putLong @ 14 (37 bytes)
 total in heap  [0x00007f7ff8546d10,0x00007f7ff8547558] = 2120
 relocation     [0x00007f7ff8546e68,0x00007f7ff8546e88] = 32
 main code      [0x00007f7ff8546ea0,0x00007f7ff8547200] = 864
 stub code      [0x00007f7ff8547200,0x00007f7ff8547218] = 24
 oops           [0x00007f7ff8547218,0x00007f7ff8547220] = 8
 metadata       [0x00007f7ff8547220,0x00007f7ff8547258] = 56
 scopes data    [0x00007f7ff8547258,0x00007f7ff8547350] = 248
 scopes pcs     [0x00007f7ff8547350,0x00007f7ff8547550] = 512
 dependencies   [0x00007f7ff8547550,0x00007f7ff8547558] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f800d124588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f7ff8546ea0:   call   0x00007f800fde9b10           ;   {runtime_call os::breakpoint()}
  0x00007f7ff8546ea5:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f7ff8546eb0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f7ff8546eb7:   push   rbp
  0x00007f7ff8546eb8:   sub    rsp,0x50
  0x00007f7ff8546ebc:   mov    rbp,QWORD PTR [rsi+0x8]
  0x00007f7ff8546ec0:   mov    r13,QWORD PTR [rsi+0x10]
  0x00007f7ff8546ec4:   mov    ebx,DWORD PTR [rsi]
  0x00007f7ff8546ec6:   mov    rdi,rsi
  0x00007f7ff8546ec9:   movabs r10,0x7f800fec36d0
  0x00007f7ff8546ed3:   call   r10
  0x00007f7ff8546ed6:   test   rbp,rbp
  0x00007f7ff8546ed9:   je     0x00007f7ff85471d8
  0x00007f7ff8546edf:   mov    r11d,DWORD PTR [rbp+0x8]
  0x00007f7ff8546ee3:   movabs r10,0x8001177d8              ;   {metadata('java/nio/ByteBuffer')}
  0x00007f7ff8546eed:   movabs r8,0x800000000
  0x00007f7ff8546ef7:   lea    r8,[r8+r11*8]
  0x00007f7ff8546efb:   mov    r11,QWORD PTR [r8+0x40]
  0x00007f7ff8546eff:   nop
  0x00007f7ff8546f00:   cmp    r11,r10
  0x00007f7ff8546f03:   jne    0x00007f7ff85471ec           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f7ff8546f09:   mov    r10d,DWORD PTR [rbp+0x8]
  0x00007f7ff8546f0d:   cmp    r10d,0x3f291                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f7ff8546f14:   jne    0x00007f7ff85471da
  0x00007f7ff8546f1a:   mov    rax,rbp                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8546f1d:   data16 xchg ax,ax
  0x00007f7ff8546f20:   cmp    r12d,DWORD PTR [rax+0x24]
  0x00007f7ff8546f24:   jne    0x00007f7ff85471da
  0x00007f7ff8546f2a:   movzx  r11d,BYTE PTR [rax+0x2d]
  0x00007f7ff8546f2f:   test   r11d,r11d
  0x00007f7ff8546f32:   je     0x00007f7ff85471da
  0x00007f7ff8546f38:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f7ff8546f40:   cmp    ebx,0x400000
  0x00007f7ff8546f46:   jge    0x00007f7ff854717b           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f7ff8546f4c:   mov    r10,QWORD PTR [rax+0x10]
  0x00007f7ff8546f50:   mov    r14d,DWORD PTR [rax+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8546f54:   mov    rcx,r13
  0x00007f7ff8546f57:   bswap  rcx                          ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@12 (line 3829)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8546f5a:   movsxd r11,r14d
  0x00007f7ff8546f5d:   mov    esi,ebx
  0x00007f7ff8546f5f:   inc    esi
  0x00007f7ff8546f61:   neg    r11
  0x00007f7ff8546f64:   mov    rdi,r10                      ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8546f67:   mov    r9d,0x400000
  0x00007f7ff8546f6d:   mov    r10,0xffffffff80000001
  0x00007f7ff8546f74:   sub    r10,r11
  0x00007f7ff8546f77:   mov    r10d,r10d
  0x00007f7ff8546f7a:   cmp    esi,r10d
  0x00007f7ff8546f7d:   cmovl  esi,r10d
  0x00007f7ff8546f81:   xor    edx,edx
  0x00007f7ff8546f83:   cmp    esi,edx
  0x00007f7ff8546f85:   cmovl  esi,edx
  0x00007f7ff8546f88:   cmp    esi,r9d
  0x00007f7ff8546f8b:   cmovg  esi,r9d
  0x00007f7ff8546f8f:   test   ebx,ebx
  0x00007f7ff8546f91:   jl     0x00007f7ff8547190           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8546f97:   mov    r10d,r14d
  0x00007f7ff8546f9a:   sub    r10d,ebx                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8546f9d:   data16 xchg ax,ax
  0x00007f7ff8546fa0:   cmp    r10d,0x8
  0x00007f7ff8546fa4:   jl     0x00007f7ff85471b4           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8546faa:   movsxd r10,ebx
  0x00007f7ff8546fad:   mov    QWORD PTR [rdi+r10*1],rcx    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8546fb1:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f7ff8546fb3:   cmp    ebx,esi
  0x00007f7ff8546fb5:   jl     0x00007f7ff8546f8f           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f7ff8546fb7:   mov    r8,0xfffffffffffffff9
  0x00007f7ff8546fbe:   sub    r8,r11
  0x00007f7ff8546fc1:   mov    r10d,r8d
  0x00007f7ff8546fc4:   mov    esi,0x80000000
  0x00007f7ff8546fc9:   cmp    r8,0xffffffff80000000
  0x00007f7ff8546fd0:   cmovl  r10d,esi
  0x00007f7ff8546fd4:   cmp    r10d,esi
  0x00007f7ff8546fd7:   cmovg  r10d,esi
  0x00007f7ff8546fdb:   cmp    r10d,r9d
  0x00007f7ff8546fde:   cmovg  r10d,r9d
  0x00007f7ff8546fe2:   mov    r9d,r10d
  0x00007f7ff8546fe5:   add    r9d,0xfffffff1
  0x00007f7ff8546fe9:   cmp    r10d,r9d
  0x00007f7ff8546fec:   cmovl  r9d,esi
  0x00007f7ff8546ff0:   cmp    ebx,r9d
  0x00007f7ff8546ff3:   jge    0x00007f7ff8547145
  0x00007f7ff8546ff9:   mov    esi,0x3e80
  0x00007f7ff8546ffe:   xchg   ax,ax
  0x00007f7ff8547000:   jmp    0x00007f7ff854701f           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f7ff8547002:   mov    r10,QWORD PTR [r15+0x110]    ; ImmutableOopMap {rax=Oop xmm0=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f7ff8547009:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {poll}
  0x00007f7ff854700c:   cmp    ebx,r9d
  0x00007f7ff854700f:   jge    0x00007f7ff8547139
  0x00007f7ff8547015:   vmovq  rbp,xmm0
  0x00007f7ff854701a:   vmovq  r13,xmm1
  0x00007f7ff854701f:   mov    r11d,r9d
  0x00007f7ff8547022:   sub    r11d,ebx
  0x00007f7ff8547025:   cmp    r9d,ebx
  0x00007f7ff8547028:   cmovl  r11d,edx
  0x00007f7ff854702c:   cmp    r11d,0x3e80
  0x00007f7ff8547033:   cmova  r11d,esi
  0x00007f7ff8547037:   add    r11d,ebx
  0x00007f7ff854703a:   vmovq  xmm0,rbp
  0x00007f7ff854703f:   nop
  0x00007f7ff8547040:   vmovq  xmm1,r13
  0x00007f7ff8547045:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
                                                            ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8547050:   mov    r8d,ebx
  0x00007f7ff8547053:   add    r8d,0xf
  0x00007f7ff8547057:   mov    r10d,ebx
  0x00007f7ff854705a:   add    r10d,0xe
  0x00007f7ff854705e:   movsxd rbp,r8d
  0x00007f7ff8547061:   movsxd r13,r10d
  0x00007f7ff8547064:   movsxd r10,ebx
  0x00007f7ff8547067:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f7ff854706b:   mov    r10d,ebx
  0x00007f7ff854706e:   inc    r10d
  0x00007f7ff8547071:   mov    r8d,ebx
  0x00007f7ff8547074:   add    r8d,0x2
  0x00007f7ff8547078:   movsxd r10,r10d
  0x00007f7ff854707b:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f7ff854707f:   movsxd r10,r8d
  0x00007f7ff8547082:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f7ff8547086:   mov    r10d,ebx
  0x00007f7ff8547089:   add    r10d,0x3
  0x00007f7ff854708d:   mov    r8d,ebx
  0x00007f7ff8547090:   add    r8d,0x4
  0x00007f7ff8547094:   movsxd r10,r10d
  0x00007f7ff8547097:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f7ff854709b:   movsxd r10,r8d
  0x00007f7ff854709e:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f7ff85470a2:   mov    r10d,ebx
  0x00007f7ff85470a5:   add    r10d,0x5
  0x00007f7ff85470a9:   mov    r8d,ebx
  0x00007f7ff85470ac:   add    r8d,0x6
  0x00007f7ff85470b0:   movsxd r10,r10d
  0x00007f7ff85470b3:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f7ff85470b7:   movsxd r10,r8d
  0x00007f7ff85470ba:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f7ff85470be:   mov    r10d,ebx
  0x00007f7ff85470c1:   add    r10d,0x7
  0x00007f7ff85470c5:   mov    r8d,ebx
  0x00007f7ff85470c8:   add    r8d,0x8
  0x00007f7ff85470cc:   movsxd r10,r10d
  0x00007f7ff85470cf:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f7ff85470d3:   movsxd r10,r8d
  0x00007f7ff85470d6:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f7ff85470da:   mov    r10d,ebx
  0x00007f7ff85470dd:   add    r10d,0x9
  0x00007f7ff85470e1:   mov    r8d,ebx
  0x00007f7ff85470e4:   add    r8d,0xa
  0x00007f7ff85470e8:   movsxd r10,r10d
  0x00007f7ff85470eb:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f7ff85470ef:   movsxd r10,r8d
  0x00007f7ff85470f2:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f7ff85470f6:   mov    r10d,ebx
  0x00007f7ff85470f9:   add    r10d,0xb
  0x00007f7ff85470fd:   mov    r8d,ebx
  0x00007f7ff8547100:   add    r8d,0xc
  0x00007f7ff8547104:   movsxd r10,r10d
  0x00007f7ff8547107:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f7ff854710b:   movsxd r10,r8d
  0x00007f7ff854710e:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f7ff8547112:   mov    r10d,ebx
  0x00007f7ff8547115:   add    r10d,0xd
  0x00007f7ff8547119:   movsxd r10,r10d
  0x00007f7ff854711c:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f7ff8547120:   mov    QWORD PTR [rdi+r13*1],rcx
  0x00007f7ff8547124:   mov    QWORD PTR [rdi+rbp*1],rcx    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8547128:   add    ebx,0x10                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f7ff854712b:   cmp    ebx,r11d
  0x00007f7ff854712e:   jl     0x00007f7ff8547050           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f7ff8547134:   jmp    0x00007f7ff8547002
  0x00007f7ff8547139:   vmovq  rbp,xmm0
  0x00007f7ff854713e:   xchg   ax,ax
  0x00007f7ff8547140:   vmovq  r13,xmm1
  0x00007f7ff8547145:   cmp    ebx,0x400000
  0x00007f7ff854714b:   jge    0x00007f7ff854717b
  0x00007f7ff854714d:   data16 xchg ax,ax
  0x00007f7ff8547150:   test   ebx,ebx
  0x00007f7ff8547152:   jl     0x00007f7ff8547190           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8547154:   mov    r10d,r14d
  0x00007f7ff8547157:   sub    r10d,ebx                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff854715a:   nop    WORD PTR [rax+rax*1+0x0]
  0x00007f7ff8547160:   cmp    r10d,0x8
  0x00007f7ff8547164:   jl     0x00007f7ff85471b4           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff854716a:   movsxd r10,ebx
  0x00007f7ff854716d:   mov    QWORD PTR [rdi+r10*1],rcx    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8547171:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f7ff8547173:   cmp    ebx,0x400000
  0x00007f7ff8547179:   jl     0x00007f7ff8547150           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f7ff854717b:   mov    esi,0xffffff45
  0x00007f7ff8547180:   mov    QWORD PTR [rsp],r13
  0x00007f7ff8547184:   mov    DWORD PTR [rsp+0xc],ebx
  0x00007f7ff8547188:   data16 xchg ax,ax
  0x00007f7ff854718b:   call   0x00007f7ff0a59e80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@18 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f7ff8547190:   mov    esi,0xffffff45
  0x00007f7ff8547195:   mov    QWORD PTR [rsp+0x10],rax
  0x00007f7ff854719a:   mov    QWORD PTR [rsp+0x18],r13
  0x00007f7ff854719f:   mov    QWORD PTR [rsp+0x20],rax
  0x00007f7ff85471a4:   mov    DWORD PTR [rsp+0xc],ebx
  0x00007f7ff85471a8:   mov    DWORD PTR [rsp+0x38],ebx
  0x00007f7ff85471ac:   data16 xchg ax,ax
  0x00007f7ff85471af:   call   0x00007f7ff0a59e80           ; ImmutableOopMap {[16]=Oop [32]=Oop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f7ff85471b4:   mov    esi,0xffffff45
  0x00007f7ff85471b9:   mov    QWORD PTR [rsp+0x10],rax
  0x00007f7ff85471be:   mov    QWORD PTR [rsp+0x18],r13
  0x00007f7ff85471c3:   mov    QWORD PTR [rsp+0x20],rax
  0x00007f7ff85471c8:   mov    DWORD PTR [rsp+0xc],ebx
  0x00007f7ff85471cc:   mov    DWORD PTR [rsp+0x30],r10d
  0x00007f7ff85471d1:   xchg   ax,ax
  0x00007f7ff85471d3:   call   0x00007f7ff0a59e80           ; ImmutableOopMap {[16]=Oop [32]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f7ff85471d8:   xor    ebp,ebp
  0x00007f7ff85471da:   mov    esi,0xffffff76
  0x00007f7ff85471df:   mov    QWORD PTR [rsp],r13
  0x00007f7ff85471e3:   mov    DWORD PTR [rsp+0x8],ebx
  0x00007f7ff85471e7:   call   0x00007f7ff0a59e80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f7ff85471ec:   mov    esi,0xffffff8d
  0x00007f7ff85471f1:   mov    QWORD PTR [rsp],r13
  0x00007f7ff85471f5:   mov    DWORD PTR [rsp+0x8],ebx
  0x00007f7ff85471f9:   xchg   ax,ax
  0x00007f7ff85471fb:   call   0x00007f7ff0a59e80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
[Exception Handler]
  0x00007f7ff8547200:   jmp    0x00007f7ff0abd280           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f7ff8547205:   call   0x00007f7ff854720a
  0x00007f7ff854720a:   sub    QWORD PTR [rsp],0x5
  0x00007f7ff854720f:   jmp    0x00007f7ff0aa0f20           ;   {runtime_call DeoptimizationBlob}
  0x00007f7ff8547214:   hlt    
  0x00007f7ff8547215:   hlt    
  0x00007f7ff8547216:   hlt    
  0x00007f7ff8547217:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     411  529 %     4       me.serce.BufferAccessBenchmark::putLong @ 14 (37 bytes)
 total in heap  [0x00007f7ff8547590,0x00007f7ff8547dd8] = 2120
 relocation     [0x00007f7ff85476e8,0x00007f7ff8547708] = 32
 main code      [0x00007f7ff8547720,0x00007f7ff8547a80] = 864
 stub code      [0x00007f7ff8547a80,0x00007f7ff8547a98] = 24
 oops           [0x00007f7ff8547a98,0x00007f7ff8547aa0] = 8
 metadata       [0x00007f7ff8547aa0,0x00007f7ff8547ad8] = 56
 scopes data    [0x00007f7ff8547ad8,0x00007f7ff8547be0] = 264
 scopes pcs     [0x00007f7ff8547be0,0x00007f7ff8547dd0] = 496
 dependencies   [0x00007f7ff8547dd0,0x00007f7ff8547dd8] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f800d124588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f7ff8547720:   call   0x00007f800fde9b10           ;   {runtime_call os::breakpoint()}
  0x00007f7ff8547725:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f7ff8547730:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f7ff8547737:   push   rbp
  0x00007f7ff8547738:   sub    rsp,0x50
  0x00007f7ff854773c:   mov    rbp,QWORD PTR [rsi+0x8]
  0x00007f7ff8547740:   mov    r13,QWORD PTR [rsi+0x10]
  0x00007f7ff8547744:   mov    ebx,DWORD PTR [rsi]
  0x00007f7ff8547746:   mov    rdi,rsi
  0x00007f7ff8547749:   movabs r10,0x7f800fec36d0
  0x00007f7ff8547753:   call   r10
  0x00007f7ff8547756:   test   rbp,rbp
  0x00007f7ff8547759:   je     0x00007f7ff85479f8
  0x00007f7ff854775f:   mov    r11d,DWORD PTR [rbp+0x8]
  0x00007f7ff8547763:   movabs r10,0x8001177d8              ;   {metadata('java/nio/ByteBuffer')}
  0x00007f7ff854776d:   movabs r8,0x800000000
  0x00007f7ff8547777:   lea    r8,[r8+r11*8]
  0x00007f7ff854777b:   mov    r11,QWORD PTR [r8+0x40]
  0x00007f7ff854777f:   nop
  0x00007f7ff8547780:   cmp    r11,r10
  0x00007f7ff8547783:   jne    0x00007f7ff8547a0c           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f7ff8547789:   mov    r10d,DWORD PTR [rbp+0x8]
  0x00007f7ff854778d:   cmp    r10d,0x3f291                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f7ff8547794:   jne    0x00007f7ff85479fa
  0x00007f7ff854779a:   mov    rax,rbp                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff854779d:   data16 xchg ax,ax
  0x00007f7ff85477a0:   cmp    r12d,DWORD PTR [rax+0x24]
  0x00007f7ff85477a4:   jne    0x00007f7ff85479fa
  0x00007f7ff85477aa:   movzx  r11d,BYTE PTR [rax+0x2d]
  0x00007f7ff85477af:   test   r11d,r11d
  0x00007f7ff85477b2:   je     0x00007f7ff85479fa
  0x00007f7ff85477b8:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f7ff85477c0:   cmp    ebx,0x400000
  0x00007f7ff85477c6:   jge    0x00007f7ff85479e8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f7ff85477cc:   mov    r8,QWORD PTR [rax+0x10]
  0x00007f7ff85477d0:   mov    r10d,DWORD PTR [rax+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff85477d4:   mov    r11,r13
  0x00007f7ff85477d7:   bswap  r11                          ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@12 (line 3829)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff85477da:   movsxd rdx,r10d
  0x00007f7ff85477dd:   mov    r9d,ebx
  0x00007f7ff85477e0:   inc    r9d
  0x00007f7ff85477e3:   neg    rdx
  0x00007f7ff85477e6:   mov    rcx,r8                       ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff85477e9:   mov    edi,0x400000
  0x00007f7ff85477ee:   mov    r8,0xffffffff80000001
  0x00007f7ff85477f5:   sub    r8,rdx
  0x00007f7ff85477f8:   mov    r8d,r8d
  0x00007f7ff85477fb:   cmp    r9d,r8d
  0x00007f7ff85477fe:   cmovl  r9d,r8d
  0x00007f7ff8547802:   xor    r14d,r14d
  0x00007f7ff8547805:   cmp    r9d,r14d
  0x00007f7ff8547808:   cmovl  r9d,r14d
  0x00007f7ff854780c:   cmp    r9d,edi
  0x00007f7ff854780f:   cmovg  r9d,edi
  0x00007f7ff8547813:   test   ebx,ebx
  0x00007f7ff8547815:   jl     0x00007f7ff8547a20           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff854781b:   mov    ebp,r10d
  0x00007f7ff854781e:   sub    ebp,ebx                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8547820:   cmp    ebp,0x8
  0x00007f7ff8547823:   jl     0x00007f7ff8547a44           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8547829:   movsxd r8,ebx
  0x00007f7ff854782c:   mov    QWORD PTR [rcx+r8*1],r11     ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8547830:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f7ff8547832:   cmp    ebx,r9d
  0x00007f7ff8547835:   jl     0x00007f7ff8547813           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f7ff8547837:   mov    r9,0xfffffffffffffff9
  0x00007f7ff854783e:   sub    r9,rdx
  0x00007f7ff8547841:   mov    esi,r9d
  0x00007f7ff8547844:   mov    r8d,0x80000000
  0x00007f7ff854784a:   cmp    r9,0xffffffff80000000
  0x00007f7ff8547851:   cmovl  esi,r8d
  0x00007f7ff8547855:   cmp    esi,r8d
  0x00007f7ff8547858:   cmovg  esi,r8d
  0x00007f7ff854785c:   cmp    esi,edi
  0x00007f7ff854785e:   cmovg  esi,edi
  0x00007f7ff8547861:   mov    r9d,esi
  0x00007f7ff8547864:   add    r9d,0xfffffff1
  0x00007f7ff8547868:   cmp    esi,r9d
  0x00007f7ff854786b:   cmovl  r9d,r8d
  0x00007f7ff854786f:   cmp    ebx,r9d
  0x00007f7ff8547872:   jge    0x00007f7ff85479b1           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f7ff8547878:   mov    esi,0x3e80
  0x00007f7ff854787d:   jmp    0x00007f7ff8547887
  0x00007f7ff854787f:   mov    r13,rbp
  0x00007f7ff8547882:   vmovd  r10d,xmm1
  0x00007f7ff8547887:   mov    edi,r9d
  0x00007f7ff854788a:   sub    edi,ebx
  0x00007f7ff854788c:   cmp    r9d,ebx
  0x00007f7ff854788f:   cmovl  edi,r14d
  0x00007f7ff8547893:   cmp    edi,0x3e80
  0x00007f7ff8547899:   cmova  edi,esi
  0x00007f7ff854789c:   add    edi,ebx
  0x00007f7ff854789e:   mov    rbp,r13
  0x00007f7ff85478a1:   vmovd  xmm1,r10d
  0x00007f7ff85478a6:   data16 nop WORD PTR [rax+rax*1+0x0] ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff85478b0:   mov    r8d,ebx
  0x00007f7ff85478b3:   add    r8d,0xf
  0x00007f7ff85478b7:   mov    r10d,ebx
  0x00007f7ff85478ba:   add    r10d,0xe
  0x00007f7ff85478be:   movsxd r13,r8d
  0x00007f7ff85478c1:   movsxd rdx,r10d
  0x00007f7ff85478c4:   movsxd r10,ebx
  0x00007f7ff85478c7:   mov    QWORD PTR [rcx+r10*1],r11
  0x00007f7ff85478cb:   mov    r10d,ebx
  0x00007f7ff85478ce:   inc    r10d
  0x00007f7ff85478d1:   mov    r8d,ebx
  0x00007f7ff85478d4:   add    r8d,0x2
  0x00007f7ff85478d8:   movsxd r10,r10d
  0x00007f7ff85478db:   mov    QWORD PTR [rcx+r10*1],r11
  0x00007f7ff85478df:   movsxd r10,r8d
  0x00007f7ff85478e2:   mov    QWORD PTR [rcx+r10*1],r11
  0x00007f7ff85478e6:   mov    r10d,ebx
  0x00007f7ff85478e9:   add    r10d,0x3
  0x00007f7ff85478ed:   mov    r8d,ebx
  0x00007f7ff85478f0:   add    r8d,0x4
  0x00007f7ff85478f4:   movsxd r10,r10d
  0x00007f7ff85478f7:   mov    QWORD PTR [rcx+r10*1],r11
  0x00007f7ff85478fb:   movsxd r10,r8d
  0x00007f7ff85478fe:   mov    QWORD PTR [rcx+r10*1],r11
  0x00007f7ff8547902:   mov    r10d,ebx
  0x00007f7ff8547905:   add    r10d,0x5
  0x00007f7ff8547909:   mov    r8d,ebx
  0x00007f7ff854790c:   add    r8d,0x6
  0x00007f7ff8547910:   movsxd r10,r10d
  0x00007f7ff8547913:   mov    QWORD PTR [rcx+r10*1],r11
  0x00007f7ff8547917:   movsxd r10,r8d
  0x00007f7ff854791a:   mov    QWORD PTR [rcx+r10*1],r11
  0x00007f7ff854791e:   mov    r10d,ebx
  0x00007f7ff8547921:   add    r10d,0x7
  0x00007f7ff8547925:   mov    r8d,ebx
  0x00007f7ff8547928:   add    r8d,0x8
  0x00007f7ff854792c:   movsxd r10,r10d
  0x00007f7ff854792f:   mov    QWORD PTR [rcx+r10*1],r11
  0x00007f7ff8547933:   movsxd r10,r8d
  0x00007f7ff8547936:   mov    QWORD PTR [rcx+r10*1],r11
  0x00007f7ff854793a:   mov    r10d,ebx
  0x00007f7ff854793d:   add    r10d,0x9
  0x00007f7ff8547941:   mov    r8d,ebx
  0x00007f7ff8547944:   add    r8d,0xa
  0x00007f7ff8547948:   movsxd r10,r10d
  0x00007f7ff854794b:   mov    QWORD PTR [rcx+r10*1],r11
  0x00007f7ff854794f:   movsxd r10,r8d
  0x00007f7ff8547952:   mov    QWORD PTR [rcx+r10*1],r11
  0x00007f7ff8547956:   mov    r10d,ebx
  0x00007f7ff8547959:   add    r10d,0xb
  0x00007f7ff854795d:   mov    r8d,ebx
  0x00007f7ff8547960:   add    r8d,0xc
  0x00007f7ff8547964:   movsxd r10,r10d
  0x00007f7ff8547967:   mov    QWORD PTR [rcx+r10*1],r11
  0x00007f7ff854796b:   movsxd r10,r8d
  0x00007f7ff854796e:   mov    QWORD PTR [rcx+r10*1],r11
  0x00007f7ff8547972:   mov    r10d,ebx
  0x00007f7ff8547975:   add    r10d,0xd
  0x00007f7ff8547979:   movsxd r10,r10d
  0x00007f7ff854797c:   mov    QWORD PTR [rcx+r10*1],r11
  0x00007f7ff8547980:   mov    QWORD PTR [rcx+rdx*1],r11
  0x00007f7ff8547984:   mov    QWORD PTR [rcx+r13*1],r11    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8547988:   add    ebx,0x10                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f7ff854798b:   cmp    ebx,edi
  0x00007f7ff854798d:   jl     0x00007f7ff85478b0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f7ff8547993:   mov    r10,QWORD PTR [r15+0x110]    ; ImmutableOopMap {rax=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f7ff854799a:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {poll}
  0x00007f7ff854799d:   data16 xchg ax,ax
  0x00007f7ff85479a0:   cmp    ebx,r9d
  0x00007f7ff85479a3:   jl     0x00007f7ff854787f
  0x00007f7ff85479a9:   mov    r13,rbp
  0x00007f7ff85479ac:   vmovd  r10d,xmm1
  0x00007f7ff85479b1:   cmp    ebx,0x400000
  0x00007f7ff85479b7:   jge    0x00007f7ff85479e8
  0x00007f7ff85479b9:   data16 xchg ax,ax
  0x00007f7ff85479bc:   nop    DWORD PTR [rax+0x0]
  0x00007f7ff85479c0:   test   ebx,ebx
  0x00007f7ff85479c2:   jl     0x00007f7ff8547a20           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff85479c8:   mov    ebp,r10d
  0x00007f7ff85479cb:   sub    ebp,ebx                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff85479cd:   cmp    ebp,0x8
  0x00007f7ff85479d0:   jl     0x00007f7ff8547a44           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff85479d6:   movsxd r8,ebx
  0x00007f7ff85479d9:   mov    QWORD PTR [rcx+r8*1],r11     ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff85479dd:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f7ff85479df:   nop
  0x00007f7ff85479e0:   cmp    ebx,0x400000
  0x00007f7ff85479e6:   jl     0x00007f7ff85479bc           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f7ff85479e8:   add    rsp,0x50
  0x00007f7ff85479ec:   pop    rbp
  0x00007f7ff85479ed:   mov    r10,QWORD PTR [r15+0x110]
  0x00007f7ff85479f4:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f7ff85479f7:   ret    
  0x00007f7ff85479f8:   xor    ebp,ebp
  0x00007f7ff85479fa:   mov    esi,0xffffffbe
  0x00007f7ff85479ff:   mov    QWORD PTR [rsp],r13
  0x00007f7ff8547a03:   mov    DWORD PTR [rsp+0x8],ebx
  0x00007f7ff8547a07:   call   0x00007f7ff0a59e80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f7ff8547a0c:   mov    esi,0xffffff8d
  0x00007f7ff8547a11:   mov    QWORD PTR [rsp],r13
  0x00007f7ff8547a15:   mov    DWORD PTR [rsp+0x8],ebx
  0x00007f7ff8547a19:   xchg   ax,ax
  0x00007f7ff8547a1b:   call   0x00007f7ff0a59e80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f7ff8547a20:   mov    esi,0xffffff45
  0x00007f7ff8547a25:   mov    QWORD PTR [rsp+0x10],rax
  0x00007f7ff8547a2a:   mov    QWORD PTR [rsp+0x18],r13
  0x00007f7ff8547a2f:   mov    QWORD PTR [rsp+0x20],rax
  0x00007f7ff8547a34:   mov    DWORD PTR [rsp+0xc],ebx
  0x00007f7ff8547a38:   mov    DWORD PTR [rsp+0x38],ebx
  0x00007f7ff8547a3c:   data16 xchg ax,ax
  0x00007f7ff8547a3f:   call   0x00007f7ff0a59e80           ; ImmutableOopMap {[16]=Oop [32]=Oop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f7ff8547a44:   mov    esi,0xffffff45
  0x00007f7ff8547a49:   mov    QWORD PTR [rsp+0x18],rax
  0x00007f7ff8547a4e:   mov    QWORD PTR [rsp+0x20],r13
  0x00007f7ff8547a53:   mov    QWORD PTR [rsp+0x28],rax
  0x00007f7ff8547a58:   mov    DWORD PTR [rsp+0x14],ebx
  0x00007f7ff8547a5c:   data16 xchg ax,ax
  0x00007f7ff8547a5f:   call   0x00007f7ff0a59e80           ; ImmutableOopMap {[24]=Oop [40]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f7ff8547a64:   hlt    
  0x00007f7ff8547a65:   hlt    
  0x00007f7ff8547a66:   hlt    
  0x00007f7ff8547a67:   hlt    
  0x00007f7ff8547a68:   hlt    
  0x00007f7ff8547a69:   hlt    
  0x00007f7ff8547a6a:   hlt    
  0x00007f7ff8547a6b:   hlt    
  0x00007f7ff8547a6c:   hlt    
  0x00007f7ff8547a6d:   hlt    
  0x00007f7ff8547a6e:   hlt    
  0x00007f7ff8547a6f:   hlt    
  0x00007f7ff8547a70:   hlt    
  0x00007f7ff8547a71:   hlt    
  0x00007f7ff8547a72:   hlt    
  0x00007f7ff8547a73:   hlt    
  0x00007f7ff8547a74:   hlt    
  0x00007f7ff8547a75:   hlt    
  0x00007f7ff8547a76:   hlt    
  0x00007f7ff8547a77:   hlt    
  0x00007f7ff8547a78:   hlt    
  0x00007f7ff8547a79:   hlt    
  0x00007f7ff8547a7a:   hlt    
  0x00007f7ff8547a7b:   hlt    
  0x00007f7ff8547a7c:   hlt    
  0x00007f7ff8547a7d:   hlt    
  0x00007f7ff8547a7e:   hlt    
  0x00007f7ff8547a7f:   hlt    
[Exception Handler]
  0x00007f7ff8547a80:   jmp    0x00007f7ff0abd280           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f7ff8547a85:   call   0x00007f7ff8547a8a
  0x00007f7ff8547a8a:   sub    QWORD PTR [rsp],0x5
  0x00007f7ff8547a8f:   jmp    0x00007f7ff0aa0f20           ;   {runtime_call DeoptimizationBlob}
  0x00007f7ff8547a94:   hlt    
  0x00007f7ff8547a95:   hlt    
  0x00007f7ff8547a96:   hlt    
  0x00007f7ff8547a97:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     433  530       4       me.serce.BufferAccessBenchmark::putLong (37 bytes)
 total in heap  [0x00007f7ff8547e10,0x00007f7ff85484c8] = 1720
 relocation     [0x00007f7ff8547f68,0x00007f7ff8547f80] = 24
 main code      [0x00007f7ff8547f80,0x00007f7ff85481a0] = 544
 stub code      [0x00007f7ff85481a0,0x00007f7ff85481b8] = 24
 oops           [0x00007f7ff85481b8,0x00007f7ff85481c0] = 8
 metadata       [0x00007f7ff85481c0,0x00007f7ff85481f8] = 56
 scopes data    [0x00007f7ff85481f8,0x00007f7ff85482d0] = 216
 scopes pcs     [0x00007f7ff85482d0,0x00007f7ff85484b0] = 480
 dependencies   [0x00007f7ff85484b0,0x00007f7ff85484b8] = 8
 nul chk table  [0x00007f7ff85484b8,0x00007f7ff85484c8] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f800d124588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  # this:     rsi:rsi   = 'me/serce/BufferAccessBenchmark'
  # parm0:    rdx:rdx   = 'org/openjdk/jmh/infra/Blackhole'
  #           [sp+0x60]  (sp of caller)
  0x00007f7ff8547f80:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f7ff8547f84:   shl    r10,0x3
  0x00007f7ff8547f88:   movabs r11,0x800000000
  0x00007f7ff8547f92:   add    r10,r11
  0x00007f7ff8547f95:   cmp    rax,r10
  0x00007f7ff8547f98:   jne    0x00007f7ff0a9e700           ;   {runtime_call ic_miss_stub}
  0x00007f7ff8547f9e:   xchg   ax,ax
[Verified Entry Point]
  0x00007f7ff8547fa0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f7ff8547fa7:   push   rbp
  0x00007f7ff8547fa8:   sub    rsp,0x50                     ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
  0x00007f7ff8547fac:   mov    rdx,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@1 (line 64)
  0x00007f7ff8547fb0:   mov    ebp,DWORD PTR [rsi+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@6 (line 65)
  0x00007f7ff8547fb3:   mov    r11d,DWORD PTR [rbp+0x8]     ; implicit exception: dispatches to 0x00007f7ff8548158
  0x00007f7ff8547fb7:   nop    WORD PTR [rax+rax*1+0x0]
  0x00007f7ff8547fc0:   cmp    r11d,0x3f291                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f7ff8547fc7:   jne    0x00007f7ff8548158
  0x00007f7ff8547fcd:   mov    rdi,rbp                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8547fd0:   cmp    r12d,DWORD PTR [rdi+0x24]
  0x00007f7ff8547fd4:   jne    0x00007f7ff8548158
  0x00007f7ff8547fda:   movzx  r11d,BYTE PTR [rdi+0x2d]
  0x00007f7ff8547fdf:   nop
  0x00007f7ff8547fe0:   test   r11d,r11d
  0x00007f7ff8547fe3:   je     0x00007f7ff8548158
  0x00007f7ff8547fe9:   mov    r11,QWORD PTR [rdi+0x10]
  0x00007f7ff8547fed:   mov    r10d,DWORD PTR [rdi+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8547ff1:   mov    rsi,rdx
  0x00007f7ff8547ff4:   bswap  rsi                          ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@12 (line 3829)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8547ff7:   movsxd rbp,r10d
  0x00007f7ff8547ffa:   mov    rcx,r11                      ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8547ffd:   neg    rbp
  0x00007f7ff8548000:   mov    ebx,0x1
  0x00007f7ff8548005:   xor    r8d,r8d
  0x00007f7ff8548008:   mov    eax,0x400000
  0x00007f7ff854800d:   mov    r11,0xffffffff80000001
  0x00007f7ff8548014:   sub    r11,rbp
  0x00007f7ff8548017:   mov    r11d,r11d
  0x00007f7ff854801a:   cmp    r11d,ebx
  0x00007f7ff854801d:   cmovl  r11d,ebx
  0x00007f7ff8548021:   cmp    r11d,eax
  0x00007f7ff8548024:   cmovg  r11d,eax
  0x00007f7ff8548028:   xor    ebx,ebx                      ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 67)
  0x00007f7ff854802a:   mov    r9d,r10d
  0x00007f7ff854802d:   sub    r9d,ebx                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8548030:   cmp    r9d,0x8
  0x00007f7ff8548034:   jl     0x00007f7ff8548168           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff854803a:   movsxd r9,ebx
  0x00007f7ff854803d:   mov    QWORD PTR [rcx+r9*1],rsi     ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8548041:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f7ff8548043:   cmp    ebx,r11d
  0x00007f7ff8548046:   jl     0x00007f7ff854802a           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f7ff8548048:   mov    r13,0xfffffffffffffff9
  0x00007f7ff854804f:   sub    r13,rbp
  0x00007f7ff8548052:   mov    r11d,r13d
  0x00007f7ff8548055:   mov    r9d,0x80000000
  0x00007f7ff854805b:   cmp    r13,0xffffffff80000000
  0x00007f7ff8548062:   cmovl  r11d,r9d
  0x00007f7ff8548066:   cmp    r11d,eax
  0x00007f7ff8548069:   cmovg  r11d,eax
  0x00007f7ff854806d:   mov    eax,r11d
  0x00007f7ff8548070:   add    eax,0xfffffff1
  0x00007f7ff8548073:   cmp    r11d,eax
  0x00007f7ff8548076:   cmovl  eax,r9d
  0x00007f7ff854807a:   cmp    ebx,eax
  0x00007f7ff854807c:   nop    DWORD PTR [rax+0x0]
  0x00007f7ff8548080:   jge    0x00007f7ff8548117           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f7ff8548086:   mov    r9d,0x3e80
  0x00007f7ff854808c:   mov    r11d,eax
  0x00007f7ff854808f:   sub    r11d,ebx
  0x00007f7ff8548092:   cmp    eax,ebx
  0x00007f7ff8548094:   cmovl  r11d,r8d
  0x00007f7ff8548098:   cmp    r11d,0x3e80
  0x00007f7ff854809f:   cmova  r11d,r9d
  0x00007f7ff85480a3:   add    r11d,ebx
  0x00007f7ff85480a6:   data16 nop WORD PTR [rax+rax*1+0x0] ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 67)
  0x00007f7ff85480b0:   movsxd rbp,ebx
  0x00007f7ff85480b3:   mov    r13,rcx
  0x00007f7ff85480b6:   add    r13,rbp
  0x00007f7ff85480b9:   mov    QWORD PTR [r13+0x0],rsi
  0x00007f7ff85480bd:   mov    QWORD PTR [r13+0x1],rsi
  0x00007f7ff85480c1:   mov    QWORD PTR [r13+0x2],rsi
  0x00007f7ff85480c5:   mov    QWORD PTR [r13+0x3],rsi
  0x00007f7ff85480c9:   mov    QWORD PTR [r13+0x4],rsi
  0x00007f7ff85480cd:   mov    QWORD PTR [r13+0x5],rsi
  0x00007f7ff85480d1:   mov    QWORD PTR [r13+0x6],rsi
  0x00007f7ff85480d5:   mov    QWORD PTR [r13+0x7],rsi
  0x00007f7ff85480d9:   mov    QWORD PTR [r13+0x8],rsi
  0x00007f7ff85480dd:   mov    QWORD PTR [r13+0x9],rsi
  0x00007f7ff85480e1:   mov    QWORD PTR [r13+0xa],rsi
  0x00007f7ff85480e5:   mov    QWORD PTR [r13+0xb],rsi
  0x00007f7ff85480e9:   mov    QWORD PTR [r13+0xc],rsi
  0x00007f7ff85480ed:   mov    QWORD PTR [r13+0xd],rsi
  0x00007f7ff85480f1:   mov    QWORD PTR [r13+0xe],rsi
  0x00007f7ff85480f5:   mov    QWORD PTR [r13+0xf],rsi      ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff85480f9:   add    ebx,0x10                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f7ff85480fc:   nop    DWORD PTR [rax+0x0]
  0x00007f7ff8548100:   cmp    ebx,r11d
  0x00007f7ff8548103:   jl     0x00007f7ff85480b0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f7ff8548105:   mov    r11,QWORD PTR [r15+0x110]    ; ImmutableOopMap {rdi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f7ff854810c:   test   DWORD PTR [r11],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {poll}
  0x00007f7ff854810f:   cmp    ebx,eax
  0x00007f7ff8548111:   jl     0x00007f7ff854808c
  0x00007f7ff8548117:   nop    WORD PTR [rax+rax*1+0x0]
  0x00007f7ff8548120:   cmp    ebx,0x400000
  0x00007f7ff8548126:   jge    0x00007f7ff8548148           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 67)
  0x00007f7ff8548128:   mov    r9d,r10d
  0x00007f7ff854812b:   sub    r9d,ebx                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff854812e:   cmp    r9d,0x8
  0x00007f7ff8548132:   jl     0x00007f7ff8548168           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff8548134:   movsxd r11,ebx
  0x00007f7ff8548137:   mov    QWORD PTR [rcx+r11*1],rsi    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f7ff854813b:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f7ff854813d:   data16 xchg ax,ax
  0x00007f7ff8548140:   cmp    ebx,0x400000
  0x00007f7ff8548146:   jl     0x00007f7ff8548128
  0x00007f7ff8548148:   add    rsp,0x50
  0x00007f7ff854814c:   pop    rbp
  0x00007f7ff854814d:   mov    r10,QWORD PTR [r15+0x110]
  0x00007f7ff8548154:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f7ff8548157:   ret                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f7ff8548158:   mov    esi,0xffffff76
  0x00007f7ff854815d:   mov    QWORD PTR [rsp],rdx
  0x00007f7ff8548161:   xchg   ax,ax
  0x00007f7ff8548163:   call   0x00007f7ff0a59e80           ; ImmutableOopMap {rbp=NarrowOop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@18 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f7ff8548168:   mov    esi,0xffffff45
  0x00007f7ff854816d:   mov    QWORD PTR [rsp+0x10],rdi
  0x00007f7ff8548172:   mov    QWORD PTR [rsp+0x18],rdx
  0x00007f7ff8548177:   mov    QWORD PTR [rsp+0x20],rdi
  0x00007f7ff854817c:   mov    DWORD PTR [rsp+0xc],ebx
  0x00007f7ff8548180:   mov    DWORD PTR [rsp+0x30],r9d
  0x00007f7ff8548185:   xchg   ax,ax
  0x00007f7ff8548187:   call   0x00007f7ff0a59e80           ; ImmutableOopMap {[16]=Oop [32]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f7ff854818c:   hlt    
  0x00007f7ff854818d:   hlt    
  0x00007f7ff854818e:   hlt    
  0x00007f7ff854818f:   hlt    
  0x00007f7ff8548190:   hlt    
  0x00007f7ff8548191:   hlt    
  0x00007f7ff8548192:   hlt    
  0x00007f7ff8548193:   hlt    
  0x00007f7ff8548194:   hlt    
  0x00007f7ff8548195:   hlt    
  0x00007f7ff8548196:   hlt    
  0x00007f7ff8548197:   hlt    
  0x00007f7ff8548198:   hlt    
  0x00007f7ff8548199:   hlt    
  0x00007f7ff854819a:   hlt    
  0x00007f7ff854819b:   hlt    
  0x00007f7ff854819c:   hlt    
  0x00007f7ff854819d:   hlt    
  0x00007f7ff854819e:   hlt    
  0x00007f7ff854819f:   hlt    
[Exception Handler]
  0x00007f7ff85481a0:   jmp    0x00007f7ff0abd280           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f7ff85481a5:   call   0x00007f7ff85481aa
  0x00007f7ff85481aa:   sub    QWORD PTR [rsp],0x5
  0x00007f7ff85481af:   jmp    0x00007f7ff0aa0f20           ;   {runtime_call DeoptimizationBlob}
  0x00007f7ff85481b4:   hlt    
  0x00007f7ff85481b5:   hlt    
  0x00007f7ff85481b6:   hlt    
  0x00007f7ff85481b7:   hlt    
--------------------------------------------------------------------------------
2040793.991 ns/op
Iteration   1: 2026687.723 ns/op
Iteration   2: 2026603.961 ns/op
Iteration   3: 2026536.060 ns/op


Result "me.serce.BufferAccessBenchmark.putLong":
  2026609.248 ±(99.9%) 1385.967 ns/op [Average]
  (min, avg, max) = (2026536.060, 2026609.248, 2026687.723), stdev = 75.970
  CI (99.9%): [2025223.281, 2027995.215] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+8
# VM invoker: /usr/lib/jvm/zulu-15-amd64/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:PrintAssemblyOptions=intel -XX:CompileCommand=print,*BufferAccessBenchmark.putLong*
# Warmup: 1 iterations, 10 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: me.serce.BufferAccessBenchmark.putLong
# Parameters: (bufferType = direct-native)

# Run progress: 33.33% complete, ETA 00:01:20
# Fork: 1 of 1
CompileCommand: print *BufferAccessBenchmark.putLong*
OpenJDK 64-Bit Server VM warning: printing of assembly code is enabled; turning on DebugNonSafepoints to gain additional output
# Warmup Iteration   1: 
============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     292  500 %     3       me.serce.BufferAccessBenchmark::putLong @ 14 (37 bytes)
 total in heap  [0x00007f548d091b10,0x00007f548d092150] = 1600
 relocation     [0x00007f548d091c68,0x00007f548d091cb0] = 72
 main code      [0x00007f548d091cc0,0x00007f548d091f60] = 672
 stub code      [0x00007f548d091f60,0x00007f548d091fa0] = 64
 oops           [0x00007f548d091fa0,0x00007f548d091fa8] = 8
 metadata       [0x00007f548d091fa8,0x00007f548d091fb0] = 8
 scopes data    [0x00007f548d091fb0,0x00007f548d092038] = 136
 scopes pcs     [0x00007f548d092038,0x00007f548d092138] = 256
 dependencies   [0x00007f548d092138,0x00007f548d092140] = 8
 nul chk table  [0x00007f548d092140,0x00007f548d092150] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f5481784588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f548d091cc0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f548d091cc4:   shl    r10,0x3
  0x00007f548d091cc8:   movabs r11,0x800000000
  0x00007f548d091cd2:   add    r10,r11
  0x00007f548d091cd5:   cmp    r10,rax
  0x00007f548d091cd8:   jne    0x00007f548ca9e700           ;   {runtime_call ic_miss_stub}
  0x00007f548d091cde:   xchg   ax,ax
[Verified Entry Point]
  0x00007f548d091ce0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f548d091ce7:   push   rbp
  0x00007f548d091ce8:   sub    rsp,0x60
  0x00007f548d091cec:   movabs rdi,0x7f54817bcd28           ;   {metadata(method data for {method} {0x00007f5481784588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f548d091cf6:   mov    ebx,DWORD PTR [rdi+0x12c]
  0x00007f548d091cfc:   add    ebx,0x2
  0x00007f548d091cff:   mov    DWORD PTR [rdi+0x12c],ebx
  0x00007f548d091d05:   and    ebx,0x7fe
  0x00007f548d091d0b:   cmp    ebx,0x0
  0x00007f548d091d0e:   je     0x00007f548d091eda           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@0 (line 64)
  0x00007f548d091d14:   mov    rdi,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@1 (line 64)
  0x00007f548d091d18:   mov    esi,DWORD PTR [rsi+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@6 (line 65)
  0x00007f548d091d1b:   mov    ebx,0x0
  0x00007f548d091d20:   jmp    0x00007f548d091e46           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f548d091d25:   data16 xchg ax,ax
  0x00007f548d091d28:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x00007f548d091efb
  0x00007f548d091d2b:   mov    rdx,rsi
  0x00007f548d091d2e:   movabs rcx,0x7f54817bcd28           ;   {metadata(method data for {method} {0x00007f5481784588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f548d091d38:   mov    edx,DWORD PTR [rdx+0x8]
  0x00007f548d091d3b:   shl    rdx,0x3
  0x00007f548d091d3f:   movabs r10,0x800000000
  0x00007f548d091d49:   add    rdx,r10
  0x00007f548d091d4c:   cmp    rdx,QWORD PTR [rcx+0x1a0]
  0x00007f548d091d53:   jne    0x00007f548d091d62
  0x00007f548d091d55:   add    QWORD PTR [rcx+0x1a8],0x1
  0x00007f548d091d5d:   jmp    0x00007f548d091dc8
  0x00007f548d091d62:   cmp    rdx,QWORD PTR [rcx+0x1b0]
  0x00007f548d091d69:   jne    0x00007f548d091d78
  0x00007f548d091d6b:   add    QWORD PTR [rcx+0x1b8],0x1
  0x00007f548d091d73:   jmp    0x00007f548d091dc8
  0x00007f548d091d78:   cmp    QWORD PTR [rcx+0x1a0],0x0
  0x00007f548d091d83:   jne    0x00007f548d091d9c
  0x00007f548d091d85:   mov    QWORD PTR [rcx+0x1a0],rdx
  0x00007f548d091d8c:   mov    QWORD PTR [rcx+0x1a8],0x1
  0x00007f548d091d97:   jmp    0x00007f548d091dc8
  0x00007f548d091d9c:   cmp    QWORD PTR [rcx+0x1b0],0x0
  0x00007f548d091da7:   jne    0x00007f548d091dc0
  0x00007f548d091da9:   mov    QWORD PTR [rcx+0x1b0],rdx
  0x00007f548d091db0:   mov    QWORD PTR [rcx+0x1b8],0x1
  0x00007f548d091dbb:   jmp    0x00007f548d091dc8
  0x00007f548d091dc0:   add    QWORD PTR [rcx+0x190],0x1
  0x00007f548d091dc8:   mov    rdx,rbx
  0x00007f548d091dcb:   mov    rcx,rdi
  0x00007f548d091dce:   mov    rax,rsi
  0x00007f548d091dd1:   mov    rsi,rax                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f548d091dd4:   mov    QWORD PTR [rsp+0x48],rdi
  0x00007f548d091dd9:   mov    QWORD PTR [rsp+0x40],rax
  0x00007f548d091dde:   mov    DWORD PTR [rsp+0x2c],ebx
  0x00007f548d091de2:   data16 xchg ax,ax
  0x00007f548d091de5:   movabs rax,0x8001f9488
  0x00007f548d091def:   call   0x00007f5494544500           ; ImmutableOopMap {[64]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {virtual_call}
  0x00007f548d091df4:   mov    ebx,DWORD PTR [rsp+0x2c]
  0x00007f548d091df8:   inc    ebx
  0x00007f548d091dfa:   movabs rsi,0x7f54817bcd28           ;   {metadata(method data for {method} {0x00007f5481784588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f548d091e04:   mov    edi,DWORD PTR [rsi+0x130]
  0x00007f548d091e0a:   add    edi,0x2
  0x00007f548d091e0d:   mov    DWORD PTR [rsi+0x130],edi
  0x00007f548d091e13:   and    edi,0x3ffe
  0x00007f548d091e19:   cmp    edi,0x0
  0x00007f548d091e1c:   je     0x00007f548d091f00           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f548d091e22:   mov    r10,QWORD PTR [r15+0x110]    ; ImmutableOopMap {[64]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f548d091e29:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00007f548d091e2c:   movabs rsi,0x7f54817bcd28           ;   {metadata(method data for {method} {0x00007f5481784588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f548d091e36:   inc    DWORD PTR [rsi+0x1c8]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f548d091e3c:   mov    rsi,QWORD PTR [rsp+0x40]
  0x00007f548d091e41:   mov    rdi,QWORD PTR [rsp+0x48]
  0x00007f548d091e46:   cmp    ebx,0x400000
  0x00007f548d091e4c:   movabs rdx,0x7f54817bcd28           ;   {metadata(method data for {method} {0x00007f5481784588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f548d091e56:   movabs rcx,0x180
  0x00007f548d091e60:   jl     0x00007f548d091e70
  0x00007f548d091e66:   movabs rcx,0x170
  0x00007f548d091e70:   mov    rax,QWORD PTR [rdx+rcx*1]
  0x00007f548d091e74:   lea    rax,[rax+0x1]
  0x00007f548d091e78:   mov    QWORD PTR [rdx+rcx*1],rax
  0x00007f548d091e7c:   jl     0x00007f548d091d28           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f548d091e82:   add    rsp,0x60
  0x00007f548d091e86:   pop    rbp
  0x00007f548d091e87:   mov    r10,QWORD PTR [r15+0x110]
  0x00007f548d091e8e:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f548d091e91:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@36 (line 69)
  0x00007f548d091e92:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f548d091e99:   push   rbp
  0x00007f548d091e9a:   sub    rsp,0x60
  0x00007f548d091e9e:   mov    rbx,QWORD PTR [rsi+0x10]
  0x00007f548d091ea2:   mov    rax,QWORD PTR [rsi+0x8]
  0x00007f548d091ea6:   mov    edx,DWORD PTR [rsi]
  0x00007f548d091ea8:   mov    rdi,rsi
  0x00007f548d091eab:   mov    QWORD PTR [rsp+0x38],rbx
  0x00007f548d091eb0:   mov    QWORD PTR [rsp+0x30],rax
  0x00007f548d091eb5:   mov    DWORD PTR [rsp+0x28],edx
  0x00007f548d091eb9:   call   0x00007f54a98196d0           ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x00007f548d091ebe:   mov    edx,DWORD PTR [rsp+0x28]
  0x00007f548d091ec2:   mov    rbx,rdx
  0x00007f548d091ec5:   mov    rax,QWORD PTR [rsp+0x30]
  0x00007f548d091eca:   mov    rsi,rax
  0x00007f548d091ecd:   mov    rdx,QWORD PTR [rsp+0x38]
  0x00007f548d091ed2:   mov    rdi,rdx
  0x00007f548d091ed5:   jmp    0x00007f548d091e46
  0x00007f548d091eda:   movabs r10,0x7f5481784588           ;   {metadata({method} {0x00007f5481784588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f548d091ee4:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f548d091ee9:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f548d091ef1:   call   0x00007f548cb50e80           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f548d091ef6:   jmp    0x00007f548d091d14
  0x00007f548d091efb:   call   0x00007f548cb4aca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f548d091f00:   movabs r10,0x7f5481784588           ;   {metadata({method} {0x00007f5481784588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f548d091f0a:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f548d091f0f:   mov    QWORD PTR [rsp],0x21
  0x00007f548d091f17:   call   0x00007f548cb50e80           ; ImmutableOopMap {[64]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f548d091f1c:   jmp    0x00007f548d091e22
  0x00007f548d091f21:   nop
  0x00007f548d091f22:   nop
  0x00007f548d091f23:   mov    rax,QWORD PTR [r15+0x400]
  0x00007f548d091f2a:   movabs r10,0x0
  0x00007f548d091f34:   mov    QWORD PTR [r15+0x400],r10
  0x00007f548d091f3b:   movabs r10,0x0
  0x00007f548d091f45:   mov    QWORD PTR [r15+0x408],r10
  0x00007f548d091f4c:   add    rsp,0x60
  0x00007f548d091f50:   pop    rbp
  0x00007f548d091f51:   jmp    0x00007f548cb49d00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f548d091f56:   hlt    
  0x00007f548d091f57:   hlt    
  0x00007f548d091f58:   hlt    
  0x00007f548d091f59:   hlt    
  0x00007f548d091f5a:   hlt    
  0x00007f548d091f5b:   hlt    
  0x00007f548d091f5c:   hlt    
  0x00007f548d091f5d:   hlt    
  0x00007f548d091f5e:   hlt    
  0x00007f548d091f5f:   hlt    
[Stub Code]
  0x00007f548d091f60:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x00007f548d091f65:   movabs rbx,0x0                      ;   {static_stub}
  0x00007f548d091f6f:   jmp    0x00007f548d091f6f           ;   {runtime_call}
[Exception Handler]
  0x00007f548d091f74:   call   0x00007f548cb4d200           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f548d091f79:   movabs rdi,0x7f54a9af019e           ;   {external_word}
  0x00007f548d091f83:   and    rsp,0xfffffffffffffff0
  0x00007f548d091f87:   call   0x00007f54a9609b90           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f548d091f8c:   hlt    
[Deopt Handler Code]
  0x00007f548d091f8d:   movabs r10,0x7f548d091f8d           ;   {section_word}
  0x00007f548d091f97:   push   r10
  0x00007f548d091f99:   jmp    0x00007f548caa0f20           ;   {runtime_call DeoptimizationBlob}
  0x00007f548d091f9e:   hlt    
  0x00007f548d091f9f:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     309  501 %     4       me.serce.BufferAccessBenchmark::putLong @ 14 (37 bytes)
 total in heap  [0x00007f5494544c90,0x00007f54945454b0] = 2080
 relocation     [0x00007f5494544de8,0x00007f5494544e08] = 32
 main code      [0x00007f5494544e20,0x00007f5494545180] = 864
 stub code      [0x00007f5494545180,0x00007f5494545198] = 24
 oops           [0x00007f5494545198,0x00007f54945451a0] = 8
 metadata       [0x00007f54945451a0,0x00007f54945451d0] = 48
 scopes data    [0x00007f54945451d0,0x00007f54945452b8] = 232
 scopes pcs     [0x00007f54945452b8,0x00007f54945454a8] = 496
 dependencies   [0x00007f54945454a8,0x00007f54945454b0] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f5481784588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f5494544e20:   call   0x00007f54a973fb10           ;   {runtime_call os::breakpoint()}
  0x00007f5494544e25:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f5494544e30:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f5494544e37:   push   rbp
  0x00007f5494544e38:   sub    rsp,0x50
  0x00007f5494544e3c:   mov    r13,QWORD PTR [rsi+0x8]
  0x00007f5494544e40:   mov    rbx,QWORD PTR [rsi+0x10]
  0x00007f5494544e44:   mov    ebp,DWORD PTR [rsi]
  0x00007f5494544e46:   mov    rdi,rsi
  0x00007f5494544e49:   movabs r10,0x7f54a98196d0
  0x00007f5494544e53:   call   r10
  0x00007f5494544e56:   test   r13,r13
  0x00007f5494544e59:   je     0x00007f5494545138
  0x00007f5494544e5f:   mov    r11d,DWORD PTR [r13+0x8]
  0x00007f5494544e63:   movabs r10,0x8001177d8              ;   {metadata('java/nio/ByteBuffer')}
  0x00007f5494544e6d:   movabs r8,0x800000000
  0x00007f5494544e77:   lea    r8,[r8+r11*8]
  0x00007f5494544e7b:   mov    r11,QWORD PTR [r8+0x40]
  0x00007f5494544e7f:   nop
  0x00007f5494544e80:   cmp    r11,r10
  0x00007f5494544e83:   jne    0x00007f5494545150           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f5494544e89:   mov    r10d,DWORD PTR [r13+0x8]
  0x00007f5494544e8d:   cmp    r10d,0x3f291                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f5494544e94:   jne    0x00007f549454513b
  0x00007f5494544e9a:   mov    rax,r13                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494544e9d:   data16 xchg ax,ax
  0x00007f5494544ea0:   cmp    r12d,DWORD PTR [rax+0x24]
  0x00007f5494544ea4:   jne    0x00007f549454513b
  0x00007f5494544eaa:   movzx  r11d,BYTE PTR [rax+0x2d]
  0x00007f5494544eaf:   test   r11d,r11d
  0x00007f5494544eb2:   jne    0x00007f549454513b
  0x00007f5494544eb8:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f5494544ec0:   cmp    ebp,0x400000
  0x00007f5494544ec6:   jge    0x00007f54945450e8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f5494544ecc:   mov    r11,QWORD PTR [rax+0x10]
  0x00007f5494544ed0:   mov    r14d,DWORD PTR [rax+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494544ed4:   mov    r10d,ebp
  0x00007f5494544ed7:   inc    r10d
  0x00007f5494544eda:   movsxd r8,r14d
  0x00007f5494544edd:   mov    rcx,r11                      ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494544ee0:   neg    r8
  0x00007f5494544ee3:   mov    esi,0x400000
  0x00007f5494544ee8:   mov    r11,0xffffffff80000001
  0x00007f5494544eef:   sub    r11,r8
  0x00007f5494544ef2:   mov    r11d,r11d
  0x00007f5494544ef5:   cmp    r10d,r11d
  0x00007f5494544ef8:   cmovl  r10d,r11d
  0x00007f5494544efc:   xor    edx,edx
  0x00007f5494544efe:   cmp    r10d,edx
  0x00007f5494544f01:   cmovl  r10d,edx
  0x00007f5494544f05:   cmp    r10d,esi
  0x00007f5494544f08:   cmovg  r10d,esi
  0x00007f5494544f0c:   test   ebp,ebp
  0x00007f5494544f0e:   jl     0x00007f54945450fc           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494544f14:   mov    r9d,r14d
  0x00007f5494544f17:   sub    r9d,ebp                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494544f1a:   nop    WORD PTR [rax+rax*1+0x0]
  0x00007f5494544f20:   cmp    r9d,0x8
  0x00007f5494544f24:   jl     0x00007f5494545118           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494544f2a:   movsxd r11,ebp
  0x00007f5494544f2d:   mov    QWORD PTR [rcx+r11*1],rbx    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494544f31:   inc    ebp                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f5494544f33:   cmp    ebp,r10d
  0x00007f5494544f36:   jl     0x00007f5494544f0c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f5494544f38:   mov    r11,0xfffffffffffffff9
  0x00007f5494544f3f:   sub    r11,r8
  0x00007f5494544f42:   mov    r10d,r11d
  0x00007f5494544f45:   mov    r8d,0x80000000
  0x00007f5494544f4b:   cmp    r11,0xffffffff80000000
  0x00007f5494544f52:   cmovl  r10d,r8d
  0x00007f5494544f56:   cmp    r10d,r8d
  0x00007f5494544f59:   cmovg  r10d,r8d
  0x00007f5494544f5d:   cmp    r10d,esi
  0x00007f5494544f60:   cmovg  r10d,esi
  0x00007f5494544f64:   mov    r9d,r10d
  0x00007f5494544f67:   add    r9d,0xfffffff1
  0x00007f5494544f6b:   cmp    r10d,r9d
  0x00007f5494544f6e:   cmovl  r9d,r8d
  0x00007f5494544f72:   cmp    ebp,r9d
  0x00007f5494544f75:   jge    0x00007f54945450b3
  0x00007f5494544f7b:   mov    esi,0x3e80
  0x00007f5494544f80:   jmp    0x00007f5494544f9a           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f5494544f82:   mov    r10,QWORD PTR [r15+0x110]    ; ImmutableOopMap {rax=Oop xmm0=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f5494544f89:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {poll}
  0x00007f5494544f8c:   cmp    ebp,r9d
  0x00007f5494544f8f:   jge    0x00007f54945450ae
  0x00007f5494544f95:   vmovq  r13,xmm0
  0x00007f5494544f9a:   mov    r8d,r9d
  0x00007f5494544f9d:   sub    r8d,ebp
  0x00007f5494544fa0:   cmp    r9d,ebp
  0x00007f5494544fa3:   cmovl  r8d,edx
  0x00007f5494544fa7:   cmp    r8d,0x3e80
  0x00007f5494544fae:   cmova  r8d,esi
  0x00007f5494544fb2:   add    r8d,ebp
  0x00007f5494544fb5:   vmovq  xmm0,r13
  0x00007f5494544fba:   nop    WORD PTR [rax+rax*1+0x0]     ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494544fc0:   mov    r11d,ebp
  0x00007f5494544fc3:   add    r11d,0xf
  0x00007f5494544fc7:   mov    r10d,ebp
  0x00007f5494544fca:   add    r10d,0xe
  0x00007f5494544fce:   movsxd r13,r11d
  0x00007f5494544fd1:   movsxd rdi,r10d
  0x00007f5494544fd4:   movsxd r10,ebp
  0x00007f5494544fd7:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f5494544fdb:   mov    r10d,ebp
  0x00007f5494544fde:   inc    r10d
  0x00007f5494544fe1:   mov    r11d,ebp
  0x00007f5494544fe4:   add    r11d,0x2
  0x00007f5494544fe8:   movsxd r10,r10d
  0x00007f5494544feb:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f5494544fef:   movsxd r10,r11d
  0x00007f5494544ff2:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f5494544ff6:   mov    r10d,ebp
  0x00007f5494544ff9:   add    r10d,0x3
  0x00007f5494544ffd:   mov    r11d,ebp
  0x00007f5494545000:   add    r11d,0x4
  0x00007f5494545004:   movsxd r10,r10d
  0x00007f5494545007:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f549454500b:   movsxd r10,r11d
  0x00007f549454500e:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f5494545012:   mov    r10d,ebp
  0x00007f5494545015:   add    r10d,0x5
  0x00007f5494545019:   mov    r11d,ebp
  0x00007f549454501c:   add    r11d,0x6
  0x00007f5494545020:   movsxd r10,r10d
  0x00007f5494545023:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f5494545027:   movsxd r10,r11d
  0x00007f549454502a:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f549454502e:   mov    r10d,ebp
  0x00007f5494545031:   add    r10d,0x7
  0x00007f5494545035:   mov    r11d,ebp
  0x00007f5494545038:   add    r11d,0x8
  0x00007f549454503c:   movsxd r10,r10d
  0x00007f549454503f:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f5494545043:   movsxd r10,r11d
  0x00007f5494545046:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f549454504a:   mov    r10d,ebp
  0x00007f549454504d:   add    r10d,0x9
  0x00007f5494545051:   mov    r11d,ebp
  0x00007f5494545054:   add    r11d,0xa
  0x00007f5494545058:   movsxd r10,r10d
  0x00007f549454505b:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f549454505f:   movsxd r10,r11d
  0x00007f5494545062:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f5494545066:   mov    r10d,ebp
  0x00007f5494545069:   add    r10d,0xb
  0x00007f549454506d:   mov    r11d,ebp
  0x00007f5494545070:   add    r11d,0xc
  0x00007f5494545074:   movsxd r10,r10d
  0x00007f5494545077:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f549454507b:   movsxd r10,r11d
  0x00007f549454507e:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f5494545082:   mov    r10d,ebp
  0x00007f5494545085:   add    r10d,0xd
  0x00007f5494545089:   movsxd r10,r10d
  0x00007f549454508c:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f5494545090:   mov    QWORD PTR [rcx+rdi*1],rbx
  0x00007f5494545094:   mov    QWORD PTR [rcx+r13*1],rbx    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494545098:   add    ebp,0x10                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f549454509b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f54945450a0:   cmp    ebp,r8d
  0x00007f54945450a3:   jl     0x00007f5494544fc0           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f54945450a9:   jmp    0x00007f5494544f82
  0x00007f54945450ae:   vmovq  r13,xmm0
  0x00007f54945450b3:   cmp    ebp,0x400000
  0x00007f54945450b9:   jge    0x00007f54945450e8
  0x00007f54945450bb:   nop
  0x00007f54945450bc:   nop    DWORD PTR [rax+0x0]
  0x00007f54945450c0:   test   ebp,ebp
  0x00007f54945450c2:   jl     0x00007f54945450fc           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f54945450c4:   mov    r9d,r14d
  0x00007f54945450c7:   sub    r9d,ebp                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f54945450ca:   cmp    r9d,0x8
  0x00007f54945450ce:   jl     0x00007f5494545118           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f54945450d0:   movsxd r10,ebp
  0x00007f54945450d3:   mov    QWORD PTR [rcx+r10*1],rbx    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f54945450d7:   inc    ebp                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f54945450d9:   nop    DWORD PTR [rax+0x0]
  0x00007f54945450e0:   cmp    ebp,0x400000
  0x00007f54945450e6:   jl     0x00007f54945450bc           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f54945450e8:   mov    esi,0xffffff45
  0x00007f54945450ed:   mov    QWORD PTR [rsp],rbx
  0x00007f54945450f1:   mov    QWORD PTR [rsp+0x10],r13
  0x00007f54945450f6:   nop
  0x00007f54945450f7:   call   0x00007f548ca59e80           ; ImmutableOopMap {[16]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@18 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f54945450fc:   mov    esi,0xffffff45
  0x00007f5494545101:   mov    QWORD PTR [rsp+0x10],rax
  0x00007f5494545106:   mov    QWORD PTR [rsp+0x18],rbx
  0x00007f549454510b:   mov    QWORD PTR [rsp+0x20],rax
  0x00007f5494545110:   data16 xchg ax,ax
  0x00007f5494545113:   call   0x00007f548ca59e80           ; ImmutableOopMap {[16]=Oop [32]=Oop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f5494545118:   mov    esi,0xffffff45
  0x00007f549454511d:   mov    QWORD PTR [rsp+0x10],rax
  0x00007f5494545122:   mov    QWORD PTR [rsp+0x18],rbx
  0x00007f5494545127:   mov    QWORD PTR [rsp+0x20],rax
  0x00007f549454512c:   mov    DWORD PTR [rsp+0x34],r9d
  0x00007f5494545131:   xchg   ax,ax
  0x00007f5494545133:   call   0x00007f548ca59e80           ; ImmutableOopMap {[16]=Oop [32]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f5494545138:   xor    r13d,r13d
  0x00007f549454513b:   mov    esi,0xffffff76
  0x00007f5494545140:   mov    QWORD PTR [rsp],rbx
  0x00007f5494545144:   mov    QWORD PTR [rsp+0x8],r13
  0x00007f5494545149:   xchg   ax,ax
  0x00007f549454514b:   call   0x00007f548ca59e80           ; ImmutableOopMap {[8]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f5494545150:   mov    esi,0xffffff8d
  0x00007f5494545155:   mov    QWORD PTR [rsp],rbx
  0x00007f5494545159:   mov    QWORD PTR [rsp+0x8],r13
  0x00007f549454515e:   nop
  0x00007f549454515f:   call   0x00007f548ca59e80           ; ImmutableOopMap {[8]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f5494545164:   hlt    
  0x00007f5494545165:   hlt    
  0x00007f5494545166:   hlt    
  0x00007f5494545167:   hlt    
  0x00007f5494545168:   hlt    
  0x00007f5494545169:   hlt    
  0x00007f549454516a:   hlt    
  0x00007f549454516b:   hlt    
  0x00007f549454516c:   hlt    
  0x00007f549454516d:   hlt    
  0x00007f549454516e:   hlt    
  0x00007f549454516f:   hlt    
  0x00007f5494545170:   hlt    
  0x00007f5494545171:   hlt    
  0x00007f5494545172:   hlt    
  0x00007f5494545173:   hlt    
  0x00007f5494545174:   hlt    
  0x00007f5494545175:   hlt    
  0x00007f5494545176:   hlt    
  0x00007f5494545177:   hlt    
  0x00007f5494545178:   hlt    
  0x00007f5494545179:   hlt    
  0x00007f549454517a:   hlt    
  0x00007f549454517b:   hlt    
  0x00007f549454517c:   hlt    
  0x00007f549454517d:   hlt    
  0x00007f549454517e:   hlt    
  0x00007f549454517f:   hlt    
[Exception Handler]
  0x00007f5494545180:   jmp    0x00007f548cb4a000           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f5494545185:   call   0x00007f549454518a
  0x00007f549454518a:   sub    QWORD PTR [rsp],0x5
  0x00007f549454518f:   jmp    0x00007f548caa0f20           ;   {runtime_call DeoptimizationBlob}
  0x00007f5494545194:   hlt    
  0x00007f5494545195:   hlt    
  0x00007f5494545196:   hlt    
  0x00007f5494545197:   hlt    
--------------------------------------------------------------------------------

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     316  502 %     3       me.serce.BufferAccessBenchmark::putLong @ 14 (37 bytes)
 total in heap  [0x00007f548d092190,0x00007f548d0927d0] = 1600
 relocation     [0x00007f548d0922e8,0x00007f548d092330] = 72
 main code      [0x00007f548d092340,0x00007f548d0925e0] = 672
 stub code      [0x00007f548d0925e0,0x00007f548d092620] = 64
 oops           [0x00007f548d092620,0x00007f548d092628] = 8
 metadata       [0x00007f548d092628,0x00007f548d092630] = 8
 scopes data    [0x00007f548d092630,0x00007f548d0926b8] = 136
 scopes pcs     [0x00007f548d0926b8,0x00007f548d0927b8] = 256
 dependencies   [0x00007f548d0927b8,0x00007f548d0927c0] = 8
 nul chk table  [0x00007f548d0927c0,0x00007f548d0927d0] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f5481784588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f548d092340:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f548d092344:   shl    r10,0x3
  0x00007f548d092348:   movabs r11,0x800000000
  0x00007f548d092352:   add    r10,r11
  0x00007f548d092355:   cmp    r10,rax
  0x00007f548d092358:   jne    0x00007f548ca9e700           ;   {runtime_call ic_miss_stub}
  0x00007f548d09235e:   xchg   ax,ax
[Verified Entry Point]
  0x00007f548d092360:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f548d092367:   push   rbp
  0x00007f548d092368:   sub    rsp,0x60
  0x00007f548d09236c:   movabs rdi,0x7f54817bcd28           ;   {metadata(method data for {method} {0x00007f5481784588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f548d092376:   mov    ebx,DWORD PTR [rdi+0x12c]
  0x00007f548d09237c:   add    ebx,0x2
  0x00007f548d09237f:   mov    DWORD PTR [rdi+0x12c],ebx
  0x00007f548d092385:   and    ebx,0x7fe
  0x00007f548d09238b:   cmp    ebx,0x0
  0x00007f548d09238e:   je     0x00007f548d09255a           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@0 (line 64)
  0x00007f548d092394:   mov    rdi,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@1 (line 64)
  0x00007f548d092398:   mov    esi,DWORD PTR [rsi+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@6 (line 65)
  0x00007f548d09239b:   mov    ebx,0x0
  0x00007f548d0923a0:   jmp    0x00007f548d0924c6           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f548d0923a5:   data16 xchg ax,ax
  0x00007f548d0923a8:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x00007f548d09257b
  0x00007f548d0923ab:   mov    rdx,rsi
  0x00007f548d0923ae:   movabs rcx,0x7f54817bcd28           ;   {metadata(method data for {method} {0x00007f5481784588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f548d0923b8:   mov    edx,DWORD PTR [rdx+0x8]
  0x00007f548d0923bb:   shl    rdx,0x3
  0x00007f548d0923bf:   movabs r10,0x800000000
  0x00007f548d0923c9:   add    rdx,r10
  0x00007f548d0923cc:   cmp    rdx,QWORD PTR [rcx+0x1a0]
  0x00007f548d0923d3:   jne    0x00007f548d0923e2
  0x00007f548d0923d5:   add    QWORD PTR [rcx+0x1a8],0x1
  0x00007f548d0923dd:   jmp    0x00007f548d092448
  0x00007f548d0923e2:   cmp    rdx,QWORD PTR [rcx+0x1b0]
  0x00007f548d0923e9:   jne    0x00007f548d0923f8
  0x00007f548d0923eb:   add    QWORD PTR [rcx+0x1b8],0x1
  0x00007f548d0923f3:   jmp    0x00007f548d092448
  0x00007f548d0923f8:   cmp    QWORD PTR [rcx+0x1a0],0x0
  0x00007f548d092403:   jne    0x00007f548d09241c
  0x00007f548d092405:   mov    QWORD PTR [rcx+0x1a0],rdx
  0x00007f548d09240c:   mov    QWORD PTR [rcx+0x1a8],0x1
  0x00007f548d092417:   jmp    0x00007f548d092448
  0x00007f548d09241c:   cmp    QWORD PTR [rcx+0x1b0],0x0
  0x00007f548d092427:   jne    0x00007f548d092440
  0x00007f548d092429:   mov    QWORD PTR [rcx+0x1b0],rdx
  0x00007f548d092430:   mov    QWORD PTR [rcx+0x1b8],0x1
  0x00007f548d09243b:   jmp    0x00007f548d092448
  0x00007f548d092440:   add    QWORD PTR [rcx+0x190],0x1
  0x00007f548d092448:   mov    rdx,rbx
  0x00007f548d09244b:   mov    rcx,rdi
  0x00007f548d09244e:   mov    rax,rsi
  0x00007f548d092451:   mov    rsi,rax                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f548d092454:   mov    QWORD PTR [rsp+0x48],rdi
  0x00007f548d092459:   mov    QWORD PTR [rsp+0x40],rax
  0x00007f548d09245e:   mov    DWORD PTR [rsp+0x2c],ebx
  0x00007f548d092462:   data16 xchg ax,ax
  0x00007f548d092465:   movabs rax,0x8001f9488
  0x00007f548d09246f:   call   0x00007f5494544500           ; ImmutableOopMap {[64]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {virtual_call}
  0x00007f548d092474:   mov    ebx,DWORD PTR [rsp+0x2c]
  0x00007f548d092478:   inc    ebx
  0x00007f548d09247a:   movabs rsi,0x7f54817bcd28           ;   {metadata(method data for {method} {0x00007f5481784588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f548d092484:   mov    edi,DWORD PTR [rsi+0x130]
  0x00007f548d09248a:   add    edi,0x2
  0x00007f548d09248d:   mov    DWORD PTR [rsi+0x130],edi
  0x00007f548d092493:   and    edi,0x3ffe
  0x00007f548d092499:   cmp    edi,0x0
  0x00007f548d09249c:   je     0x00007f548d092580           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f548d0924a2:   mov    r10,QWORD PTR [r15+0x110]    ; ImmutableOopMap {[64]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f548d0924a9:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00007f548d0924ac:   movabs rsi,0x7f54817bcd28           ;   {metadata(method data for {method} {0x00007f5481784588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f548d0924b6:   inc    DWORD PTR [rsi+0x1c8]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f548d0924bc:   mov    rsi,QWORD PTR [rsp+0x40]
  0x00007f548d0924c1:   mov    rdi,QWORD PTR [rsp+0x48]
  0x00007f548d0924c6:   cmp    ebx,0x400000
  0x00007f548d0924cc:   movabs rdx,0x7f54817bcd28           ;   {metadata(method data for {method} {0x00007f5481784588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f548d0924d6:   movabs rcx,0x180
  0x00007f548d0924e0:   jl     0x00007f548d0924f0
  0x00007f548d0924e6:   movabs rcx,0x170
  0x00007f548d0924f0:   mov    rax,QWORD PTR [rdx+rcx*1]
  0x00007f548d0924f4:   lea    rax,[rax+0x1]
  0x00007f548d0924f8:   mov    QWORD PTR [rdx+rcx*1],rax
  0x00007f548d0924fc:   jl     0x00007f548d0923a8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f548d092502:   add    rsp,0x60
  0x00007f548d092506:   pop    rbp
  0x00007f548d092507:   mov    r10,QWORD PTR [r15+0x110]
  0x00007f548d09250e:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f548d092511:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@36 (line 69)
  0x00007f548d092512:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f548d092519:   push   rbp
  0x00007f548d09251a:   sub    rsp,0x60
  0x00007f548d09251e:   mov    rbx,QWORD PTR [rsi+0x10]
  0x00007f548d092522:   mov    rax,QWORD PTR [rsi+0x8]
  0x00007f548d092526:   mov    edx,DWORD PTR [rsi]
  0x00007f548d092528:   mov    rdi,rsi
  0x00007f548d09252b:   mov    QWORD PTR [rsp+0x38],rbx
  0x00007f548d092530:   mov    QWORD PTR [rsp+0x30],rax
  0x00007f548d092535:   mov    DWORD PTR [rsp+0x28],edx
  0x00007f548d092539:   call   0x00007f54a98196d0           ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x00007f548d09253e:   mov    edx,DWORD PTR [rsp+0x28]
  0x00007f548d092542:   mov    rbx,rdx
  0x00007f548d092545:   mov    rax,QWORD PTR [rsp+0x30]
  0x00007f548d09254a:   mov    rsi,rax
  0x00007f548d09254d:   mov    rdx,QWORD PTR [rsp+0x38]
  0x00007f548d092552:   mov    rdi,rdx
  0x00007f548d092555:   jmp    0x00007f548d0924c6
  0x00007f548d09255a:   movabs r10,0x7f5481784588           ;   {metadata({method} {0x00007f5481784588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f548d092564:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f548d092569:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f548d092571:   call   0x00007f548cb50e80           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f548d092576:   jmp    0x00007f548d092394
  0x00007f548d09257b:   call   0x00007f548cb4aca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f548d092580:   movabs r10,0x7f5481784588           ;   {metadata({method} {0x00007f5481784588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f548d09258a:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f548d09258f:   mov    QWORD PTR [rsp],0x21
  0x00007f548d092597:   call   0x00007f548cb50e80           ; ImmutableOopMap {[64]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f548d09259c:   jmp    0x00007f548d0924a2
  0x00007f548d0925a1:   nop
  0x00007f548d0925a2:   nop
  0x00007f548d0925a3:   mov    rax,QWORD PTR [r15+0x400]
  0x00007f548d0925aa:   movabs r10,0x0
  0x00007f548d0925b4:   mov    QWORD PTR [r15+0x400],r10
  0x00007f548d0925bb:   movabs r10,0x0
  0x00007f548d0925c5:   mov    QWORD PTR [r15+0x408],r10
  0x00007f548d0925cc:   add    rsp,0x60
  0x00007f548d0925d0:   pop    rbp
  0x00007f548d0925d1:   jmp    0x00007f548cb49d00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f548d0925d6:   hlt    
  0x00007f548d0925d7:   hlt    
  0x00007f548d0925d8:   hlt    
  0x00007f548d0925d9:   hlt    
  0x00007f548d0925da:   hlt    
  0x00007f548d0925db:   hlt    
  0x00007f548d0925dc:   hlt    
  0x00007f548d0925dd:   hlt    
  0x00007f548d0925de:   hlt    
  0x00007f548d0925df:   hlt    
[Stub Code]
  0x00007f548d0925e0:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x00007f548d0925e5:   movabs rbx,0x0                      ;   {static_stub}
  0x00007f548d0925ef:   jmp    0x00007f548d0925ef           ;   {runtime_call}
[Exception Handler]
  0x00007f548d0925f4:   call   0x00007f548cb4d200           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f548d0925f9:   movabs rdi,0x7f54a9af019e           ;   {external_word}
  0x00007f548d092603:   and    rsp,0xfffffffffffffff0
  0x00007f548d092607:   call   0x00007f54a9609b90           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f548d09260c:   hlt    
[Deopt Handler Code]
  0x00007f548d09260d:   movabs r10,0x7f548d09260d           ;   {section_word}
  0x00007f548d092617:   push   r10
  0x00007f548d092619:   jmp    0x00007f548caa0f20           ;   {runtime_call DeoptimizationBlob}
  0x00007f548d09261e:   hlt    
  0x00007f548d09261f:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     328  503 %     4       me.serce.BufferAccessBenchmark::putLong @ 14 (37 bytes)
 total in heap  [0x00007f5494545510,0x00007f5494545d38] = 2088
 relocation     [0x00007f5494545668,0x00007f5494545688] = 32
 main code      [0x00007f54945456a0,0x00007f5494545a00] = 864
 stub code      [0x00007f5494545a00,0x00007f5494545a18] = 24
 oops           [0x00007f5494545a18,0x00007f5494545a20] = 8
 metadata       [0x00007f5494545a20,0x00007f5494545a50] = 48
 scopes data    [0x00007f5494545a50,0x00007f5494545b50] = 256
 scopes pcs     [0x00007f5494545b50,0x00007f5494545d30] = 480
 dependencies   [0x00007f5494545d30,0x00007f5494545d38] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f5481784588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f54945456a0:   call   0x00007f54a973fb10           ;   {runtime_call os::breakpoint()}
  0x00007f54945456a5:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f54945456b0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f54945456b7:   push   rbp
  0x00007f54945456b8:   sub    rsp,0x50
  0x00007f54945456bc:   mov    rbp,QWORD PTR [rsi+0x8]
  0x00007f54945456c0:   mov    rbx,QWORD PTR [rsi+0x10]
  0x00007f54945456c4:   mov    r13d,DWORD PTR [rsi]
  0x00007f54945456c7:   mov    rdi,rsi
  0x00007f54945456ca:   movabs r10,0x7f54a98196d0
  0x00007f54945456d4:   call   r10
  0x00007f54945456d7:   test   rbp,rbp
  0x00007f54945456da:   nop    WORD PTR [rax+rax*1+0x0]
  0x00007f54945456e0:   je     0x00007f5494545979
  0x00007f54945456e6:   mov    r11d,DWORD PTR [rbp+0x8]
  0x00007f54945456ea:   movabs r10,0x8001177d8              ;   {metadata('java/nio/ByteBuffer')}
  0x00007f54945456f4:   movabs r8,0x800000000
  0x00007f54945456fe:   lea    r8,[r8+r11*8]
  0x00007f5494545702:   mov    r11,QWORD PTR [r8+0x40]
  0x00007f5494545706:   cmp    r11,r10
  0x00007f5494545709:   jne    0x00007f5494545990           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f549454570f:   mov    r10d,DWORD PTR [rbp+0x8]
  0x00007f5494545713:   nop    WORD PTR [rax+rax*1+0x0]
  0x00007f549454571c:   data16 data16 xchg ax,ax
  0x00007f5494545720:   cmp    r10d,0x3f291                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f5494545727:   jne    0x00007f549454597b
  0x00007f549454572d:   mov    r14,rbp                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494545730:   cmp    r12d,DWORD PTR [r14+0x24]
  0x00007f5494545734:   jne    0x00007f549454597b
  0x00007f549454573a:   movzx  r11d,BYTE PTR [r14+0x2d]
  0x00007f549454573f:   nop
  0x00007f5494545740:   test   r11d,r11d
  0x00007f5494545743:   jne    0x00007f549454597b
  0x00007f5494545749:   cmp    r13d,0x400000
  0x00007f5494545750:   jge    0x00007f5494545969           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f5494545756:   mov    r11,QWORD PTR [r14+0x10]
  0x00007f549454575a:   mov    r9d,DWORD PTR [r14+0x1c]     ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f549454575e:   mov    r10d,r13d
  0x00007f5494545761:   inc    r10d
  0x00007f5494545764:   movsxd rdi,r9d
  0x00007f5494545767:   mov    rcx,r11                      ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f549454576a:   neg    rdi
  0x00007f549454576d:   mov    r11d,0x400000
  0x00007f5494545773:   mov    r8,0xffffffff80000001
  0x00007f549454577a:   sub    r8,rdi
  0x00007f549454577d:   mov    r8d,r8d
  0x00007f5494545780:   cmp    r10d,r8d
  0x00007f5494545783:   cmovl  r10d,r8d
  0x00007f5494545787:   xor    eax,eax
  0x00007f5494545789:   cmp    r10d,eax
  0x00007f549454578c:   cmovl  r10d,eax
  0x00007f5494545790:   cmp    r10d,r11d
  0x00007f5494545793:   cmovg  r10d,r11d
  0x00007f5494545797:   test   r13d,r13d
  0x00007f549454579a:   nop    WORD PTR [rax+rax*1+0x0]
  0x00007f54945457a0:   jl     0x00007f54945459a4           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f54945457a6:   mov    ebp,r9d
  0x00007f54945457a9:   sub    ebp,r13d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f54945457ac:   cmp    ebp,0x8
  0x00007f54945457af:   jl     0x00007f54945459c8           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f54945457b5:   movsxd r8,r13d
  0x00007f54945457b8:   mov    QWORD PTR [rcx+r8*1],rbx     ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f54945457bc:   inc    r13d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f54945457bf:   nop
  0x00007f54945457c0:   cmp    r13d,r10d
  0x00007f54945457c3:   jl     0x00007f5494545797           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f54945457c5:   mov    r8,0xfffffffffffffff9
  0x00007f54945457cc:   sub    r8,rdi
  0x00007f54945457cf:   mov    r10d,r8d
  0x00007f54945457d2:   mov    edi,0x80000000
  0x00007f54945457d7:   cmp    r8,0xffffffff80000000
  0x00007f54945457de:   cmovl  r10d,edi
  0x00007f54945457e2:   cmp    r10d,edi
  0x00007f54945457e5:   cmovg  r10d,edi
  0x00007f54945457e9:   cmp    r10d,r11d
  0x00007f54945457ec:   cmovg  r10d,r11d
  0x00007f54945457f0:   mov    esi,r10d
  0x00007f54945457f3:   add    esi,0xfffffff1
  0x00007f54945457f6:   cmp    r10d,esi
  0x00007f54945457f9:   cmovl  esi,edi
  0x00007f54945457fc:   nop    DWORD PTR [rax+0x0]
  0x00007f5494545800:   cmp    r13d,esi
  0x00007f5494545803:   jge    0x00007f5494545929           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f5494545809:   mov    ebp,0x3e80
  0x00007f549454580e:   mov    edi,esi
  0x00007f5494545810:   sub    edi,r13d
  0x00007f5494545813:   cmp    esi,r13d
  0x00007f5494545816:   cmovl  edi,eax
  0x00007f5494545819:   cmp    edi,0x3e80
  0x00007f549454581f:   cmova  edi,ebp
  0x00007f5494545822:   add    edi,r13d
  0x00007f5494545825:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
                                                            ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494545830:   mov    r11d,r13d
  0x00007f5494545833:   add    r11d,0xf
  0x00007f5494545837:   mov    r10d,r13d
  0x00007f549454583a:   add    r10d,0xe
  0x00007f549454583e:   movsxd r8,r11d
  0x00007f5494545841:   movsxd rdx,r10d
  0x00007f5494545844:   movsxd r10,r13d
  0x00007f5494545847:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f549454584b:   mov    r10d,r13d
  0x00007f549454584e:   inc    r10d
  0x00007f5494545851:   mov    r11d,r13d
  0x00007f5494545854:   add    r11d,0x2
  0x00007f5494545858:   movsxd r10,r10d
  0x00007f549454585b:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f549454585f:   movsxd r10,r11d
  0x00007f5494545862:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f5494545866:   mov    r10d,r13d
  0x00007f5494545869:   add    r10d,0x3
  0x00007f549454586d:   mov    r11d,r13d
  0x00007f5494545870:   add    r11d,0x4
  0x00007f5494545874:   movsxd r10,r10d
  0x00007f5494545877:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f549454587b:   movsxd r10,r11d
  0x00007f549454587e:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f5494545882:   mov    r10d,r13d
  0x00007f5494545885:   add    r10d,0x5
  0x00007f5494545889:   mov    r11d,r13d
  0x00007f549454588c:   add    r11d,0x6
  0x00007f5494545890:   movsxd r10,r10d
  0x00007f5494545893:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f5494545897:   movsxd r10,r11d
  0x00007f549454589a:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f549454589e:   mov    r10d,r13d
  0x00007f54945458a1:   add    r10d,0x7
  0x00007f54945458a5:   mov    r11d,r13d
  0x00007f54945458a8:   add    r11d,0x8
  0x00007f54945458ac:   movsxd r10,r10d
  0x00007f54945458af:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f54945458b3:   movsxd r10,r11d
  0x00007f54945458b6:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f54945458ba:   mov    r10d,r13d
  0x00007f54945458bd:   add    r10d,0x9
  0x00007f54945458c1:   mov    r11d,r13d
  0x00007f54945458c4:   add    r11d,0xa
  0x00007f54945458c8:   movsxd r10,r10d
  0x00007f54945458cb:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f54945458cf:   movsxd r10,r11d
  0x00007f54945458d2:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f54945458d6:   mov    r10d,r13d
  0x00007f54945458d9:   add    r10d,0xb
  0x00007f54945458dd:   mov    r11d,r13d
  0x00007f54945458e0:   add    r11d,0xc
  0x00007f54945458e4:   movsxd r10,r10d
  0x00007f54945458e7:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f54945458eb:   movsxd r10,r11d
  0x00007f54945458ee:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f54945458f2:   mov    r10d,r13d
  0x00007f54945458f5:   add    r10d,0xd
  0x00007f54945458f9:   movsxd r10,r10d
  0x00007f54945458fc:   mov    QWORD PTR [rcx+r10*1],rbx
  0x00007f5494545900:   mov    QWORD PTR [rcx+rdx*1],rbx
  0x00007f5494545904:   mov    QWORD PTR [rcx+r8*1],rbx     ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494545908:   add    r13d,0x10                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f549454590c:   cmp    r13d,edi
  0x00007f549454590f:   jl     0x00007f5494545830           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f5494545915:   mov    r10,QWORD PTR [r15+0x110]    ; ImmutableOopMap {r14=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f549454591c:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {poll}
  0x00007f549454591f:   nop
  0x00007f5494545920:   cmp    r13d,esi
  0x00007f5494545923:   jl     0x00007f549454580e
  0x00007f5494545929:   cmp    r13d,0x400000
  0x00007f5494545930:   jge    0x00007f5494545969
  0x00007f5494545932:   xchg   ax,ax
  0x00007f5494545934:   test   r13d,r13d
  0x00007f5494545937:   jl     0x00007f54945459a4           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f549454593d:   mov    ebp,r9d
  0x00007f5494545940:   sub    ebp,r13d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494545943:   cmp    ebp,0x8
  0x00007f5494545946:   jl     0x00007f54945459c8           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f549454594c:   movsxd r10,r13d
  0x00007f549454594f:   mov    QWORD PTR [rcx+r10*1],rbx    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494545953:   inc    r13d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f5494545956:   data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f5494545960:   cmp    r13d,0x400000
  0x00007f5494545967:   jl     0x00007f5494545934           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f5494545969:   add    rsp,0x50
  0x00007f549454596d:   pop    rbp
  0x00007f549454596e:   mov    r10,QWORD PTR [r15+0x110]
  0x00007f5494545975:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f5494545978:   ret    
  0x00007f5494545979:   xor    ebp,ebp
  0x00007f549454597b:   mov    esi,0xffffffbe
  0x00007f5494545980:   mov    QWORD PTR [rsp],rbx
  0x00007f5494545984:   mov    DWORD PTR [rsp+0x8],r13d
  0x00007f5494545989:   xchg   ax,ax
  0x00007f549454598b:   call   0x00007f548ca59e80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f5494545990:   mov    esi,0xffffff8d
  0x00007f5494545995:   mov    QWORD PTR [rsp],rbx
  0x00007f5494545999:   mov    DWORD PTR [rsp+0x8],r13d
  0x00007f549454599e:   nop
  0x00007f549454599f:   call   0x00007f548ca59e80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f54945459a4:   mov    esi,0xffffff45
  0x00007f54945459a9:   mov    QWORD PTR [rsp+0x10],r14
  0x00007f54945459ae:   mov    QWORD PTR [rsp+0x18],rbx
  0x00007f54945459b3:   mov    QWORD PTR [rsp+0x20],r14
  0x00007f54945459b8:   mov    DWORD PTR [rsp+0xc],r13d
  0x00007f54945459bd:   mov    DWORD PTR [rsp+0x38],r13d
  0x00007f54945459c2:   nop
  0x00007f54945459c3:   call   0x00007f548ca59e80           ; ImmutableOopMap {[16]=Oop [32]=Oop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f54945459c8:   mov    esi,0xffffff45
  0x00007f54945459cd:   mov    QWORD PTR [rsp+0x18],r14
  0x00007f54945459d2:   mov    QWORD PTR [rsp+0x20],rbx
  0x00007f54945459d7:   mov    QWORD PTR [rsp+0x28],r14
  0x00007f54945459dc:   mov    DWORD PTR [rsp+0x14],r13d
  0x00007f54945459e1:   xchg   ax,ax
  0x00007f54945459e3:   call   0x00007f548ca59e80           ; ImmutableOopMap {[24]=Oop [40]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f54945459e8:   hlt    
  0x00007f54945459e9:   hlt    
  0x00007f54945459ea:   hlt    
  0x00007f54945459eb:   hlt    
  0x00007f54945459ec:   hlt    
  0x00007f54945459ed:   hlt    
  0x00007f54945459ee:   hlt    
  0x00007f54945459ef:   hlt    
  0x00007f54945459f0:   hlt    
  0x00007f54945459f1:   hlt    
  0x00007f54945459f2:   hlt    
  0x00007f54945459f3:   hlt    
  0x00007f54945459f4:   hlt    
  0x00007f54945459f5:   hlt    
  0x00007f54945459f6:   hlt    
  0x00007f54945459f7:   hlt    
  0x00007f54945459f8:   hlt    
  0x00007f54945459f9:   hlt    
  0x00007f54945459fa:   hlt    
  0x00007f54945459fb:   hlt    
  0x00007f54945459fc:   hlt    
  0x00007f54945459fd:   hlt    
  0x00007f54945459fe:   hlt    
  0x00007f54945459ff:   hlt    
[Exception Handler]
  0x00007f5494545a00:   jmp    0x00007f548cb4a000           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f5494545a05:   call   0x00007f5494545a0a
  0x00007f5494545a0a:   sub    QWORD PTR [rsp],0x5
  0x00007f5494545a0f:   jmp    0x00007f548caa0f20           ;   {runtime_call DeoptimizationBlob}
  0x00007f5494545a14:   hlt    
  0x00007f5494545a15:   hlt    
  0x00007f5494545a16:   hlt    
  0x00007f5494545a17:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     347  504       4       me.serce.BufferAccessBenchmark::putLong (37 bytes)
 total in heap  [0x00007f5494545d90,0x00007f54945463e8] = 1624
 relocation     [0x00007f5494545ee8,0x00007f5494545f00] = 24
 main code      [0x00007f5494545f00,0x00007f54945460e0] = 480
 stub code      [0x00007f54945460e0,0x00007f54945460f8] = 24
 oops           [0x00007f54945460f8,0x00007f5494546100] = 8
 metadata       [0x00007f5494546100,0x00007f5494546130] = 48
 scopes data    [0x00007f5494546130,0x00007f5494546200] = 208
 scopes pcs     [0x00007f5494546200,0x00007f54945463d0] = 464
 dependencies   [0x00007f54945463d0,0x00007f54945463d8] = 8
 nul chk table  [0x00007f54945463d8,0x00007f54945463e8] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f5481784588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  # this:     rsi:rsi   = 'me/serce/BufferAccessBenchmark'
  # parm0:    rdx:rdx   = 'org/openjdk/jmh/infra/Blackhole'
  #           [sp+0x60]  (sp of caller)
  0x00007f5494545f00:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f5494545f04:   shl    r10,0x3
  0x00007f5494545f08:   movabs r11,0x800000000
  0x00007f5494545f12:   add    r10,r11
  0x00007f5494545f15:   cmp    rax,r10
  0x00007f5494545f18:   jne    0x00007f548ca9e700           ;   {runtime_call ic_miss_stub}
  0x00007f5494545f1e:   xchg   ax,ax
[Verified Entry Point]
  0x00007f5494545f20:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f5494545f27:   push   rbp
  0x00007f5494545f28:   sub    rsp,0x50                     ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
  0x00007f5494545f2c:   mov    r9,QWORD PTR [rsi+0x10]      ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@1 (line 64)
  0x00007f5494545f30:   mov    ebp,DWORD PTR [rsi+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@6 (line 65)
  0x00007f5494545f33:   mov    r10d,DWORD PTR [rbp+0x8]     ; implicit exception: dispatches to 0x00007f54945460a7
  0x00007f5494545f37:   nop    WORD PTR [rax+rax*1+0x0]
  0x00007f5494545f40:   cmp    r10d,0x3f291                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f5494545f47:   jne    0x00007f54945460a7
  0x00007f5494545f4d:   mov    rdx,rbp                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494545f50:   cmp    r12d,DWORD PTR [rdx+0x24]
  0x00007f5494545f54:   jne    0x00007f54945460a7
  0x00007f5494545f5a:   movzx  r10d,BYTE PTR [rdx+0x2d]
  0x00007f5494545f5f:   nop
  0x00007f5494545f60:   test   r10d,r10d
  0x00007f5494545f63:   jne    0x00007f54945460a7
  0x00007f5494545f69:   mov    r11,QWORD PTR [rdx+0x10]
  0x00007f5494545f6d:   mov    r10d,DWORD PTR [rdx+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494545f71:   mov    rsi,r11                      ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494545f74:   movsxd rax,r10d
  0x00007f5494545f77:   neg    rax
  0x00007f5494545f7a:   mov    edi,0x1
  0x00007f5494545f7f:   xor    r8d,r8d
  0x00007f5494545f82:   mov    r11d,0x400000
  0x00007f5494545f88:   mov    rcx,0xffffffff80000001
  0x00007f5494545f8f:   sub    rcx,rax
  0x00007f5494545f92:   mov    ecx,ecx
  0x00007f5494545f94:   cmp    ecx,edi
  0x00007f5494545f96:   cmovl  ecx,edi
  0x00007f5494545f99:   cmp    ecx,r11d
  0x00007f5494545f9c:   cmovg  ecx,r11d
  0x00007f5494545fa0:   xor    ebx,ebx                      ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 67)
  0x00007f5494545fa2:   mov    edi,r10d
  0x00007f5494545fa5:   sub    edi,ebx                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494545fa7:   cmp    edi,0x8
  0x00007f5494545faa:   jl     0x00007f54945460b8           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494545fb0:   movsxd rdi,ebx
  0x00007f5494545fb3:   mov    QWORD PTR [rsi+rdi*1],r9     ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494545fb7:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f5494545fb9:   cmp    ebx,ecx
  0x00007f5494545fbb:   jl     0x00007f5494545fa2           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f5494545fbd:   mov    rbp,0xfffffffffffffff9
  0x00007f5494545fc4:   sub    rbp,rax
  0x00007f5494545fc7:   mov    ecx,ebp
  0x00007f5494545fc9:   mov    edi,0x80000000
  0x00007f5494545fce:   cmp    rbp,0xffffffff80000000
  0x00007f5494545fd5:   cmovl  ecx,edi
  0x00007f5494545fd8:   cmp    ecx,r11d
  0x00007f5494545fdb:   cmovg  ecx,r11d
  0x00007f5494545fdf:   mov    eax,ecx
  0x00007f5494545fe1:   add    eax,0xfffffff1
  0x00007f5494545fe4:   cmp    ecx,eax
  0x00007f5494545fe6:   cmovl  eax,edi
  0x00007f5494545fe9:   cmp    ebx,eax
  0x00007f5494545feb:   jge    0x00007f5494546071           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f5494545ff1:   mov    r11d,0x3e80
  0x00007f5494545ff7:   mov    ecx,eax
  0x00007f5494545ff9:   sub    ecx,ebx
  0x00007f5494545ffb:   cmp    eax,ebx
  0x00007f5494545ffd:   cmovl  ecx,r8d
  0x00007f5494546001:   cmp    ecx,0x3e80
  0x00007f5494546007:   cmova  ecx,r11d
  0x00007f549454600b:   add    ecx,ebx
  0x00007f549454600d:   data16 xchg ax,ax                   ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 67)
  0x00007f5494546010:   movsxd rdi,ebx
  0x00007f5494546013:   mov    rbp,rsi
  0x00007f5494546016:   add    rbp,rdi
  0x00007f5494546019:   mov    QWORD PTR [rbp+0x0],r9
  0x00007f549454601d:   mov    QWORD PTR [rbp+0x1],r9
  0x00007f5494546021:   mov    QWORD PTR [rbp+0x2],r9
  0x00007f5494546025:   mov    QWORD PTR [rbp+0x3],r9
  0x00007f5494546029:   mov    QWORD PTR [rbp+0x4],r9
  0x00007f549454602d:   mov    QWORD PTR [rbp+0x5],r9
  0x00007f5494546031:   mov    QWORD PTR [rbp+0x6],r9
  0x00007f5494546035:   mov    QWORD PTR [rbp+0x7],r9
  0x00007f5494546039:   mov    QWORD PTR [rbp+0x8],r9
  0x00007f549454603d:   mov    QWORD PTR [rbp+0x9],r9
  0x00007f5494546041:   mov    QWORD PTR [rbp+0xa],r9
  0x00007f5494546045:   mov    QWORD PTR [rbp+0xb],r9
  0x00007f5494546049:   mov    QWORD PTR [rbp+0xc],r9
  0x00007f549454604d:   mov    QWORD PTR [rbp+0xd],r9
  0x00007f5494546051:   mov    QWORD PTR [rbp+0xe],r9
  0x00007f5494546055:   mov    QWORD PTR [rbp+0xf],r9       ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494546059:   add    ebx,0x10                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f549454605c:   nop    DWORD PTR [rax+0x0]
  0x00007f5494546060:   cmp    ebx,ecx
  0x00007f5494546062:   jl     0x00007f5494546010           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f5494546064:   mov    rcx,QWORD PTR [r15+0x110]    ; ImmutableOopMap {rdx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f549454606b:   test   DWORD PTR [rcx],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {poll}
  0x00007f549454606d:   cmp    ebx,eax
  0x00007f549454606f:   jl     0x00007f5494545ff7
  0x00007f5494546071:   cmp    ebx,0x400000
  0x00007f5494546077:   jge    0x00007f5494546097
  0x00007f5494546079:   data16 xchg ax,ax                   ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 67)
  0x00007f549454607c:   mov    edi,r10d
  0x00007f549454607f:   sub    edi,ebx                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494546081:   cmp    edi,0x8
  0x00007f5494546084:   jl     0x00007f54945460b8           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f5494546086:   movsxd r11,ebx
  0x00007f5494546089:   mov    QWORD PTR [rsi+r11*1],r9     ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.DirectByteBuffer::putLong@18 (line 933)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f549454608d:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f549454608f:   cmp    ebx,0x400000
  0x00007f5494546095:   jl     0x00007f549454607c
  0x00007f5494546097:   add    rsp,0x50
  0x00007f549454609b:   pop    rbp
  0x00007f549454609c:   mov    r10,QWORD PTR [r15+0x110]
  0x00007f54945460a3:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f54945460a6:   ret                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f54945460a7:   mov    esi,0xffffff76
  0x00007f54945460ac:   mov    QWORD PTR [rsp],r9
  0x00007f54945460b0:   data16 xchg ax,ax
  0x00007f54945460b3:   call   0x00007f548ca59e80           ; ImmutableOopMap {rbp=NarrowOop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@18 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f54945460b8:   mov    esi,0xffffff45
  0x00007f54945460bd:   mov    QWORD PTR [rsp+0x10],rdx
  0x00007f54945460c2:   mov    QWORD PTR [rsp+0x18],r9
  0x00007f54945460c7:   mov    QWORD PTR [rsp+0x20],rdx
  0x00007f54945460cc:   mov    DWORD PTR [rsp+0xc],ebx
  0x00007f54945460d0:   mov    DWORD PTR [rsp+0x30],edi
  0x00007f54945460d4:   data16 xchg ax,ax
  0x00007f54945460d7:   call   0x00007f548ca59e80           ; ImmutableOopMap {[16]=Oop [32]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 954)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f54945460dc:   hlt    
  0x00007f54945460dd:   hlt    
  0x00007f54945460de:   hlt    
  0x00007f54945460df:   hlt    
[Exception Handler]
  0x00007f54945460e0:   jmp    0x00007f548cb4a000           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f54945460e5:   call   0x00007f54945460ea
  0x00007f54945460ea:   sub    QWORD PTR [rsp],0x5
  0x00007f54945460ef:   jmp    0x00007f548caa0f20           ;   {runtime_call DeoptimizationBlob}
  0x00007f54945460f4:   hlt    
  0x00007f54945460f5:   hlt    
  0x00007f54945460f6:   hlt    
  0x00007f54945460f7:   hlt    
--------------------------------------------------------------------------------
2040891.592 ns/op
Iteration   1: 2027255.485 ns/op
Iteration   2: 2026821.885 ns/op
Iteration   3: 2026832.959 ns/op


Result "me.serce.BufferAccessBenchmark.putLong":
  2026970.110 ±(99.9%) 4509.924 ns/op [Average]
  (min, avg, max) = (2026821.885, 2026970.110, 2027255.485), stdev = 247.204
  CI (99.9%): [2022460.186, 2031480.033] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 15.0.1, OpenJDK 64-Bit Server VM, 15.0.1+8
# VM invoker: /usr/lib/jvm/zulu-15-amd64/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:PrintAssemblyOptions=intel -XX:CompileCommand=print,*BufferAccessBenchmark.putLong*
# Warmup: 1 iterations, 10 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: me.serce.BufferAccessBenchmark.putLong
# Parameters: (bufferType = heap)

# Run progress: 66.67% complete, ETA 00:00:40
# Fork: 1 of 1
CompileCommand: print *BufferAccessBenchmark.putLong*
OpenJDK 64-Bit Server VM warning: printing of assembly code is enabled; turning on DebugNonSafepoints to gain additional output
# Warmup Iteration   1: 
============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     292  482 %     3       me.serce.BufferAccessBenchmark::putLong @ 14 (37 bytes)
 total in heap  [0x00007fbd05087010,0x00007fbd05087650] = 1600
 relocation     [0x00007fbd05087168,0x00007fbd050871b0] = 72
 main code      [0x00007fbd050871c0,0x00007fbd05087460] = 672
 stub code      [0x00007fbd05087460,0x00007fbd050874a0] = 64
 oops           [0x00007fbd050874a0,0x00007fbd050874a8] = 8
 metadata       [0x00007fbd050874a8,0x00007fbd050874b0] = 8
 scopes data    [0x00007fbd050874b0,0x00007fbd05087538] = 136
 scopes pcs     [0x00007fbd05087538,0x00007fbd05087638] = 256
 dependencies   [0x00007fbd05087638,0x00007fbd05087640] = 8
 nul chk table  [0x00007fbd05087640,0x00007fbd05087650] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007fbd00a44588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007fbd050871c0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007fbd050871c4:   shl    r10,0x3
  0x00007fbd050871c8:   movabs r11,0x800000000
  0x00007fbd050871d2:   add    r10,r11
  0x00007fbd050871d5:   cmp    r10,rax
  0x00007fbd050871d8:   jne    0x00007fbd04a9e700           ;   {runtime_call ic_miss_stub}
  0x00007fbd050871de:   xchg   ax,ax
[Verified Entry Point]
  0x00007fbd050871e0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007fbd050871e7:   push   rbp
  0x00007fbd050871e8:   sub    rsp,0x60
  0x00007fbd050871ec:   movabs rdi,0x7fbd00a7cd28           ;   {metadata(method data for {method} {0x00007fbd00a44588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007fbd050871f6:   mov    ebx,DWORD PTR [rdi+0x12c]
  0x00007fbd050871fc:   add    ebx,0x2
  0x00007fbd050871ff:   mov    DWORD PTR [rdi+0x12c],ebx
  0x00007fbd05087205:   and    ebx,0x7fe
  0x00007fbd0508720b:   cmp    ebx,0x0
  0x00007fbd0508720e:   je     0x00007fbd050873da           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@0 (line 64)
  0x00007fbd05087214:   mov    rdi,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@1 (line 64)
  0x00007fbd05087218:   mov    esi,DWORD PTR [rsi+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@6 (line 65)
  0x00007fbd0508721b:   mov    ebx,0x0
  0x00007fbd05087220:   jmp    0x00007fbd05087346           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007fbd05087225:   data16 xchg ax,ax
  0x00007fbd05087228:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x00007fbd050873fb
  0x00007fbd0508722b:   mov    rdx,rsi
  0x00007fbd0508722e:   movabs rcx,0x7fbd00a7cd28           ;   {metadata(method data for {method} {0x00007fbd00a44588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007fbd05087238:   mov    edx,DWORD PTR [rdx+0x8]
  0x00007fbd0508723b:   shl    rdx,0x3
  0x00007fbd0508723f:   movabs r10,0x800000000
  0x00007fbd05087249:   add    rdx,r10
  0x00007fbd0508724c:   cmp    rdx,QWORD PTR [rcx+0x1a0]
  0x00007fbd05087253:   jne    0x00007fbd05087262
  0x00007fbd05087255:   add    QWORD PTR [rcx+0x1a8],0x1
  0x00007fbd0508725d:   jmp    0x00007fbd050872c8
  0x00007fbd05087262:   cmp    rdx,QWORD PTR [rcx+0x1b0]
  0x00007fbd05087269:   jne    0x00007fbd05087278
  0x00007fbd0508726b:   add    QWORD PTR [rcx+0x1b8],0x1
  0x00007fbd05087273:   jmp    0x00007fbd050872c8
  0x00007fbd05087278:   cmp    QWORD PTR [rcx+0x1a0],0x0
  0x00007fbd05087283:   jne    0x00007fbd0508729c
  0x00007fbd05087285:   mov    QWORD PTR [rcx+0x1a0],rdx
  0x00007fbd0508728c:   mov    QWORD PTR [rcx+0x1a8],0x1
  0x00007fbd05087297:   jmp    0x00007fbd050872c8
  0x00007fbd0508729c:   cmp    QWORD PTR [rcx+0x1b0],0x0
  0x00007fbd050872a7:   jne    0x00007fbd050872c0
  0x00007fbd050872a9:   mov    QWORD PTR [rcx+0x1b0],rdx
  0x00007fbd050872b0:   mov    QWORD PTR [rcx+0x1b8],0x1
  0x00007fbd050872bb:   jmp    0x00007fbd050872c8
  0x00007fbd050872c0:   add    QWORD PTR [rcx+0x190],0x1
  0x00007fbd050872c8:   mov    rdx,rbx
  0x00007fbd050872cb:   mov    rcx,rdi
  0x00007fbd050872ce:   mov    rax,rsi
  0x00007fbd050872d1:   mov    rsi,rax                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd050872d4:   mov    QWORD PTR [rsp+0x48],rdi
  0x00007fbd050872d9:   mov    QWORD PTR [rsp+0x40],rax
  0x00007fbd050872de:   mov    DWORD PTR [rsp+0x2c],ebx
  0x00007fbd050872e2:   data16 xchg ax,ax
  0x00007fbd050872e5:   movabs rax,0x8001fd2d8
  0x00007fbd050872ef:   call   0x00007fbd0c545900           ; ImmutableOopMap {[64]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {virtual_call}
  0x00007fbd050872f4:   mov    ebx,DWORD PTR [rsp+0x2c]
  0x00007fbd050872f8:   inc    ebx
  0x00007fbd050872fa:   movabs rsi,0x7fbd00a7cd28           ;   {metadata(method data for {method} {0x00007fbd00a44588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007fbd05087304:   mov    edi,DWORD PTR [rsi+0x130]
  0x00007fbd0508730a:   add    edi,0x2
  0x00007fbd0508730d:   mov    DWORD PTR [rsi+0x130],edi
  0x00007fbd05087313:   and    edi,0x3ffe
  0x00007fbd05087319:   cmp    edi,0x0
  0x00007fbd0508731c:   je     0x00007fbd05087400           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007fbd05087322:   mov    r10,QWORD PTR [r15+0x110]    ; ImmutableOopMap {[64]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007fbd05087329:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00007fbd0508732c:   movabs rsi,0x7fbd00a7cd28           ;   {metadata(method data for {method} {0x00007fbd00a44588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007fbd05087336:   inc    DWORD PTR [rsi+0x1c8]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007fbd0508733c:   mov    rsi,QWORD PTR [rsp+0x40]
  0x00007fbd05087341:   mov    rdi,QWORD PTR [rsp+0x48]
  0x00007fbd05087346:   cmp    ebx,0x400000
  0x00007fbd0508734c:   movabs rdx,0x7fbd00a7cd28           ;   {metadata(method data for {method} {0x00007fbd00a44588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007fbd05087356:   movabs rcx,0x180
  0x00007fbd05087360:   jl     0x00007fbd05087370
  0x00007fbd05087366:   movabs rcx,0x170
  0x00007fbd05087370:   mov    rax,QWORD PTR [rdx+rcx*1]
  0x00007fbd05087374:   lea    rax,[rax+0x1]
  0x00007fbd05087378:   mov    QWORD PTR [rdx+rcx*1],rax
  0x00007fbd0508737c:   jl     0x00007fbd05087228           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007fbd05087382:   add    rsp,0x60
  0x00007fbd05087386:   pop    rbp
  0x00007fbd05087387:   mov    r10,QWORD PTR [r15+0x110]
  0x00007fbd0508738e:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007fbd05087391:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@36 (line 69)
  0x00007fbd05087392:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007fbd05087399:   push   rbp
  0x00007fbd0508739a:   sub    rsp,0x60
  0x00007fbd0508739e:   mov    rbx,QWORD PTR [rsi+0x10]
  0x00007fbd050873a2:   mov    rax,QWORD PTR [rsi+0x8]
  0x00007fbd050873a6:   mov    edx,DWORD PTR [rsi]
  0x00007fbd050873a8:   mov    rdi,rsi
  0x00007fbd050873ab:   mov    QWORD PTR [rsp+0x38],rbx
  0x00007fbd050873b0:   mov    QWORD PTR [rsp+0x30],rax
  0x00007fbd050873b5:   mov    DWORD PTR [rsp+0x28],edx
  0x00007fbd050873b9:   call   0x00007fbd22e806d0           ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x00007fbd050873be:   mov    edx,DWORD PTR [rsp+0x28]
  0x00007fbd050873c2:   mov    rbx,rdx
  0x00007fbd050873c5:   mov    rax,QWORD PTR [rsp+0x30]
  0x00007fbd050873ca:   mov    rsi,rax
  0x00007fbd050873cd:   mov    rdx,QWORD PTR [rsp+0x38]
  0x00007fbd050873d2:   mov    rdi,rdx
  0x00007fbd050873d5:   jmp    0x00007fbd05087346
  0x00007fbd050873da:   movabs r10,0x7fbd00a44588           ;   {metadata({method} {0x00007fbd00a44588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007fbd050873e4:   mov    QWORD PTR [rsp+0x8],r10
  0x00007fbd050873e9:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007fbd050873f1:   call   0x00007fbd04b50e00           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fbd050873f6:   jmp    0x00007fbd05087214
  0x00007fbd050873fb:   call   0x00007fbd04b4ac20           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fbd05087400:   movabs r10,0x7fbd00a44588           ;   {metadata({method} {0x00007fbd00a44588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007fbd0508740a:   mov    QWORD PTR [rsp+0x8],r10
  0x00007fbd0508740f:   mov    QWORD PTR [rsp],0x21
  0x00007fbd05087417:   call   0x00007fbd04b50e00           ; ImmutableOopMap {[64]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fbd0508741c:   jmp    0x00007fbd05087322
  0x00007fbd05087421:   nop
  0x00007fbd05087422:   nop
  0x00007fbd05087423:   mov    rax,QWORD PTR [r15+0x400]
  0x00007fbd0508742a:   movabs r10,0x0
  0x00007fbd05087434:   mov    QWORD PTR [r15+0x400],r10
  0x00007fbd0508743b:   movabs r10,0x0
  0x00007fbd05087445:   mov    QWORD PTR [r15+0x408],r10
  0x00007fbd0508744c:   add    rsp,0x60
  0x00007fbd05087450:   pop    rbp
  0x00007fbd05087451:   jmp    0x00007fbd04abcc00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fbd05087456:   hlt    
  0x00007fbd05087457:   hlt    
  0x00007fbd05087458:   hlt    
  0x00007fbd05087459:   hlt    
  0x00007fbd0508745a:   hlt    
  0x00007fbd0508745b:   hlt    
  0x00007fbd0508745c:   hlt    
  0x00007fbd0508745d:   hlt    
  0x00007fbd0508745e:   hlt    
  0x00007fbd0508745f:   hlt    
[Stub Code]
  0x00007fbd05087460:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x00007fbd05087465:   movabs rbx,0x0                      ;   {static_stub}
  0x00007fbd0508746f:   jmp    0x00007fbd0508746f           ;   {runtime_call}
[Exception Handler]
  0x00007fbd05087474:   call   0x00007fbd04b4d180           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fbd05087479:   movabs rdi,0x7fbd2315719e           ;   {external_word}
  0x00007fbd05087483:   and    rsp,0xfffffffffffffff0
  0x00007fbd05087487:   call   0x00007fbd22c70b90           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fbd0508748c:   hlt    
[Deopt Handler Code]
  0x00007fbd0508748d:   movabs r10,0x7fbd0508748d           ;   {section_word}
  0x00007fbd05087497:   push   r10
  0x00007fbd05087499:   jmp    0x00007fbd04aa0f20           ;   {runtime_call DeoptimizationBlob}
  0x00007fbd0508749e:   hlt    
  0x00007fbd0508749f:   hlt    
--------------------------------------------------------------------------------

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     305  483       3       me.serce.BufferAccessBenchmark::putLong (37 bytes)
 total in heap  [0x00007fbd05087690,0x00007fbd05087c78] = 1512
 relocation     [0x00007fbd050877e8,0x00007fbd05087830] = 72
 main code      [0x00007fbd05087840,0x00007fbd05087aa0] = 608
 stub code      [0x00007fbd05087aa0,0x00007fbd05087ae0] = 64
 oops           [0x00007fbd05087ae0,0x00007fbd05087ae8] = 8
 metadata       [0x00007fbd05087ae8,0x00007fbd05087af0] = 8
 scopes data    [0x00007fbd05087af0,0x00007fbd05087b70] = 128
 scopes pcs     [0x00007fbd05087b70,0x00007fbd05087c60] = 240
 dependencies   [0x00007fbd05087c60,0x00007fbd05087c68] = 8
 nul chk table  [0x00007fbd05087c68,0x00007fbd05087c78] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007fbd00a44588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  # this:     rsi:rsi   = 'me/serce/BufferAccessBenchmark'
  # parm0:    rdx:rdx   = 'org/openjdk/jmh/infra/Blackhole'
  #           [sp+0x60]  (sp of caller)
  0x00007fbd05087840:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007fbd05087844:   shl    r10,0x3
  0x00007fbd05087848:   movabs r11,0x800000000
  0x00007fbd05087852:   add    r10,r11
  0x00007fbd05087855:   cmp    r10,rax
  0x00007fbd05087858:   jne    0x00007fbd04a9e700           ;   {runtime_call ic_miss_stub}
  0x00007fbd0508785e:   xchg   ax,ax
[Verified Entry Point]
  0x00007fbd05087860:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007fbd05087867:   push   rbp
  0x00007fbd05087868:   sub    rsp,0x50
  0x00007fbd0508786c:   movabs rcx,0x7fbd00a7cd28           ;   {metadata(method data for {method} {0x00007fbd00a44588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007fbd05087876:   mov    edi,DWORD PTR [rcx+0x12c]
  0x00007fbd0508787c:   add    edi,0x2
  0x00007fbd0508787f:   mov    DWORD PTR [rcx+0x12c],edi
  0x00007fbd05087885:   and    edi,0x7fe
  0x00007fbd0508788b:   cmp    edi,0x0
  0x00007fbd0508788e:   je     0x00007fbd05087a0a           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@0 (line 64)
  0x00007fbd05087894:   mov    rdi,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@1 (line 64)
  0x00007fbd05087898:   mov    QWORD PTR [rsp+0x38],rdi
  0x00007fbd0508789d:   mov    ebx,DWORD PTR [rsi+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@6 (line 65)
  0x00007fbd050878a0:   mov    QWORD PTR [rsp+0x30],rbx
  0x00007fbd050878a5:   mov    eax,0x0
  0x00007fbd050878aa:   jmp    0x00007fbd050879be           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007fbd050878af:   nop
  0x00007fbd050878b0:   cmp    rax,QWORD PTR [rbx]          ; implicit exception: dispatches to 0x00007fbd05087a2b
  0x00007fbd050878b3:   mov    rdx,rbx
  0x00007fbd050878b6:   movabs rcx,0x7fbd00a7cd28           ;   {metadata(method data for {method} {0x00007fbd00a44588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007fbd050878c0:   mov    edx,DWORD PTR [rdx+0x8]
  0x00007fbd050878c3:   shl    rdx,0x3
  0x00007fbd050878c7:   movabs r10,0x800000000
  0x00007fbd050878d1:   add    rdx,r10
  0x00007fbd050878d4:   cmp    rdx,QWORD PTR [rcx+0x1a0]
  0x00007fbd050878db:   jne    0x00007fbd050878ea
  0x00007fbd050878dd:   add    QWORD PTR [rcx+0x1a8],0x1
  0x00007fbd050878e5:   jmp    0x00007fbd05087950
  0x00007fbd050878ea:   cmp    rdx,QWORD PTR [rcx+0x1b0]
  0x00007fbd050878f1:   jne    0x00007fbd05087900
  0x00007fbd050878f3:   add    QWORD PTR [rcx+0x1b8],0x1
  0x00007fbd050878fb:   jmp    0x00007fbd05087950
  0x00007fbd05087900:   cmp    QWORD PTR [rcx+0x1a0],0x0
  0x00007fbd0508790b:   jne    0x00007fbd05087924
  0x00007fbd0508790d:   mov    QWORD PTR [rcx+0x1a0],rdx
  0x00007fbd05087914:   mov    QWORD PTR [rcx+0x1a8],0x1
  0x00007fbd0508791f:   jmp    0x00007fbd05087950
  0x00007fbd05087924:   cmp    QWORD PTR [rcx+0x1b0],0x0
  0x00007fbd0508792f:   jne    0x00007fbd05087948
  0x00007fbd05087931:   mov    QWORD PTR [rcx+0x1b0],rdx
  0x00007fbd05087938:   mov    QWORD PTR [rcx+0x1b8],0x1
  0x00007fbd05087943:   jmp    0x00007fbd05087950
  0x00007fbd05087948:   add    QWORD PTR [rcx+0x190],0x1
  0x00007fbd05087950:   mov    rdx,rax
  0x00007fbd05087953:   mov    rcx,rdi
  0x00007fbd05087956:   mov    rsi,rbx                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd05087959:   mov    DWORD PTR [rsp+0x28],eax
  0x00007fbd0508795d:   movabs rax,0xffffffffffffffff
  0x00007fbd05087967:   call   0x00007fbd04a9f000           ; ImmutableOopMap {[48]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {virtual_call}
  0x00007fbd0508796c:   mov    eax,DWORD PTR [rsp+0x28]
  0x00007fbd05087970:   inc    eax
  0x00007fbd05087972:   movabs rsi,0x7fbd00a7cd28           ;   {metadata(method data for {method} {0x00007fbd00a44588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007fbd0508797c:   mov    edi,DWORD PTR [rsi+0x130]
  0x00007fbd05087982:   add    edi,0x2
  0x00007fbd05087985:   mov    DWORD PTR [rsi+0x130],edi
  0x00007fbd0508798b:   and    edi,0x3ffe
  0x00007fbd05087991:   cmp    edi,0x0
  0x00007fbd05087994:   je     0x00007fbd05087a30           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007fbd0508799a:   mov    r10,QWORD PTR [r15+0x110]    ; ImmutableOopMap {[48]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007fbd050879a1:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00007fbd050879a4:   movabs rsi,0x7fbd00a7cd28           ;   {metadata(method data for {method} {0x00007fbd00a44588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007fbd050879ae:   inc    DWORD PTR [rsi+0x1c8]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007fbd050879b4:   mov    rbx,QWORD PTR [rsp+0x30]
  0x00007fbd050879b9:   mov    rdi,QWORD PTR [rsp+0x38]
  0x00007fbd050879be:   cmp    eax,0x400000
  0x00007fbd050879c4:   movabs rdx,0x7fbd00a7cd28           ;   {metadata(method data for {method} {0x00007fbd00a44588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007fbd050879ce:   movabs rcx,0x180
  0x00007fbd050879d8:   jl     0x00007fbd050879e8
  0x00007fbd050879de:   movabs rcx,0x170
  0x00007fbd050879e8:   mov    rsi,QWORD PTR [rdx+rcx*1]
  0x00007fbd050879ec:   lea    rsi,[rsi+0x1]
  0x00007fbd050879f0:   mov    QWORD PTR [rdx+rcx*1],rsi
  0x00007fbd050879f4:   jl     0x00007fbd050878b0           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007fbd050879fa:   add    rsp,0x50
  0x00007fbd050879fe:   pop    rbp
  0x00007fbd050879ff:   mov    r10,QWORD PTR [r15+0x110]
  0x00007fbd05087a06:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007fbd05087a09:   ret    
  0x00007fbd05087a0a:   movabs r10,0x7fbd00a44588           ;   {metadata({method} {0x00007fbd00a44588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007fbd05087a14:   mov    QWORD PTR [rsp+0x8],r10
  0x00007fbd05087a19:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007fbd05087a21:   call   0x00007fbd04b50e00           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fbd05087a26:   jmp    0x00007fbd05087894
  0x00007fbd05087a2b:   call   0x00007fbd04b4ac20           ; ImmutableOopMap {rbx=Oop [48]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fbd05087a30:   movabs r10,0x7fbd00a44588           ;   {metadata({method} {0x00007fbd00a44588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007fbd05087a3a:   mov    QWORD PTR [rsp+0x8],r10
  0x00007fbd05087a3f:   mov    QWORD PTR [rsp],0x21
  0x00007fbd05087a47:   call   0x00007fbd04b50e00           ; ImmutableOopMap {[48]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fbd05087a4c:   jmp    0x00007fbd0508799a
  0x00007fbd05087a51:   nop
  0x00007fbd05087a52:   nop
  0x00007fbd05087a53:   mov    rax,QWORD PTR [r15+0x400]
  0x00007fbd05087a5a:   movabs r10,0x0
  0x00007fbd05087a64:   mov    QWORD PTR [r15+0x400],r10
  0x00007fbd05087a6b:   movabs r10,0x0
  0x00007fbd05087a75:   mov    QWORD PTR [r15+0x408],r10
  0x00007fbd05087a7c:   add    rsp,0x50
  0x00007fbd05087a80:   pop    rbp
  0x00007fbd05087a81:   jmp    0x00007fbd04abcc00           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fbd05087a86:   hlt    
  0x00007fbd05087a87:   hlt    
  0x00007fbd05087a88:   hlt    
  0x00007fbd05087a89:   hlt    
  0x00007fbd05087a8a:   hlt    
  0x00007fbd05087a8b:   hlt    
  0x00007fbd05087a8c:   hlt    
  0x00007fbd05087a8d:   hlt    
  0x00007fbd05087a8e:   hlt    
  0x00007fbd05087a8f:   hlt    
  0x00007fbd05087a90:   hlt    
  0x00007fbd05087a91:   hlt    
  0x00007fbd05087a92:   hlt    
  0x00007fbd05087a93:   hlt    
  0x00007fbd05087a94:   hlt    
  0x00007fbd05087a95:   hlt    
  0x00007fbd05087a96:   hlt    
  0x00007fbd05087a97:   hlt    
  0x00007fbd05087a98:   hlt    
  0x00007fbd05087a99:   hlt    
  0x00007fbd05087a9a:   hlt    
  0x00007fbd05087a9b:   hlt    
  0x00007fbd05087a9c:   hlt    
  0x00007fbd05087a9d:   hlt    
  0x00007fbd05087a9e:   hlt    
  0x00007fbd05087a9f:   hlt    
[Stub Code]
  0x00007fbd05087aa0:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x00007fbd05087aa5:   movabs rbx,0x0                      ;   {static_stub}
  0x00007fbd05087aaf:   jmp    0x00007fbd05087aaf           ;   {runtime_call}
[Exception Handler]
  0x00007fbd05087ab4:   call   0x00007fbd04b4d180           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fbd05087ab9:   movabs rdi,0x7fbd2315719e           ;   {external_word}
  0x00007fbd05087ac3:   and    rsp,0xfffffffffffffff0
  0x00007fbd05087ac7:   call   0x00007fbd22c70b90           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fbd05087acc:   hlt    
[Deopt Handler Code]
  0x00007fbd05087acd:   movabs r10,0x7fbd05087acd           ;   {section_word}
  0x00007fbd05087ad7:   push   r10
  0x00007fbd05087ad9:   jmp    0x00007fbd04aa0f20           ;   {runtime_call DeoptimizationBlob}
  0x00007fbd05087ade:   hlt    
  0x00007fbd05087adf:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     318  484 %     4       me.serce.BufferAccessBenchmark::putLong @ 14 (37 bytes)
 total in heap  [0x00007fbd0c545d10,0x00007fbd0c546598] = 2184
 relocation     [0x00007fbd0c545e68,0x00007fbd0c545e88] = 32
 main code      [0x00007fbd0c545ea0,0x00007fbd0c546220] = 896
 stub code      [0x00007fbd0c546220,0x00007fbd0c546238] = 24
 oops           [0x00007fbd0c546238,0x00007fbd0c546248] = 16
 metadata       [0x00007fbd0c546248,0x00007fbd0c546278] = 48
 scopes data    [0x00007fbd0c546278,0x00007fbd0c546380] = 264
 scopes pcs     [0x00007fbd0c546380,0x00007fbd0c546590] = 528
 dependencies   [0x00007fbd0c546590,0x00007fbd0c546598] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007fbd00a44588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007fbd0c545ea0:   call   0x00007fbd22da6b10           ;   {runtime_call os::breakpoint()}
  0x00007fbd0c545ea5:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007fbd0c545eb0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007fbd0c545eb7:   push   rbp
  0x00007fbd0c545eb8:   sub    rsp,0x50
  0x00007fbd0c545ebc:   mov    rbp,QWORD PTR [rsi+0x8]
  0x00007fbd0c545ec0:   mov    r13,QWORD PTR [rsi+0x10]
  0x00007fbd0c545ec4:   mov    ebx,DWORD PTR [rsi]
  0x00007fbd0c545ec6:   mov    rdi,rsi
  0x00007fbd0c545ec9:   movabs r10,0x7fbd22e806d0
  0x00007fbd0c545ed3:   call   r10
  0x00007fbd0c545ed6:   test   rbp,rbp
  0x00007fbd0c545ed9:   je     0x00007fbd0c5461f0
  0x00007fbd0c545edf:   mov    r11d,DWORD PTR [rbp+0x8]
  0x00007fbd0c545ee3:   movabs r10,0x8001177d8              ;   {metadata('java/nio/ByteBuffer')}
  0x00007fbd0c545eed:   movabs r8,0x800000000
  0x00007fbd0c545ef7:   lea    r8,[r8+r11*8]
  0x00007fbd0c545efb:   mov    r11,QWORD PTR [r8+0x40]
  0x00007fbd0c545eff:   nop
  0x00007fbd0c545f00:   cmp    r11,r10
  0x00007fbd0c545f03:   jne    0x00007fbd0c546204           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007fbd0c545f09:   mov    r10d,DWORD PTR [rbp+0x8]
  0x00007fbd0c545f0d:   cmp    r10d,0x3fa5b                 ;   {metadata('java/nio/HeapByteBuffer')}
  0x00007fbd0c545f14:   jne    0x00007fbd0c5461f2
  0x00007fbd0c545f1a:   mov    rdx,rbp                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c545f1d:   data16 xchg ax,ax
  0x00007fbd0c545f20:   cmp    r12d,DWORD PTR [rdx+0x24]
  0x00007fbd0c545f24:   jne    0x00007fbd0c5461f2
  0x00007fbd0c545f2a:   movzx  r11d,BYTE PTR [rdx+0x2d]
  0x00007fbd0c545f2f:   test   r11d,r11d
  0x00007fbd0c545f32:   je     0x00007fbd0c5461f2
  0x00007fbd0c545f38:   mov    eax,DWORD PTR [rdx+0x30]     ;*getfield hb {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::putLong@8 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c545f3b:   test   eax,eax
  0x00007fbd0c545f3d:   data16 xchg ax,ax
  0x00007fbd0c545f40:   je     0x00007fbd0c5461f2
  0x00007fbd0c545f46:   cmp    ebx,0x400000
  0x00007fbd0c545f4c:   jge    0x00007fbd0c54618d           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007fbd0c545f52:   mov    r10,QWORD PTR [rdx+0x10]
  0x00007fbd0c545f56:   mov    ecx,DWORD PTR [rdx+0x1c]     ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c545f59:   mov    r11,r13
  0x00007fbd0c545f5c:   bswap  r11                          ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@12 (line 3829)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3686)
                                                            ; - java.nio.HeapByteBuffer::putLong@28 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c545f5f:   movsxd r8,ecx
  0x00007fbd0c545f62:   mov    esi,ebx
  0x00007fbd0c545f64:   inc    esi
  0x00007fbd0c545f66:   neg    r8
  0x00007fbd0c545f69:   mov    r14,rax                      ;*getfield hb {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::putLong@8 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c545f6c:   mov    r9,r14
  0x00007fbd0c545f6f:   add    r9,r10
  0x00007fbd0c545f72:   mov    edi,0x400000
  0x00007fbd0c545f77:   mov    r10,0xffffffff80000001
  0x00007fbd0c545f7e:   sub    r10,r8
  0x00007fbd0c545f81:   mov    r10d,r10d
  0x00007fbd0c545f84:   cmp    esi,r10d
  0x00007fbd0c545f87:   cmovl  esi,r10d
  0x00007fbd0c545f8b:   xor    r10d,r10d
  0x00007fbd0c545f8e:   cmp    esi,r10d
  0x00007fbd0c545f91:   cmovl  esi,r10d
  0x00007fbd0c545f95:   cmp    esi,edi
  0x00007fbd0c545f97:   cmovg  esi,edi
  0x00007fbd0c545f9a:   test   ebx,ebx
  0x00007fbd0c545f9c:   nop    DWORD PTR [rax+0x0]
  0x00007fbd0c545fa0:   jl     0x00007fbd0c5461a0           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c545fa6:   vmovq  xmm0,rbp
  0x00007fbd0c545fab:   mov    r10d,ecx
  0x00007fbd0c545fae:   sub    r10d,ebx                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c545fb1:   cmp    r10d,0x8
  0x00007fbd0c545fb5:   jl     0x00007fbd0c5461c8           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c545fbb:   movsxd r10,ebx
  0x00007fbd0c545fbe:   mov    QWORD PTR [r9+r10*1],r11     ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.HeapByteBuffer::putLong@28 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c545fc2:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007fbd0c545fc4:   cmp    ebx,esi
  0x00007fbd0c545fc6:   jl     0x00007fbd0c545f9a           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007fbd0c545fc8:   mov    rbp,0xfffffffffffffff9
  0x00007fbd0c545fcf:   sub    rbp,r8
  0x00007fbd0c545fd2:   mov    r10d,ebp
  0x00007fbd0c545fd5:   mov    esi,0x80000000
  0x00007fbd0c545fda:   cmp    rbp,0xffffffff80000000
  0x00007fbd0c545fe1:   cmovl  r10d,esi
  0x00007fbd0c545fe5:   cmp    r10d,esi
  0x00007fbd0c545fe8:   cmovg  r10d,esi
  0x00007fbd0c545fec:   cmp    r10d,edi
  0x00007fbd0c545fef:   cmovg  r10d,edi
  0x00007fbd0c545ff3:   mov    r8d,r10d
  0x00007fbd0c545ff6:   add    r8d,0xfffffff1
  0x00007fbd0c545ffa:   cmp    r10d,r8d
  0x00007fbd0c545ffd:   cmovl  r8d,esi
  0x00007fbd0c546001:   cmp    ebx,r8d
  0x00007fbd0c546004:   jge    0x00007fbd0c54614e
  0x00007fbd0c54600a:   mov    edi,0x3e80
  0x00007fbd0c54600f:   jmp    0x00007fbd0c546039           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007fbd0c546011:   mov    r10,QWORD PTR [r15+0x110]    ; ImmutableOopMap {r9=Derived_oop_r14 r14=Oop xmm0=Oop xmm1=Oop xmm3=NarrowOop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007fbd0c546018:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {poll}
  0x00007fbd0c54601b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00007fbd0c546020:   cmp    ebx,r8d
  0x00007fbd0c546023:   jge    0x00007fbd0c54613e
  0x00007fbd0c546029:   mov    r13,rbp
  0x00007fbd0c54602c:   vmovq  rdx,xmm1
  0x00007fbd0c546031:   vmovd  eax,xmm3
  0x00007fbd0c546035:   vmovd  ecx,xmm2
  0x00007fbd0c546039:   mov    esi,r8d
  0x00007fbd0c54603c:   sub    esi,ebx
  0x00007fbd0c54603e:   xor    r10d,r10d
  0x00007fbd0c546041:   cmp    r8d,ebx
  0x00007fbd0c546044:   cmovl  esi,r10d
  0x00007fbd0c546048:   cmp    esi,0x3e80
  0x00007fbd0c54604e:   cmova  esi,edi
  0x00007fbd0c546051:   add    esi,ebx
  0x00007fbd0c546053:   mov    rbp,r13
  0x00007fbd0c546056:   vmovq  xmm1,rdx
  0x00007fbd0c54605b:   vmovd  xmm3,eax
  0x00007fbd0c54605f:   nop
  0x00007fbd0c546060:   vmovd  xmm2,ecx                     ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c546064:   mov    ecx,ebx
  0x00007fbd0c546066:   add    ecx,0xf
  0x00007fbd0c546069:   mov    r10d,ebx
  0x00007fbd0c54606c:   add    r10d,0xe
  0x00007fbd0c546070:   movsxd rdx,ecx
  0x00007fbd0c546073:   movsxd r13,r10d
  0x00007fbd0c546076:   movsxd r10,ebx
  0x00007fbd0c546079:   mov    QWORD PTR [r9+r10*1],r11
  0x00007fbd0c54607d:   mov    r10d,ebx
  0x00007fbd0c546080:   inc    r10d
  0x00007fbd0c546083:   mov    eax,ebx
  0x00007fbd0c546085:   add    eax,0x2
  0x00007fbd0c546088:   movsxd r10,r10d
  0x00007fbd0c54608b:   mov    QWORD PTR [r9+r10*1],r11
  0x00007fbd0c54608f:   movsxd r10,eax
  0x00007fbd0c546092:   mov    QWORD PTR [r9+r10*1],r11
  0x00007fbd0c546096:   mov    r10d,ebx
  0x00007fbd0c546099:   add    r10d,0x3
  0x00007fbd0c54609d:   mov    eax,ebx
  0x00007fbd0c54609f:   add    eax,0x4
  0x00007fbd0c5460a2:   movsxd r10,r10d
  0x00007fbd0c5460a5:   mov    QWORD PTR [r9+r10*1],r11
  0x00007fbd0c5460a9:   movsxd r10,eax
  0x00007fbd0c5460ac:   mov    QWORD PTR [r9+r10*1],r11
  0x00007fbd0c5460b0:   mov    r10d,ebx
  0x00007fbd0c5460b3:   add    r10d,0x5
  0x00007fbd0c5460b7:   mov    eax,ebx
  0x00007fbd0c5460b9:   add    eax,0x6
  0x00007fbd0c5460bc:   movsxd r10,r10d
  0x00007fbd0c5460bf:   mov    QWORD PTR [r9+r10*1],r11
  0x00007fbd0c5460c3:   movsxd r10,eax
  0x00007fbd0c5460c6:   mov    QWORD PTR [r9+r10*1],r11
  0x00007fbd0c5460ca:   mov    r10d,ebx
  0x00007fbd0c5460cd:   add    r10d,0x7
  0x00007fbd0c5460d1:   mov    eax,ebx
  0x00007fbd0c5460d3:   add    eax,0x8
  0x00007fbd0c5460d6:   movsxd r10,r10d
  0x00007fbd0c5460d9:   mov    QWORD PTR [r9+r10*1],r11
  0x00007fbd0c5460dd:   movsxd r10,eax
  0x00007fbd0c5460e0:   mov    QWORD PTR [r9+r10*1],r11
  0x00007fbd0c5460e4:   mov    r10d,ebx
  0x00007fbd0c5460e7:   add    r10d,0x9
  0x00007fbd0c5460eb:   mov    eax,ebx
  0x00007fbd0c5460ed:   add    eax,0xa
  0x00007fbd0c5460f0:   movsxd r10,r10d
  0x00007fbd0c5460f3:   mov    QWORD PTR [r9+r10*1],r11
  0x00007fbd0c5460f7:   movsxd r10,eax
  0x00007fbd0c5460fa:   mov    QWORD PTR [r9+r10*1],r11
  0x00007fbd0c5460fe:   mov    r10d,ebx
  0x00007fbd0c546101:   add    r10d,0xb
  0x00007fbd0c546105:   mov    eax,ebx
  0x00007fbd0c546107:   add    eax,0xc
  0x00007fbd0c54610a:   movsxd r10,r10d
  0x00007fbd0c54610d:   mov    QWORD PTR [r9+r10*1],r11
  0x00007fbd0c546111:   movsxd r10,eax
  0x00007fbd0c546114:   mov    QWORD PTR [r9+r10*1],r11
  0x00007fbd0c546118:   mov    r10d,ebx
  0x00007fbd0c54611b:   add    r10d,0xd
  0x00007fbd0c54611f:   movsxd r10,r10d
  0x00007fbd0c546122:   mov    QWORD PTR [r9+r10*1],r11
  0x00007fbd0c546126:   mov    QWORD PTR [r9+r13*1],r11
  0x00007fbd0c54612a:   mov    QWORD PTR [r9+rdx*1],r11     ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.HeapByteBuffer::putLong@28 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c54612e:   add    ebx,0x10                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007fbd0c546131:   cmp    ebx,esi
  0x00007fbd0c546133:   jl     0x00007fbd0c546064           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007fbd0c546139:   jmp    0x00007fbd0c546011
  0x00007fbd0c54613e:   mov    r13,rbp
  0x00007fbd0c546141:   vmovq  rdx,xmm1
  0x00007fbd0c546146:   vmovd  eax,xmm3
  0x00007fbd0c54614a:   vmovd  ecx,xmm2
  0x00007fbd0c54614e:   cmp    ebx,0x400000
  0x00007fbd0c546154:   jge    0x00007fbd0c546188
  0x00007fbd0c546156:   xchg   ax,ax
  0x00007fbd0c546158:   test   ebx,ebx
  0x00007fbd0c54615a:   nop    WORD PTR [rax+rax*1+0x0]
  0x00007fbd0c546160:   jl     0x00007fbd0c5461a0           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c546166:   mov    r10d,ecx
  0x00007fbd0c546169:   sub    r10d,ebx                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c54616c:   cmp    r10d,0x8
  0x00007fbd0c546170:   jl     0x00007fbd0c5461c8           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c546176:   movsxd r10,ebx
  0x00007fbd0c546179:   mov    QWORD PTR [r9+r10*1],r11     ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.HeapByteBuffer::putLong@28 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c54617d:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007fbd0c54617f:   nop
  0x00007fbd0c546180:   cmp    ebx,0x400000
  0x00007fbd0c546186:   jl     0x00007fbd0c546158
  0x00007fbd0c546188:   vmovq  rbp,xmm0                     ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007fbd0c54618d:   mov    esi,0xffffff45
  0x00007fbd0c546192:   mov    QWORD PTR [rsp],r13
  0x00007fbd0c546196:   mov    DWORD PTR [rsp+0xc],ebx
  0x00007fbd0c54619a:   nop
  0x00007fbd0c54619b:   call   0x00007fbd04a59e80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@18 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fbd0c5461a0:   mov    esi,0xffffff45
  0x00007fbd0c5461a5:   mov    QWORD PTR [rsp+0x10],rdx
  0x00007fbd0c5461aa:   mov    QWORD PTR [rsp+0x18],r13
  0x00007fbd0c5461af:   mov    QWORD PTR [rsp+0x20],rdx
  0x00007fbd0c5461b4:   mov    DWORD PTR [rsp+0xc],ebx
  0x00007fbd0c5461b8:   mov    DWORD PTR [rsp+0x30],ebx
  0x00007fbd0c5461bc:   mov    DWORD PTR [rsp+0x34],eax
  0x00007fbd0c5461c0:   data16 xchg ax,ax
  0x00007fbd0c5461c3:   call   0x00007fbd04a59e80           ; ImmutableOopMap {[16]=Oop [32]=Oop [52]=NarrowOop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fbd0c5461c8:   mov    esi,0xffffff45
  0x00007fbd0c5461cd:   mov    QWORD PTR [rsp+0x10],rdx
  0x00007fbd0c5461d2:   mov    QWORD PTR [rsp+0x18],r13
  0x00007fbd0c5461d7:   mov    QWORD PTR [rsp+0x20],rdx
  0x00007fbd0c5461dc:   mov    DWORD PTR [rsp+0xc],ebx
  0x00007fbd0c5461e0:   mov    DWORD PTR [rsp+0x28],r10d
  0x00007fbd0c5461e5:   mov    DWORD PTR [rsp+0x2c],eax
  0x00007fbd0c5461e9:   xchg   ax,ax
  0x00007fbd0c5461eb:   call   0x00007fbd04a59e80           ; ImmutableOopMap {[16]=Oop [32]=Oop [44]=NarrowOop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fbd0c5461f0:   xor    ebp,ebp
  0x00007fbd0c5461f2:   mov    esi,0xffffff76
  0x00007fbd0c5461f7:   mov    QWORD PTR [rsp],r13
  0x00007fbd0c5461fb:   mov    DWORD PTR [rsp+0x8],ebx
  0x00007fbd0c5461ff:   call   0x00007fbd04a59e80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fbd0c546204:   mov    esi,0xffffff8d
  0x00007fbd0c546209:   mov    QWORD PTR [rsp],r13
  0x00007fbd0c54620d:   mov    DWORD PTR [rsp+0x8],ebx
  0x00007fbd0c546211:   xchg   ax,ax
  0x00007fbd0c546213:   call   0x00007fbd04a59e80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fbd0c546218:   hlt    
  0x00007fbd0c546219:   hlt    
  0x00007fbd0c54621a:   hlt    
  0x00007fbd0c54621b:   hlt    
  0x00007fbd0c54621c:   hlt    
  0x00007fbd0c54621d:   hlt    
  0x00007fbd0c54621e:   hlt    
  0x00007fbd0c54621f:   hlt    
[Exception Handler]
  0x00007fbd0c546220:   jmp    0x00007fbd04abd280           ;   {no_reloc}
[Deopt Handler Code]
  0x00007fbd0c546225:   call   0x00007fbd0c54622a
  0x00007fbd0c54622a:   sub    QWORD PTR [rsp],0x5
  0x00007fbd0c54622f:   jmp    0x00007fbd04aa0f20           ;   {runtime_call DeoptimizationBlob}
  0x00007fbd0c546234:   hlt    
  0x00007fbd0c546235:   hlt    
  0x00007fbd0c546236:   hlt    
  0x00007fbd0c546237:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     336  485 %     4       me.serce.BufferAccessBenchmark::putLong @ 14 (37 bytes)
 total in heap  [0x00007fbd0c546610,0x00007fbd0c546e70] = 2144
 relocation     [0x00007fbd0c546768,0x00007fbd0c546788] = 32
 main code      [0x00007fbd0c5467a0,0x00007fbd0c546b00] = 864
 stub code      [0x00007fbd0c546b00,0x00007fbd0c546b18] = 24
 oops           [0x00007fbd0c546b18,0x00007fbd0c546b28] = 16
 metadata       [0x00007fbd0c546b28,0x00007fbd0c546b58] = 48
 scopes data    [0x00007fbd0c546b58,0x00007fbd0c546c68] = 272
 scopes pcs     [0x00007fbd0c546c68,0x00007fbd0c546e68] = 512
 dependencies   [0x00007fbd0c546e68,0x00007fbd0c546e70] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007fbd00a44588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007fbd0c5467a0:   call   0x00007fbd22da6b10           ;   {runtime_call os::breakpoint()}
  0x00007fbd0c5467a5:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007fbd0c5467b0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007fbd0c5467b7:   push   rbp
  0x00007fbd0c5467b8:   sub    rsp,0x50
  0x00007fbd0c5467bc:   mov    rbp,QWORD PTR [rsi+0x8]
  0x00007fbd0c5467c0:   mov    r13,QWORD PTR [rsi+0x10]
  0x00007fbd0c5467c4:   mov    ebx,DWORD PTR [rsi]
  0x00007fbd0c5467c6:   mov    rdi,rsi
  0x00007fbd0c5467c9:   movabs r10,0x7fbd22e806d0
  0x00007fbd0c5467d3:   call   r10
  0x00007fbd0c5467d6:   test   rbp,rbp
  0x00007fbd0c5467d9:   je     0x00007fbd0c546a78
  0x00007fbd0c5467df:   mov    r10d,DWORD PTR [rbp+0x8]
  0x00007fbd0c5467e3:   movabs r11,0x8001177d8              ;   {metadata('java/nio/ByteBuffer')}
  0x00007fbd0c5467ed:   movabs r8,0x800000000
  0x00007fbd0c5467f7:   lea    r8,[r8+r10*8]
  0x00007fbd0c5467fb:   mov    r10,QWORD PTR [r8+0x40]
  0x00007fbd0c5467ff:   nop
  0x00007fbd0c546800:   cmp    r10,r11
  0x00007fbd0c546803:   jne    0x00007fbd0c546a8c           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007fbd0c546809:   mov    r11d,DWORD PTR [rbp+0x8]
  0x00007fbd0c54680d:   cmp    r11d,0x3fa5b                 ;   {metadata('java/nio/HeapByteBuffer')}
  0x00007fbd0c546814:   jne    0x00007fbd0c546a7a
  0x00007fbd0c54681a:   mov    rax,rbp                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c54681d:   data16 xchg ax,ax
  0x00007fbd0c546820:   cmp    r12d,DWORD PTR [rax+0x24]
  0x00007fbd0c546824:   jne    0x00007fbd0c546a7a
  0x00007fbd0c54682a:   movzx  r10d,BYTE PTR [rax+0x2d]
  0x00007fbd0c54682f:   test   r10d,r10d
  0x00007fbd0c546832:   je     0x00007fbd0c546a7a
  0x00007fbd0c546838:   mov    ecx,DWORD PTR [rax+0x30]     ;*getfield hb {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::putLong@8 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c54683b:   test   ecx,ecx
  0x00007fbd0c54683d:   data16 xchg ax,ax
  0x00007fbd0c546840:   je     0x00007fbd0c546a7a
  0x00007fbd0c546846:   cmp    ebx,0x400000
  0x00007fbd0c54684c:   jge    0x00007fbd0c546a68           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007fbd0c546852:   mov    r8,QWORD PTR [rax+0x10]
  0x00007fbd0c546856:   mov    edi,DWORD PTR [rax+0x1c]     ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c546859:   mov    r11,r13
  0x00007fbd0c54685c:   bswap  r11                          ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@12 (line 3829)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3686)
                                                            ; - java.nio.HeapByteBuffer::putLong@28 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c54685f:   movsxd r9,edi
  0x00007fbd0c546862:   mov    r10d,ebx
  0x00007fbd0c546865:   inc    r10d
  0x00007fbd0c546868:   neg    r9
  0x00007fbd0c54686b:   mov    rdx,rcx                      ;*getfield hb {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::putLong@8 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c54686e:   vmovq  xmm1,rdx
  0x00007fbd0c546873:   mov    rsi,rdx
  0x00007fbd0c546876:   add    rsi,r8
  0x00007fbd0c546879:   mov    edx,0x400000
  0x00007fbd0c54687e:   mov    r8,0xffffffff80000001
  0x00007fbd0c546885:   sub    r8,r9
  0x00007fbd0c546888:   mov    r8d,r8d
  0x00007fbd0c54688b:   cmp    r10d,r8d
  0x00007fbd0c54688e:   cmovl  r10d,r8d
  0x00007fbd0c546892:   xor    r8d,r8d
  0x00007fbd0c546895:   cmp    r10d,r8d
  0x00007fbd0c546898:   cmovl  r10d,r8d
  0x00007fbd0c54689c:   nop    DWORD PTR [rax+0x0]
  0x00007fbd0c5468a0:   cmp    r10d,edx
  0x00007fbd0c5468a3:   cmovg  r10d,edx
  0x00007fbd0c5468a7:   test   ebx,ebx
  0x00007fbd0c5468a9:   jl     0x00007fbd0c546aa0           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c5468af:   mov    ebp,edi
  0x00007fbd0c5468b1:   sub    ebp,ebx                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c5468b3:   cmp    ebp,0x8
  0x00007fbd0c5468b6:   jl     0x00007fbd0c546ac8           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c5468bc:   movsxd r8,ebx
  0x00007fbd0c5468bf:   mov    QWORD PTR [rsi+r8*1],r11     ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.HeapByteBuffer::putLong@28 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c5468c3:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007fbd0c5468c5:   cmp    ebx,r10d
  0x00007fbd0c5468c8:   jl     0x00007fbd0c5468a7           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007fbd0c5468ca:   mov    rbp,0xfffffffffffffff9
  0x00007fbd0c5468d1:   sub    rbp,r9
  0x00007fbd0c5468d4:   mov    r10d,ebp
  0x00007fbd0c5468d7:   mov    r8d,0x80000000
  0x00007fbd0c5468dd:   cmp    rbp,0xffffffff80000000
  0x00007fbd0c5468e4:   cmovl  r10d,r8d
  0x00007fbd0c5468e8:   cmp    r10d,r8d
  0x00007fbd0c5468eb:   cmovg  r10d,r8d
  0x00007fbd0c5468ef:   cmp    r10d,edx
  0x00007fbd0c5468f2:   cmovg  r10d,edx
  0x00007fbd0c5468f6:   mov    edx,r10d
  0x00007fbd0c5468f9:   add    edx,0xfffffff1
  0x00007fbd0c5468fc:   cmp    r10d,edx
  0x00007fbd0c5468ff:   cmovl  edx,r8d
  0x00007fbd0c546903:   cmp    ebx,edx
  0x00007fbd0c546905:   jge    0x00007fbd0c546a30           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007fbd0c54690b:   mov    ebp,0x3e80
  0x00007fbd0c546910:   jmp    0x00007fbd0c54691a
  0x00007fbd0c546912:   mov    ecx,r14d
  0x00007fbd0c546915:   vmovq  r13,xmm0
  0x00007fbd0c54691a:   mov    r8d,edx
  0x00007fbd0c54691d:   sub    r8d,ebx
  0x00007fbd0c546920:   xor    r9d,r9d
  0x00007fbd0c546923:   cmp    edx,ebx
  0x00007fbd0c546925:   cmovl  r8d,r9d
  0x00007fbd0c546929:   cmp    r8d,0x3e80
  0x00007fbd0c546930:   cmova  r8d,ebp
  0x00007fbd0c546934:   add    r8d,ebx
  0x00007fbd0c546937:   mov    r14d,ecx
  0x00007fbd0c54693a:   vmovq  xmm0,r13
  0x00007fbd0c54693f:   nop                                 ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c546940:   mov    r9d,ebx
  0x00007fbd0c546943:   add    r9d,0xf
  0x00007fbd0c546947:   mov    ecx,ebx
  0x00007fbd0c546949:   add    ecx,0xe
  0x00007fbd0c54694c:   movsxd r9,r9d
  0x00007fbd0c54694f:   movsxd r13,ecx
  0x00007fbd0c546952:   movsxd r10,ebx
  0x00007fbd0c546955:   mov    QWORD PTR [rsi+r10*1],r11
  0x00007fbd0c546959:   mov    r10d,ebx
  0x00007fbd0c54695c:   inc    r10d
  0x00007fbd0c54695f:   mov    ecx,ebx
  0x00007fbd0c546961:   add    ecx,0x2
  0x00007fbd0c546964:   movsxd r10,r10d
  0x00007fbd0c546967:   mov    QWORD PTR [rsi+r10*1],r11
  0x00007fbd0c54696b:   movsxd r10,ecx
  0x00007fbd0c54696e:   mov    QWORD PTR [rsi+r10*1],r11
  0x00007fbd0c546972:   mov    r10d,ebx
  0x00007fbd0c546975:   add    r10d,0x3
  0x00007fbd0c546979:   mov    ecx,ebx
  0x00007fbd0c54697b:   add    ecx,0x4
  0x00007fbd0c54697e:   movsxd r10,r10d
  0x00007fbd0c546981:   mov    QWORD PTR [rsi+r10*1],r11
  0x00007fbd0c546985:   movsxd r10,ecx
  0x00007fbd0c546988:   mov    QWORD PTR [rsi+r10*1],r11
  0x00007fbd0c54698c:   mov    r10d,ebx
  0x00007fbd0c54698f:   add    r10d,0x5
  0x00007fbd0c546993:   mov    ecx,ebx
  0x00007fbd0c546995:   add    ecx,0x6
  0x00007fbd0c546998:   movsxd r10,r10d
  0x00007fbd0c54699b:   mov    QWORD PTR [rsi+r10*1],r11
  0x00007fbd0c54699f:   movsxd r10,ecx
  0x00007fbd0c5469a2:   mov    QWORD PTR [rsi+r10*1],r11
  0x00007fbd0c5469a6:   mov    r10d,ebx
  0x00007fbd0c5469a9:   add    r10d,0x7
  0x00007fbd0c5469ad:   mov    ecx,ebx
  0x00007fbd0c5469af:   add    ecx,0x8
  0x00007fbd0c5469b2:   movsxd r10,r10d
  0x00007fbd0c5469b5:   mov    QWORD PTR [rsi+r10*1],r11
  0x00007fbd0c5469b9:   movsxd r10,ecx
  0x00007fbd0c5469bc:   mov    QWORD PTR [rsi+r10*1],r11
  0x00007fbd0c5469c0:   mov    r10d,ebx
  0x00007fbd0c5469c3:   add    r10d,0x9
  0x00007fbd0c5469c7:   mov    ecx,ebx
  0x00007fbd0c5469c9:   add    ecx,0xa
  0x00007fbd0c5469cc:   movsxd r10,r10d
  0x00007fbd0c5469cf:   mov    QWORD PTR [rsi+r10*1],r11
  0x00007fbd0c5469d3:   movsxd r10,ecx
  0x00007fbd0c5469d6:   mov    QWORD PTR [rsi+r10*1],r11
  0x00007fbd0c5469da:   mov    r10d,ebx
  0x00007fbd0c5469dd:   add    r10d,0xb
  0x00007fbd0c5469e1:   mov    ecx,ebx
  0x00007fbd0c5469e3:   add    ecx,0xc
  0x00007fbd0c5469e6:   movsxd r10,r10d
  0x00007fbd0c5469e9:   mov    QWORD PTR [rsi+r10*1],r11
  0x00007fbd0c5469ed:   movsxd r10,ecx
  0x00007fbd0c5469f0:   mov    QWORD PTR [rsi+r10*1],r11
  0x00007fbd0c5469f4:   mov    r10d,ebx
  0x00007fbd0c5469f7:   add    r10d,0xd
  0x00007fbd0c5469fb:   movsxd r10,r10d
  0x00007fbd0c5469fe:   mov    QWORD PTR [rsi+r10*1],r11
  0x00007fbd0c546a02:   mov    QWORD PTR [rsi+r13*1],r11
  0x00007fbd0c546a06:   mov    QWORD PTR [rsi+r9*1],r11     ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.HeapByteBuffer::putLong@28 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c546a0a:   add    ebx,0x10                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007fbd0c546a0d:   cmp    ebx,r8d
  0x00007fbd0c546a10:   jl     0x00007fbd0c546940           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007fbd0c546a16:   mov    r8,QWORD PTR [r15+0x110]     ; ImmutableOopMap {rsi=Derived_oop_xmm1 rax=Oop r14=NarrowOop xmm1=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007fbd0c546a1d:   test   DWORD PTR [r8],eax           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {poll}
  0x00007fbd0c546a20:   cmp    ebx,edx
  0x00007fbd0c546a22:   jl     0x00007fbd0c546912
  0x00007fbd0c546a28:   mov    ecx,r14d
  0x00007fbd0c546a2b:   vmovq  r13,xmm0
  0x00007fbd0c546a30:   cmp    ebx,0x400000
  0x00007fbd0c546a36:   jge    0x00007fbd0c546a68
  0x00007fbd0c546a38:   test   ebx,ebx
  0x00007fbd0c546a3a:   nop    WORD PTR [rax+rax*1+0x0]
  0x00007fbd0c546a40:   jl     0x00007fbd0c546aa0           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c546a46:   mov    ebp,edi
  0x00007fbd0c546a48:   sub    ebp,ebx                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c546a4a:   cmp    ebp,0x8
  0x00007fbd0c546a4d:   jl     0x00007fbd0c546ac8           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c546a53:   movsxd r10,ebx
  0x00007fbd0c546a56:   mov    QWORD PTR [rsi+r10*1],r11    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.HeapByteBuffer::putLong@28 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c546a5a:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007fbd0c546a5c:   nop    DWORD PTR [rax+0x0]
  0x00007fbd0c546a60:   cmp    ebx,0x400000
  0x00007fbd0c546a66:   jl     0x00007fbd0c546a38           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007fbd0c546a68:   add    rsp,0x50
  0x00007fbd0c546a6c:   pop    rbp
  0x00007fbd0c546a6d:   mov    r10,QWORD PTR [r15+0x110]
  0x00007fbd0c546a74:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007fbd0c546a77:   ret    
  0x00007fbd0c546a78:   xor    ebp,ebp
  0x00007fbd0c546a7a:   mov    esi,0xffffffbe
  0x00007fbd0c546a7f:   mov    QWORD PTR [rsp],r13
  0x00007fbd0c546a83:   mov    DWORD PTR [rsp+0x8],ebx
  0x00007fbd0c546a87:   call   0x00007fbd04a59e80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fbd0c546a8c:   mov    esi,0xffffff8d
  0x00007fbd0c546a91:   mov    QWORD PTR [rsp],r13
  0x00007fbd0c546a95:   mov    DWORD PTR [rsp+0x8],ebx
  0x00007fbd0c546a99:   xchg   ax,ax
  0x00007fbd0c546a9b:   call   0x00007fbd04a59e80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fbd0c546aa0:   mov    esi,0xffffff45
  0x00007fbd0c546aa5:   mov    QWORD PTR [rsp+0x10],rax
  0x00007fbd0c546aaa:   mov    QWORD PTR [rsp+0x18],r13
  0x00007fbd0c546aaf:   mov    QWORD PTR [rsp+0x20],rax
  0x00007fbd0c546ab4:   mov    DWORD PTR [rsp+0xc],ebx
  0x00007fbd0c546ab8:   mov    DWORD PTR [rsp+0x30],ebx
  0x00007fbd0c546abc:   mov    DWORD PTR [rsp+0x34],ecx
  0x00007fbd0c546ac0:   data16 xchg ax,ax
  0x00007fbd0c546ac3:   call   0x00007fbd04a59e80           ; ImmutableOopMap {[16]=Oop [32]=Oop [52]=NarrowOop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@1 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fbd0c546ac8:   mov    esi,0xffffff45
  0x00007fbd0c546acd:   mov    QWORD PTR [rsp+0x18],rax
  0x00007fbd0c546ad2:   mov    QWORD PTR [rsp+0x20],r13
  0x00007fbd0c546ad7:   mov    QWORD PTR [rsp+0x28],rax
  0x00007fbd0c546adc:   mov    DWORD PTR [rsp+0x14],ebx
  0x00007fbd0c546ae0:   mov    DWORD PTR [rsp+0x30],ecx
  0x00007fbd0c546ae4:   data16 xchg ax,ax
  0x00007fbd0c546ae7:   call   0x00007fbd04a59e80           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=NarrowOop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fbd0c546aec:   hlt    
  0x00007fbd0c546aed:   hlt    
  0x00007fbd0c546aee:   hlt    
  0x00007fbd0c546aef:   hlt    
  0x00007fbd0c546af0:   hlt    
  0x00007fbd0c546af1:   hlt    
  0x00007fbd0c546af2:   hlt    
  0x00007fbd0c546af3:   hlt    
  0x00007fbd0c546af4:   hlt    
  0x00007fbd0c546af5:   hlt    
  0x00007fbd0c546af6:   hlt    
  0x00007fbd0c546af7:   hlt    
  0x00007fbd0c546af8:   hlt    
  0x00007fbd0c546af9:   hlt    
  0x00007fbd0c546afa:   hlt    
  0x00007fbd0c546afb:   hlt    
  0x00007fbd0c546afc:   hlt    
  0x00007fbd0c546afd:   hlt    
  0x00007fbd0c546afe:   hlt    
  0x00007fbd0c546aff:   hlt    
[Exception Handler]
  0x00007fbd0c546b00:   jmp    0x00007fbd04abd280           ;   {no_reloc}
[Deopt Handler Code]
  0x00007fbd0c546b05:   call   0x00007fbd0c546b0a
  0x00007fbd0c546b0a:   sub    QWORD PTR [rsp],0x5
  0x00007fbd0c546b0f:   jmp    0x00007fbd04aa0f20           ;   {runtime_call DeoptimizationBlob}
  0x00007fbd0c546b14:   hlt    
  0x00007fbd0c546b15:   hlt    
  0x00007fbd0c546b16:   hlt    
  0x00007fbd0c546b17:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     355  486       4       me.serce.BufferAccessBenchmark::putLong (37 bytes)
 total in heap  [0x00007fbd0c546e90,0x00007fbd0c547598] = 1800
 relocation     [0x00007fbd0c546fe8,0x00007fbd0c547000] = 24
 main code      [0x00007fbd0c547000,0x00007fbd0c547240] = 576
 stub code      [0x00007fbd0c547240,0x00007fbd0c547258] = 24
 oops           [0x00007fbd0c547258,0x00007fbd0c547268] = 16
 metadata       [0x00007fbd0c547268,0x00007fbd0c547298] = 48
 scopes data    [0x00007fbd0c547298,0x00007fbd0c547380] = 232
 scopes pcs     [0x00007fbd0c547380,0x00007fbd0c547580] = 512
 dependencies   [0x00007fbd0c547580,0x00007fbd0c547588] = 8
 nul chk table  [0x00007fbd0c547588,0x00007fbd0c547598] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007fbd00a44588} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  # this:     rsi:rsi   = 'me/serce/BufferAccessBenchmark'
  # parm0:    rdx:rdx   = 'org/openjdk/jmh/infra/Blackhole'
  #           [sp+0x50]  (sp of caller)
  0x00007fbd0c547000:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007fbd0c547004:   shl    r10,0x3
  0x00007fbd0c547008:   movabs r11,0x800000000
  0x00007fbd0c547012:   add    r10,r11
  0x00007fbd0c547015:   cmp    rax,r10
  0x00007fbd0c547018:   jne    0x00007fbd04a9e700           ;   {runtime_call ic_miss_stub}
  0x00007fbd0c54701e:   xchg   ax,ax
[Verified Entry Point]
  0x00007fbd0c547020:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007fbd0c547027:   push   rbp
  0x00007fbd0c547028:   sub    rsp,0x40                     ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
  0x00007fbd0c54702c:   mov    rcx,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@1 (line 64)
  0x00007fbd0c547030:   mov    r10d,DWORD PTR [rsi+0x18]    ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@6 (line 65)
  0x00007fbd0c547034:   mov    r11d,DWORD PTR [r10+0x8]     ; implicit exception: dispatches to 0x00007fbd0c5471e8
  0x00007fbd0c547038:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00007fbd0c547040:   cmp    r11d,0x3fa5b                 ;   {metadata('java/nio/HeapByteBuffer')}
  0x00007fbd0c547047:   jne    0x00007fbd0c5471e8
  0x00007fbd0c54704d:   mov    r14,r10                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c547050:   cmp    r12d,DWORD PTR [r14+0x24]
  0x00007fbd0c547054:   jne    0x00007fbd0c5471e8
  0x00007fbd0c54705a:   movzx  r11d,BYTE PTR [r14+0x2d]
  0x00007fbd0c54705f:   nop
  0x00007fbd0c547060:   test   r11d,r11d
  0x00007fbd0c547063:   je     0x00007fbd0c5471e8
  0x00007fbd0c547069:   mov    edi,DWORD PTR [r14+0x30]     ;*getfield hb {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::putLong@8 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c54706d:   test   edi,edi
  0x00007fbd0c54706f:   je     0x00007fbd0c5471e8
  0x00007fbd0c547075:   mov    r10,QWORD PTR [r14+0x10]
  0x00007fbd0c547079:   mov    edx,DWORD PTR [r14+0x1c]     ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c54707d:   mov    r11,rcx
  0x00007fbd0c547080:   bswap  r11                          ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@12 (line 3829)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3686)
                                                            ; - java.nio.HeapByteBuffer::putLong@28 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c547083:   movsxd rsi,edx
  0x00007fbd0c547086:   mov    r8,rdi                       ;*getfield hb {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::putLong@8 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c547089:   mov    rbp,r8
  0x00007fbd0c54708c:   add    rbp,r10
  0x00007fbd0c54708f:   neg    rsi
  0x00007fbd0c547092:   mov    ebx,0x1
  0x00007fbd0c547097:   xor    r13d,r13d
  0x00007fbd0c54709a:   mov    eax,0x400000
  0x00007fbd0c54709f:   mov    r10,0xffffffff80000001
  0x00007fbd0c5470a6:   sub    r10,rsi
  0x00007fbd0c5470a9:   mov    r10d,r10d
  0x00007fbd0c5470ac:   cmp    r10d,ebx
  0x00007fbd0c5470af:   cmovl  r10d,ebx
  0x00007fbd0c5470b3:   cmp    r10d,eax
  0x00007fbd0c5470b6:   cmovg  r10d,eax
  0x00007fbd0c5470ba:   xor    ebx,ebx                      ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 67)
  0x00007fbd0c5470bc:   mov    r9d,edx
  0x00007fbd0c5470bf:   sub    r9d,ebx                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c5470c2:   cmp    r9d,0x8
  0x00007fbd0c5470c6:   jl     0x00007fbd0c5471fc           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c5470cc:   movsxd r9,ebx
  0x00007fbd0c5470cf:   mov    QWORD PTR [rbp+r9*1+0x0],r11 ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.HeapByteBuffer::putLong@28 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c5470d4:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007fbd0c5470d6:   cmp    ebx,r10d
  0x00007fbd0c5470d9:   jl     0x00007fbd0c5470bc           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007fbd0c5470db:   mov    r10,0xfffffffffffffff9
  0x00007fbd0c5470e2:   sub    r10,rsi
  0x00007fbd0c5470e5:   mov    r9d,r10d
  0x00007fbd0c5470e8:   mov    esi,0x80000000
  0x00007fbd0c5470ed:   cmp    r10,0xffffffff80000000
  0x00007fbd0c5470f4:   cmovl  r9d,esi
  0x00007fbd0c5470f8:   cmp    r9d,eax
  0x00007fbd0c5470fb:   cmovg  r9d,eax
  0x00007fbd0c5470ff:   mov    r10d,r9d
  0x00007fbd0c547102:   add    r10d,0xfffffff1
  0x00007fbd0c547106:   cmp    r9d,r10d
  0x00007fbd0c547109:   cmovl  r10d,esi
  0x00007fbd0c54710d:   cmp    ebx,r10d
  0x00007fbd0c547110:   jge    0x00007fbd0c5471aa           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007fbd0c547116:   mov    eax,0x3e80
  0x00007fbd0c54711b:   jmp    0x00007fbd0c547124
  0x00007fbd0c54711d:   data16 xchg ax,ax
  0x00007fbd0c547120:   vmovd  edi,xmm0
  0x00007fbd0c547124:   mov    esi,r10d
  0x00007fbd0c547127:   sub    esi,ebx
  0x00007fbd0c547129:   cmp    r10d,ebx
  0x00007fbd0c54712c:   cmovl  esi,r13d
  0x00007fbd0c547130:   cmp    esi,0x3e80
  0x00007fbd0c547136:   cmova  esi,eax
  0x00007fbd0c547139:   add    esi,ebx
  0x00007fbd0c54713b:   vmovd  xmm0,edi
  0x00007fbd0c54713f:   nop                                 ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 67)
  0x00007fbd0c547140:   movsxd r9,ebx                       ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::putLong@19 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c547143:   mov    rdi,rbp
  0x00007fbd0c547146:   add    rdi,r9
  0x00007fbd0c547149:   mov    QWORD PTR [rdi],r11
  0x00007fbd0c54714c:   mov    QWORD PTR [rdi+0x1],r11
  0x00007fbd0c547150:   mov    QWORD PTR [rdi+0x2],r11
  0x00007fbd0c547154:   mov    QWORD PTR [rdi+0x3],r11
  0x00007fbd0c547158:   mov    QWORD PTR [rdi+0x4],r11
  0x00007fbd0c54715c:   mov    QWORD PTR [rdi+0x5],r11
  0x00007fbd0c547160:   mov    QWORD PTR [rdi+0x6],r11
  0x00007fbd0c547164:   mov    QWORD PTR [rdi+0x7],r11
  0x00007fbd0c547168:   mov    QWORD PTR [rdi+0x8],r11
  0x00007fbd0c54716c:   mov    QWORD PTR [rdi+0x9],r11
  0x00007fbd0c547170:   mov    QWORD PTR [rdi+0xa],r11
  0x00007fbd0c547174:   mov    QWORD PTR [rdi+0xb],r11
  0x00007fbd0c547178:   mov    QWORD PTR [rdi+0xc],r11
  0x00007fbd0c54717c:   mov    QWORD PTR [rdi+0xd],r11
  0x00007fbd0c547180:   mov    QWORD PTR [rdi+0xe],r11
  0x00007fbd0c547184:   mov    QWORD PTR [rdi+0xf],r11      ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.HeapByteBuffer::putLong@28 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c547188:   add    ebx,0x10                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007fbd0c54718b:   cmp    ebx,esi
  0x00007fbd0c54718d:   jl     0x00007fbd0c547140           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007fbd0c54718f:   mov    rdi,QWORD PTR [r15+0x110]    ; ImmutableOopMap {r8=Oop rbp=Derived_oop_r8 r14=Oop xmm0=NarrowOop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007fbd0c547196:   test   DWORD PTR [rdi],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {poll}
  0x00007fbd0c547198:   cmp    ebx,r10d
  0x00007fbd0c54719b:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00007fbd0c5471a0:   jl     0x00007fbd0c54711d
  0x00007fbd0c5471a6:   vmovd  edi,xmm0
  0x00007fbd0c5471aa:   cmp    ebx,0x400000
  0x00007fbd0c5471b0:   jge    0x00007fbd0c5471d8
  0x00007fbd0c5471b2:   xchg   ax,ax                        ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 67)
  0x00007fbd0c5471b4:   mov    r9d,edx
  0x00007fbd0c5471b7:   sub    r9d,ebx                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c5471ba:   nop    WORD PTR [rax+rax*1+0x0]
  0x00007fbd0c5471c0:   cmp    r9d,0x8
  0x00007fbd0c5471c4:   jl     0x00007fbd0c5471fc           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c5471c6:   movsxd r10,ebx
  0x00007fbd0c5471c9:   mov    QWORD PTR [rbp+r10*1+0x0],r11;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3686)
                                                            ; - java.nio.HeapByteBuffer::putLong@28 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007fbd0c5471ce:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007fbd0c5471d0:   cmp    ebx,0x400000
  0x00007fbd0c5471d6:   jl     0x00007fbd0c5471b4
  0x00007fbd0c5471d8:   add    rsp,0x40
  0x00007fbd0c5471dc:   pop    rbp
  0x00007fbd0c5471dd:   mov    r10,QWORD PTR [r15+0x110]
  0x00007fbd0c5471e4:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007fbd0c5471e7:   ret                                 ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007fbd0c5471e8:   mov    esi,0xffffff76
  0x00007fbd0c5471ed:   mov    rbp,rcx
  0x00007fbd0c5471f0:   mov    DWORD PTR [rsp],r10d
  0x00007fbd0c5471f4:   data16 xchg ax,ax
  0x00007fbd0c5471f7:   call   0x00007fbd04a59e80           ; ImmutableOopMap {[0]=NarrowOop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@18 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fbd0c5471fc:   mov    esi,0xffffff45
  0x00007fbd0c547201:   mov    QWORD PTR [rsp+0x10],r14
  0x00007fbd0c547206:   mov    QWORD PTR [rsp+0x18],rcx
  0x00007fbd0c54720b:   mov    QWORD PTR [rsp+0x20],r14
  0x00007fbd0c547210:   mov    DWORD PTR [rsp+0xc],ebx
  0x00007fbd0c547214:   mov    DWORD PTR [rsp+0x28],r9d
  0x00007fbd0c547219:   mov    DWORD PTR [rsp+0x2c],edi
  0x00007fbd0c54721d:   xchg   ax,ax
  0x00007fbd0c54721f:   call   0x00007fbd04a59e80           ; ImmutableOopMap {[16]=Oop [32]=Oop [44]=NarrowOop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 743)
                                                            ; - java.nio.HeapByteBuffer::putLong@16 (line 512)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007fbd0c547224:   hlt    
  0x00007fbd0c547225:   hlt    
  0x00007fbd0c547226:   hlt    
  0x00007fbd0c547227:   hlt    
  0x00007fbd0c547228:   hlt    
  0x00007fbd0c547229:   hlt    
  0x00007fbd0c54722a:   hlt    
  0x00007fbd0c54722b:   hlt    
  0x00007fbd0c54722c:   hlt    
  0x00007fbd0c54722d:   hlt    
  0x00007fbd0c54722e:   hlt    
  0x00007fbd0c54722f:   hlt    
  0x00007fbd0c547230:   hlt    
  0x00007fbd0c547231:   hlt    
  0x00007fbd0c547232:   hlt    
  0x00007fbd0c547233:   hlt    
  0x00007fbd0c547234:   hlt    
  0x00007fbd0c547235:   hlt    
  0x00007fbd0c547236:   hlt    
  0x00007fbd0c547237:   hlt    
  0x00007fbd0c547238:   hlt    
  0x00007fbd0c547239:   hlt    
  0x00007fbd0c54723a:   hlt    
  0x00007fbd0c54723b:   hlt    
  0x00007fbd0c54723c:   hlt    
  0x00007fbd0c54723d:   hlt    
  0x00007fbd0c54723e:   hlt    
  0x00007fbd0c54723f:   hlt    
[Exception Handler]
  0x00007fbd0c547240:   jmp    0x00007fbd04abd280           ;   {no_reloc}
[Deopt Handler Code]
  0x00007fbd0c547245:   call   0x00007fbd0c54724a
  0x00007fbd0c54724a:   sub    QWORD PTR [rsp],0x5
  0x00007fbd0c54724f:   jmp    0x00007fbd04aa0f20           ;   {runtime_call DeoptimizationBlob}
  0x00007fbd0c547254:   hlt    
  0x00007fbd0c547255:   hlt    
  0x00007fbd0c547256:   hlt    
  0x00007fbd0c547257:   hlt    
--------------------------------------------------------------------------------
2040900.574 ns/op
Iteration   1: 2026705.563 ns/op
Iteration   2: 2026502.006 ns/op
Iteration   3: 2025936.826 ns/op


Result "me.serce.BufferAccessBenchmark.putLong":
  2026381.465 ±(99.9%) 7266.329 ns/op [Average]
  (min, avg, max) = (2025936.826, 2026381.465, 2026705.563), stdev = 398.292
  CI (99.9%): [2019115.136, 2033647.794] (assumes normal distribution)


# Run complete. Total time: 00:02:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                       (bufferType)  Mode  Cnt        Score      Error  Units
BufferAccessBenchmark.putLong         direct  avgt    3  2026609.248 ± 1385.967  ns/op
BufferAccessBenchmark.putLong  direct-native  avgt    3  2026970.110 ± 4509.924  ns/op
BufferAccessBenchmark.putLong           heap  avgt    3  2026381.465 ± 7266.329  ns/op
