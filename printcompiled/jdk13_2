[2020-11-07 08:41:23] bench.sh: INFO: starting me.serce.BufferAccessBenchmark.putLong
# JMH version: 1.25.2
# VM version: JDK 13.0.4, OpenJDK 64-Bit Server VM, 13.0.4+8-MTS
# VM invoker: /usr/lib/jvm/zulu-13-amd64/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:PrintAssemblyOptions=intel -XX:CompileCommand=print,*BufferAccessBenchmark.putLong*
# Warmup: 1 iterations, 10 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: me.serce.BufferAccessBenchmark.putLong
# Parameters: (bufferType = direct)

# Run progress: 0.00% complete, ETA 00:02:00
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: printing of assembly code is enabled; turning on DebugNonSafepoints to gain additional outpuCompileCommand: print *BufferAccessBenchmark.putLong*
t
# Warmup Iteration   1: 
============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     306  503 %     3       me.serce.BufferAccessBenchmark::putLong @ 14 (37 bytes)
 total in heap  [0x00007f0158dc8f10,0x00007f0158dc9570] = 1632
 relocation     [0x00007f0158dc9070,0x00007f0158dc90b8] = 72
 main code      [0x00007f0158dc90c0,0x00007f0158dc9380] = 704
 stub code      [0x00007f0158dc9380,0x00007f0158dc93c0] = 64
 oops           [0x00007f0158dc93c0,0x00007f0158dc93c8] = 8
 metadata       [0x00007f0158dc93c8,0x00007f0158dc93d0] = 8
 scopes data    [0x00007f0158dc93d0,0x00007f0158dc9458] = 136
 scopes pcs     [0x00007f0158dc9458,0x00007f0158dc9558] = 256
 dependencies   [0x00007f0158dc9558,0x00007f0158dc9560] = 8
 nul chk table  [0x00007f0158dc9560,0x00007f0158dc9570] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f0174633c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f0158dc90c0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f0158dc90c4:   shl    r10,0x3
  0x00007f0158dc90c8:   movabs r12,0x800000000
  0x00007f0158dc90d2:   add    r10,r12
  0x00007f0158dc90d5:   xor    r12,r12
  0x00007f0158dc90d8:   cmp    r10,rax
  0x00007f0158dc90db:   jne    0x00007f01587cd580           ;   {runtime_call ic_miss_stub}
  0x00007f0158dc90e1:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f0158dc90ec:   data16 data16 xchg ax,ax
  0x00007f0158dc90f0:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f0158dc90fb:   data16 data16 xchg ax,ax
  0x00007f0158dc90ff:   nop
[Verified Entry Point]
  0x00007f0158dc9100:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f0158dc9107:   push   rbp
  0x00007f0158dc9108:   sub    rsp,0x60
  0x00007f0158dc910c:   movabs rdi,0x7f017466c200           ;   {metadata(method data for {method} {0x00007f0174633c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0158dc9116:   mov    ebx,DWORD PTR [rdi+0x13c]
  0x00007f0158dc911c:   add    ebx,0x8
  0x00007f0158dc911f:   mov    DWORD PTR [rdi+0x13c],ebx
  0x00007f0158dc9125:   and    ebx,0x1ff8
  0x00007f0158dc912b:   cmp    ebx,0x0
  0x00007f0158dc912e:   je     0x00007f0158dc92fa           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@0 (line 64)
  0x00007f0158dc9134:   mov    rdi,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@1 (line 64)
  0x00007f0158dc9138:   mov    esi,DWORD PTR [rsi+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@6 (line 65)
  0x00007f0158dc913b:   mov    ebx,0x0
  0x00007f0158dc9140:   jmp    0x00007f0158dc9266           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f0158dc9145:   data16 xchg ax,ax
  0x00007f0158dc9148:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x00007f0158dc931b
  0x00007f0158dc914b:   mov    rdx,rsi
  0x00007f0158dc914e:   movabs rcx,0x7f017466c200           ;   {metadata(method data for {method} {0x00007f0174633c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0158dc9158:   mov    edx,DWORD PTR [rdx+0x8]
  0x00007f0158dc915b:   shl    rdx,0x3
  0x00007f0158dc915f:   movabs r12,0x800000000
  0x00007f0158dc9169:   add    rdx,r12
  0x00007f0158dc916c:   xor    r12,r12
  0x00007f0158dc916f:   cmp    rdx,QWORD PTR [rcx+0x1b0]
  0x00007f0158dc9176:   jne    0x00007f0158dc9185
  0x00007f0158dc9178:   add    QWORD PTR [rcx+0x1b8],0x1
  0x00007f0158dc9180:   jmp    0x00007f0158dc91eb
  0x00007f0158dc9185:   cmp    rdx,QWORD PTR [rcx+0x1c0]
  0x00007f0158dc918c:   jne    0x00007f0158dc919b
  0x00007f0158dc918e:   add    QWORD PTR [rcx+0x1c8],0x1
  0x00007f0158dc9196:   jmp    0x00007f0158dc91eb
  0x00007f0158dc919b:   cmp    QWORD PTR [rcx+0x1b0],0x0
  0x00007f0158dc91a6:   jne    0x00007f0158dc91bf
  0x00007f0158dc91a8:   mov    QWORD PTR [rcx+0x1b0],rdx
  0x00007f0158dc91af:   mov    QWORD PTR [rcx+0x1b8],0x1
  0x00007f0158dc91ba:   jmp    0x00007f0158dc91eb
  0x00007f0158dc91bf:   cmp    QWORD PTR [rcx+0x1c0],0x0
  0x00007f0158dc91ca:   jne    0x00007f0158dc91e3
  0x00007f0158dc91cc:   mov    QWORD PTR [rcx+0x1c0],rdx
  0x00007f0158dc91d3:   mov    QWORD PTR [rcx+0x1c8],0x1
  0x00007f0158dc91de:   jmp    0x00007f0158dc91eb
  0x00007f0158dc91e3:   add    QWORD PTR [rcx+0x1a0],0x1
  0x00007f0158dc91eb:   mov    rdx,rbx
  0x00007f0158dc91ee:   mov    rcx,rdi
  0x00007f0158dc91f1:   mov    rax,rsi
  0x00007f0158dc91f4:   mov    rsi,rax                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0158dc91f7:   mov    QWORD PTR [rsp+0x48],rdi
  0x00007f0158dc91fc:   mov    QWORD PTR [rsp+0x40],rax
  0x00007f0158dc9201:   mov    DWORD PTR [rsp+0x2c],ebx
  0x00007f0158dc9205:   movabs rax,0x80015b098
  0x00007f0158dc920f:   call   0x00007f0160272d00           ; ImmutableOopMap {[64]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {virtual_call}
  0x00007f0158dc9214:   mov    ebx,DWORD PTR [rsp+0x2c]
  0x00007f0158dc9218:   inc    ebx
  0x00007f0158dc921a:   movabs rsi,0x7f017466c200           ;   {metadata(method data for {method} {0x00007f0174633c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0158dc9224:   mov    edi,DWORD PTR [rsi+0x140]
  0x00007f0158dc922a:   add    edi,0x8
  0x00007f0158dc922d:   mov    DWORD PTR [rsi+0x140],edi
  0x00007f0158dc9233:   and    edi,0xfff8
  0x00007f0158dc9239:   cmp    edi,0x0
  0x00007f0158dc923c:   je     0x00007f0158dc9320           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0158dc9242:   mov    r10,QWORD PTR [r15+0x108]    ; ImmutableOopMap {[64]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0158dc9249:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00007f0158dc924c:   movabs rsi,0x7f017466c200           ;   {metadata(method data for {method} {0x00007f0174633c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0158dc9256:   inc    DWORD PTR [rsi+0x1d8]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0158dc925c:   mov    rsi,QWORD PTR [rsp+0x40]
  0x00007f0158dc9261:   mov    rdi,QWORD PTR [rsp+0x48]
  0x00007f0158dc9266:   cmp    ebx,0x400000
  0x00007f0158dc926c:   movabs rdx,0x7f017466c200           ;   {metadata(method data for {method} {0x00007f0174633c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0158dc9276:   movabs rcx,0x190
  0x00007f0158dc9280:   jl     0x00007f0158dc9290
  0x00007f0158dc9286:   movabs rcx,0x180
  0x00007f0158dc9290:   mov    rax,QWORD PTR [rdx+rcx*1]
  0x00007f0158dc9294:   lea    rax,[rax+0x1]
  0x00007f0158dc9298:   mov    QWORD PTR [rdx+rcx*1],rax
  0x00007f0158dc929c:   jl     0x00007f0158dc9148           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f0158dc92a2:   add    rsp,0x60
  0x00007f0158dc92a6:   pop    rbp
  0x00007f0158dc92a7:   mov    r10,QWORD PTR [r15+0x108]
  0x00007f0158dc92ae:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f0158dc92b1:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@36 (line 69)
  0x00007f0158dc92b2:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f0158dc92b9:   push   rbp
  0x00007f0158dc92ba:   sub    rsp,0x60
  0x00007f0158dc92be:   mov    rbx,QWORD PTR [rsi+0x10]
  0x00007f0158dc92c2:   mov    rax,QWORD PTR [rsi+0x8]
  0x00007f0158dc92c6:   mov    edx,DWORD PTR [rsi]
  0x00007f0158dc92c8:   mov    rdi,rsi
  0x00007f0158dc92cb:   mov    QWORD PTR [rsp+0x38],rbx
  0x00007f0158dc92d0:   mov    QWORD PTR [rsp+0x30],rax
  0x00007f0158dc92d5:   mov    DWORD PTR [rsp+0x28],edx
  0x00007f0158dc92d9:   call   0x00007f01778a8b80           ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x00007f0158dc92de:   mov    edx,DWORD PTR [rsp+0x28]
  0x00007f0158dc92e2:   mov    rbx,rdx
  0x00007f0158dc92e5:   mov    rax,QWORD PTR [rsp+0x30]
  0x00007f0158dc92ea:   mov    rsi,rax
  0x00007f0158dc92ed:   mov    rdx,QWORD PTR [rsp+0x38]
  0x00007f0158dc92f2:   mov    rdi,rdx
  0x00007f0158dc92f5:   jmp    0x00007f0158dc9266
  0x00007f0158dc92fa:   movabs r10,0x7f0174633c98           ;   {metadata({method} {0x00007f0174633c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0158dc9304:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f0158dc9309:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f0158dc9311:   call   0x00007f0158880680           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f0158dc9316:   jmp    0x00007f0158dc9134
  0x00007f0158dc931b:   call   0x00007f01587ed720           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f0158dc9320:   movabs r10,0x7f0174633c98           ;   {metadata({method} {0x00007f0174633c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0158dc932a:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f0158dc932f:   mov    QWORD PTR [rsp],0x21
  0x00007f0158dc9337:   call   0x00007f0158880680           ; ImmutableOopMap {[64]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f0158dc933c:   jmp    0x00007f0158dc9242
  0x00007f0158dc9341:   nop
  0x00007f0158dc9342:   nop
  0x00007f0158dc9343:   mov    rax,QWORD PTR [r15+0x3f0]
  0x00007f0158dc934a:   movabs r10,0x0
  0x00007f0158dc9354:   mov    QWORD PTR [r15+0x3f0],r10
  0x00007f0158dc935b:   movabs r10,0x0
  0x00007f0158dc9365:   mov    QWORD PTR [r15+0x3f8],r10
  0x00007f0158dc936c:   add    rsp,0x60
  0x00007f0158dc9370:   pop    rbp
  0x00007f0158dc9371:   jmp    0x00007f01587ee600           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f0158dc9376:   hlt    
  0x00007f0158dc9377:   hlt    
  0x00007f0158dc9378:   hlt    
  0x00007f0158dc9379:   hlt    
  0x00007f0158dc937a:   hlt    
  0x00007f0158dc937b:   hlt    
  0x00007f0158dc937c:   hlt    
  0x00007f0158dc937d:   hlt    
  0x00007f0158dc937e:   hlt    
  0x00007f0158dc937f:   hlt    
[Stub Code]
  0x00007f0158dc9380:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x00007f0158dc9385:   movabs rbx,0x0                      ;   {static_stub}
  0x00007f0158dc938f:   jmp    0x00007f0158dc938f           ;   {runtime_call}
[Exception Handler]
  0x00007f0158dc9394:   call   0x00007f015887f000           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f0158dc9399:   movabs rdi,0x7f0177bcad72           ;   {external_word}
  0x00007f0158dc93a3:   and    rsp,0xfffffffffffffff0
  0x00007f0158dc93a7:   call   0x00007f017768a880           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f0158dc93ac:   hlt    
[Deopt Handler Code]
  0x00007f0158dc93ad:   movabs r10,0x7f0158dc93ad           ;   {section_word}
  0x00007f0158dc93b7:   push   r10
  0x00007f0158dc93b9:   jmp    0x00007f01587cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007f0158dc93be:   hlt    
  0x00007f0158dc93bf:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     325  504 %     4       me.serce.BufferAccessBenchmark::putLong @ 14 (37 bytes)
 total in heap  [0x00007f0160273390,0x00007f0160273eb0] = 2848
 relocation     [0x00007f01602734f0,0x00007f0160273510] = 32
 main code      [0x00007f0160273520,0x00007f0160273860] = 832
 stub code      [0x00007f0160273860,0x00007f0160273878] = 24
 oops           [0x00007f0160273878,0x00007f0160273888] = 16
 metadata       [0x00007f0160273888,0x00007f01602738c8] = 64
 scopes data    [0x00007f01602738c8,0x00007f0160273a88] = 448
 scopes pcs     [0x00007f0160273a88,0x00007f0160273ea8] = 1056
 dependencies   [0x00007f0160273ea8,0x00007f0160273eb0] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f0174633c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f0160273520:   call   0x00007f01777bf230           ;   {runtime_call os::breakpoint()}
  0x00007f0160273525:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f0160273530:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f0160273537:   push   rbp
  0x00007f0160273538:   sub    rsp,0x50
  0x00007f016027353c:   mov    rbx,QWORD PTR [rsi+0x8]
  0x00007f0160273540:   mov    r13,QWORD PTR [rsi+0x10]
  0x00007f0160273544:   mov    ebp,DWORD PTR [rsi]
  0x00007f0160273546:   mov    rdi,rsi
  0x00007f0160273549:   movabs r10,0x7f01778a8b80
  0x00007f0160273553:   call   r10
  0x00007f0160273556:   test   rbx,rbx
  0x00007f0160273559:   je     0x00007f01602737e0
  0x00007f016027355f:   mov    r10d,DWORD PTR [rbx+0x8]
  0x00007f0160273563:   shl    r10,0x3
  0x00007f0160273567:   movabs r12,0x800000000
  0x00007f0160273571:   add    r10,r12
  0x00007f0160273574:   xor    r12,r12
  0x00007f0160273577:   mov    r10,QWORD PTR [r10+0x40]
  0x00007f016027357b:   movabs r11,0x800157c50              ;   {metadata('java/nio/ByteBuffer')}
  0x00007f0160273585:   cmp    r10,r11
  0x00007f0160273588:   jne    0x00007f01602737f8           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f016027358e:   mov    r11d,DWORD PTR [rbx+0x8]
  0x00007f0160273592:   cmp    r11d,0x2b613                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f0160273599:   jne    0x00007f01602737e2
  0x00007f016027359f:   cmp    ebp,0x400000
  0x00007f01602735a5:   jge    0x00007f016027375b           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f01602735ab:   mov    rcx,rbx                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602735ae:   mov    rdi,r13
  0x00007f01602735b1:   bswap  rdi                          ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@12 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602735b4:   mov    r10d,ebp
  0x00007f01602735b7:   inc    r10d
  0x00007f01602735ba:   xor    r8d,r8d
  0x00007f01602735bd:   cmp    r10d,r8d
  0x00007f01602735c0:   cmovl  r10d,r8d
  0x00007f01602735c4:   mov    r11d,0x400000
  0x00007f01602735ca:   cmp    r10d,r11d
  0x00007f01602735cd:   cmovg  r10d,r11d
  0x00007f01602735d1:   test   ebp,ebp
  0x00007f01602735d3:   jl     0x00007f016027380c           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602735d9:   mov    r11d,DWORD PTR [rcx+0x1c]
  0x00007f01602735dd:   sub    r11d,ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602735e0:   cmp    r11d,0x8
  0x00007f01602735e4:   jl     0x00007f0160273828           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602735ea:   mov    r11,QWORD PTR [rcx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602735ee:   movzx  r8d,BYTE PTR [rcx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602735f3:   movsxd rsi,ebp                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602735f6:   test   r8d,r8d
  0x00007f01602735f9:   je     0x00007f0160273830
  0x00007f01602735ff:   mov    QWORD PTR [r11+rsi*1],rdi    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160273603:   inc    ebp                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0160273605:   cmp    ebp,r10d
  0x00007f0160273608:   jl     0x00007f01602735d1           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f016027360a:   cmp    ebp,0x3ffffd
  0x00007f0160273610:   jge    0x00007f0160273712
  0x00007f0160273616:   mov    r9d,0xfa0
  0x00007f016027361c:   mov    edx,0x3ffffd
  0x00007f0160273621:   sub    edx,ebp
  0x00007f0160273623:   cmp    edx,r9d
  0x00007f0160273626:   cmovg  edx,r9d
  0x00007f016027362a:   add    edx,ebp
  0x00007f016027362c:   nop    DWORD PTR [rax+0x0]          ;*invokestatic convEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160273630:   mov    r11d,DWORD PTR [rcx+0x1c]
  0x00007f0160273634:   sub    r11d,ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160273637:   cmp    r11d,0x8
  0x00007f016027363b:   jl     0x00007f0160273778           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160273641:   mov    r11,QWORD PTR [rcx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160273645:   movzx  r8d,BYTE PTR [rcx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f016027364a:   movsxd rax,ebp                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f016027364d:   test   r8d,r8d
  0x00007f0160273650:   je     0x00007f01602737af
  0x00007f0160273656:   mov    r10,r11
  0x00007f0160273659:   mov    QWORD PTR [r10+rax*1],rdi    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f016027365d:   mov    r11d,DWORD PTR [rcx+0x1c]
  0x00007f0160273661:   sub    r11d,ebp
  0x00007f0160273664:   dec    r11d                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160273667:   cmp    r11d,0x8
  0x00007f016027366b:   jl     0x00007f0160273770           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160273671:   mov    r11,QWORD PTR [rcx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160273675:   movzx  r8d,BYTE PTR [rcx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f016027367a:   test   r8d,r8d
  0x00007f016027367d:   je     0x00007f01602737a0           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160273683:   mov    r10d,ebp
  0x00007f0160273686:   add    r10d,0x2                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f016027368a:   mov    QWORD PTR [r11+rax*1+0x1],rdi;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f016027368f:   mov    r11d,DWORD PTR [rcx+0x1c]
  0x00007f0160273693:   sub    r11d,ebp
  0x00007f0160273696:   add    r11d,0xfffffffe              ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f016027369a:   cmp    r11d,0x8
  0x00007f016027369e:   jl     0x00007f016027377b           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602736a4:   mov    r11,QWORD PTR [rcx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602736a8:   movzx  r8d,BYTE PTR [rcx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602736ad:   mov    rsi,rax
  0x00007f01602736b0:   add    rsi,0x2                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602736b4:   test   r8d,r8d
  0x00007f01602736b7:   je     0x00007f01602737b5
  0x00007f01602736bd:   mov    QWORD PTR [r11+rax*1+0x2],rdi;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602736c2:   mov    r11d,DWORD PTR [rcx+0x1c]
  0x00007f01602736c6:   sub    r11d,ebp
  0x00007f01602736c9:   add    r11d,0xfffffffd              ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602736cd:   cmp    r11d,0x8
  0x00007f01602736d1:   jl     0x00007f0160273773           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602736d7:   mov    r11,QWORD PTR [rcx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602736db:   movzx  r8d,BYTE PTR [rcx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602736e0:   test   r8d,r8d
  0x00007f01602736e3:   je     0x00007f01602737a6
  0x00007f01602736e9:   mov    r10,r11
  0x00007f01602736ec:   mov    QWORD PTR [r10+rax*1+0x3],rdi;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602736f1:   add    ebp,0x4                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f01602736f4:   cmp    ebp,edx
  0x00007f01602736f6:   jl     0x00007f0160273630           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f01602736fc:   mov    r11,QWORD PTR [r15+0x108]    ; ImmutableOopMap {rcx=Oop rbx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0160273703:   test   DWORD PTR [r11],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {poll}
  0x00007f0160273706:   cmp    ebp,0x3ffffd
  0x00007f016027370c:   jl     0x00007f016027361c
  0x00007f0160273712:   cmp    ebp,0x400000
  0x00007f0160273718:   jge    0x00007f016027375b
  0x00007f016027371a:   xchg   ax,ax                        ;*invokestatic convEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f016027371c:   test   ebp,ebp
  0x00007f016027371e:   jl     0x00007f016027380c           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160273724:   mov    r11d,DWORD PTR [rcx+0x1c]
  0x00007f0160273728:   sub    r11d,ebp                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f016027372b:   cmp    r11d,0x8
  0x00007f016027372f:   jl     0x00007f0160273838           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160273735:   mov    r11,QWORD PTR [rcx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160273739:   movzx  r8d,BYTE PTR [rcx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f016027373e:   movsxd rsi,ebp                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160273741:   test   r8d,r8d
  0x00007f0160273744:   je     0x00007f0160273840
  0x00007f016027374a:   mov    r10,r11
  0x00007f016027374d:   mov    QWORD PTR [r10+rsi*1],rdi    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160273751:   inc    ebp                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0160273753:   cmp    ebp,0x400000
  0x00007f0160273759:   jl     0x00007f016027371c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f016027375b:   mov    esi,0xffffff45
  0x00007f0160273760:   mov    QWORD PTR [rsp+0x8],r13
  0x00007f0160273765:   mov    QWORD PTR [rsp+0x10],rbx
  0x00007f016027376a:   nop
  0x00007f016027376b:   call   0x00007f015878ae80           ; ImmutableOopMap {[16]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@18 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f0160273770:   mov    r10d,ebp
  0x00007f0160273773:   inc    r10d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0160273776:   jmp    0x00007f016027377b
  0x00007f0160273778:   mov    r10d,ebp                     ;*synchronization entry
                                                            ; - java.nio.Buffer::checkIndex@-1 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f016027377b:   mov    esi,0xffffff45
  0x00007f0160273780:   mov    QWORD PTR [rsp+0x8],rcx
  0x00007f0160273785:   mov    QWORD PTR [rsp+0x10],rcx
  0x00007f016027378a:   mov    DWORD PTR [rsp+0x4],r10d
  0x00007f016027378f:   mov    DWORD PTR [rsp+0x20],r11d
  0x00007f0160273794:   mov    QWORD PTR [rsp+0x30],r13
  0x00007f0160273799:   xchg   ax,ax
  0x00007f016027379b:   call   0x00007f015878ae80           ; ImmutableOopMap {[8]=Oop [16]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f01602737a0:   mov    rsi,rax
  0x00007f01602737a3:   mov    r10d,ebp
  0x00007f01602737a6:   inc    r10d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f01602737a9:   add    rsi,0x1                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602737ad:   jmp    0x00007f01602737b5
  0x00007f01602737af:   mov    rsi,rax
  0x00007f01602737b2:   mov    r10d,ebp                     ;*synchronization entry
                                                            ; - jdk.internal.misc.Unsafe::convEndian@-1 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602737b5:   add    r11,rsi                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@8 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602737b8:   mov    esi,0xffffff45
  0x00007f01602737bd:   mov    DWORD PTR [rsp],r10d
  0x00007f01602737c1:   mov    QWORD PTR [rsp+0x8],rcx
  0x00007f01602737c6:   mov    QWORD PTR [rsp+0x10],rcx
  0x00007f01602737cb:   mov    QWORD PTR [rsp+0x18],r11
  0x00007f01602737d0:   mov    DWORD PTR [rsp+0x4],r8d
  0x00007f01602737d5:   mov    QWORD PTR [rsp+0x28],r13
  0x00007f01602737da:   nop
  0x00007f01602737db:   call   0x00007f015878ae80           ; ImmutableOopMap {[8]=Oop [16]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.misc.Unsafe::convEndian@4 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f01602737e0:   xor    ebx,ebx
  0x00007f01602737e2:   mov    esi,0xffffff76
  0x00007f01602737e7:   mov    QWORD PTR [rsp],r13
  0x00007f01602737eb:   mov    QWORD PTR [rsp+0x8],rbx
  0x00007f01602737f0:   data16 xchg ax,ax
  0x00007f01602737f3:   call   0x00007f015878ae80           ; ImmutableOopMap {[8]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f01602737f8:   mov    esi,0xffffff8d
  0x00007f01602737fd:   mov    QWORD PTR [rsp],r13
  0x00007f0160273801:   mov    QWORD PTR [rsp+0x8],rbx
  0x00007f0160273806:   nop
  0x00007f0160273807:   call   0x00007f015878ae80           ; ImmutableOopMap {[8]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f016027380c:   mov    esi,0xffffff45
  0x00007f0160273811:   mov    QWORD PTR [rsp+0x8],rcx
  0x00007f0160273816:   mov    QWORD PTR [rsp+0x10],rcx
  0x00007f016027381b:   mov    QWORD PTR [rsp+0x38],r13
  0x00007f0160273820:   data16 xchg ax,ax
  0x00007f0160273823:   call   0x00007f015878ae80           ; ImmutableOopMap {[8]=Oop [16]=Oop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@1 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f0160273828:   mov    r10d,ebp
  0x00007f016027382b:   jmp    0x00007f016027377b
  0x00007f0160273830:   mov    r10d,ebp
  0x00007f0160273833:   jmp    0x00007f01602737b5
  0x00007f0160273838:   mov    r10d,ebp
  0x00007f016027383b:   jmp    0x00007f016027377b
  0x00007f0160273840:   mov    r10d,ebp
  0x00007f0160273843:   jmp    0x00007f01602737b5
  0x00007f0160273848:   hlt    
  0x00007f0160273849:   hlt    
  0x00007f016027384a:   hlt    
  0x00007f016027384b:   hlt    
  0x00007f016027384c:   hlt    
  0x00007f016027384d:   hlt    
  0x00007f016027384e:   hlt    
  0x00007f016027384f:   hlt    
  0x00007f0160273850:   hlt    
  0x00007f0160273851:   hlt    
  0x00007f0160273852:   hlt    
  0x00007f0160273853:   hlt    
  0x00007f0160273854:   hlt    
  0x00007f0160273855:   hlt    
  0x00007f0160273856:   hlt    
  0x00007f0160273857:   hlt    
  0x00007f0160273858:   hlt    
  0x00007f0160273859:   hlt    
  0x00007f016027385a:   hlt    
  0x00007f016027385b:   hlt    
  0x00007f016027385c:   hlt    
  0x00007f016027385d:   hlt    
  0x00007f016027385e:   hlt    
  0x00007f016027385f:   hlt    
[Exception Handler]
  0x00007f0160273860:   jmp    0x00007f01587eb300           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f0160273865:   call   0x00007f016027386a
  0x00007f016027386a:   sub    QWORD PTR [rsp],0x5
  0x00007f016027386f:   jmp    0x00007f01587cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007f0160273874:   hlt    
  0x00007f0160273875:   hlt    
  0x00007f0160273876:   hlt    
  0x00007f0160273877:   hlt    
--------------------------------------------------------------------------------

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     341  505 %     3       me.serce.BufferAccessBenchmark::putLong @ 14 (37 bytes)
 total in heap  [0x00007f0158dc9590,0x00007f0158dc9bf0] = 1632
 relocation     [0x00007f0158dc96f0,0x00007f0158dc9738] = 72
 main code      [0x00007f0158dc9740,0x00007f0158dc9a00] = 704
 stub code      [0x00007f0158dc9a00,0x00007f0158dc9a40] = 64
 oops           [0x00007f0158dc9a40,0x00007f0158dc9a48] = 8
 metadata       [0x00007f0158dc9a48,0x00007f0158dc9a50] = 8
 scopes data    [0x00007f0158dc9a50,0x00007f0158dc9ad8] = 136
 scopes pcs     [0x00007f0158dc9ad8,0x00007f0158dc9bd8] = 256
 dependencies   [0x00007f0158dc9bd8,0x00007f0158dc9be0] = 8
 nul chk table  [0x00007f0158dc9be0,0x00007f0158dc9bf0] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f0174633c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f0158dc9740:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f0158dc9744:   shl    r10,0x3
  0x00007f0158dc9748:   movabs r12,0x800000000
  0x00007f0158dc9752:   add    r10,r12
  0x00007f0158dc9755:   xor    r12,r12
  0x00007f0158dc9758:   cmp    r10,rax
  0x00007f0158dc975b:   jne    0x00007f01587cd580           ;   {runtime_call ic_miss_stub}
  0x00007f0158dc9761:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f0158dc976c:   data16 data16 xchg ax,ax
  0x00007f0158dc9770:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f0158dc977b:   data16 data16 xchg ax,ax
  0x00007f0158dc977f:   nop
[Verified Entry Point]
  0x00007f0158dc9780:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f0158dc9787:   push   rbp
  0x00007f0158dc9788:   sub    rsp,0x60
  0x00007f0158dc978c:   movabs rdi,0x7f017466c200           ;   {metadata(method data for {method} {0x00007f0174633c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0158dc9796:   mov    ebx,DWORD PTR [rdi+0x13c]
  0x00007f0158dc979c:   add    ebx,0x8
  0x00007f0158dc979f:   mov    DWORD PTR [rdi+0x13c],ebx
  0x00007f0158dc97a5:   and    ebx,0x1ff8
  0x00007f0158dc97ab:   cmp    ebx,0x0
  0x00007f0158dc97ae:   je     0x00007f0158dc997a           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@0 (line 64)
  0x00007f0158dc97b4:   mov    rdi,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@1 (line 64)
  0x00007f0158dc97b8:   mov    esi,DWORD PTR [rsi+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@6 (line 65)
  0x00007f0158dc97bb:   mov    ebx,0x0
  0x00007f0158dc97c0:   jmp    0x00007f0158dc98e6           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f0158dc97c5:   data16 xchg ax,ax
  0x00007f0158dc97c8:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x00007f0158dc999b
  0x00007f0158dc97cb:   mov    rdx,rsi
  0x00007f0158dc97ce:   movabs rcx,0x7f017466c200           ;   {metadata(method data for {method} {0x00007f0174633c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0158dc97d8:   mov    edx,DWORD PTR [rdx+0x8]
  0x00007f0158dc97db:   shl    rdx,0x3
  0x00007f0158dc97df:   movabs r12,0x800000000
  0x00007f0158dc97e9:   add    rdx,r12
  0x00007f0158dc97ec:   xor    r12,r12
  0x00007f0158dc97ef:   cmp    rdx,QWORD PTR [rcx+0x1b0]
  0x00007f0158dc97f6:   jne    0x00007f0158dc9805
  0x00007f0158dc97f8:   add    QWORD PTR [rcx+0x1b8],0x1
  0x00007f0158dc9800:   jmp    0x00007f0158dc986b
  0x00007f0158dc9805:   cmp    rdx,QWORD PTR [rcx+0x1c0]
  0x00007f0158dc980c:   jne    0x00007f0158dc981b
  0x00007f0158dc980e:   add    QWORD PTR [rcx+0x1c8],0x1
  0x00007f0158dc9816:   jmp    0x00007f0158dc986b
  0x00007f0158dc981b:   cmp    QWORD PTR [rcx+0x1b0],0x0
  0x00007f0158dc9826:   jne    0x00007f0158dc983f
  0x00007f0158dc9828:   mov    QWORD PTR [rcx+0x1b0],rdx
  0x00007f0158dc982f:   mov    QWORD PTR [rcx+0x1b8],0x1
  0x00007f0158dc983a:   jmp    0x00007f0158dc986b
  0x00007f0158dc983f:   cmp    QWORD PTR [rcx+0x1c0],0x0
  0x00007f0158dc984a:   jne    0x00007f0158dc9863
  0x00007f0158dc984c:   mov    QWORD PTR [rcx+0x1c0],rdx
  0x00007f0158dc9853:   mov    QWORD PTR [rcx+0x1c8],0x1
  0x00007f0158dc985e:   jmp    0x00007f0158dc986b
  0x00007f0158dc9863:   add    QWORD PTR [rcx+0x1a0],0x1
  0x00007f0158dc986b:   mov    rdx,rbx
  0x00007f0158dc986e:   mov    rcx,rdi
  0x00007f0158dc9871:   mov    rax,rsi
  0x00007f0158dc9874:   mov    rsi,rax                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0158dc9877:   mov    QWORD PTR [rsp+0x48],rdi
  0x00007f0158dc987c:   mov    QWORD PTR [rsp+0x40],rax
  0x00007f0158dc9881:   mov    DWORD PTR [rsp+0x2c],ebx
  0x00007f0158dc9885:   movabs rax,0x80015b098
  0x00007f0158dc988f:   call   0x00007f0160272d00           ; ImmutableOopMap {[64]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {virtual_call}
  0x00007f0158dc9894:   mov    ebx,DWORD PTR [rsp+0x2c]
  0x00007f0158dc9898:   inc    ebx
  0x00007f0158dc989a:   movabs rsi,0x7f017466c200           ;   {metadata(method data for {method} {0x00007f0174633c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0158dc98a4:   mov    edi,DWORD PTR [rsi+0x140]
  0x00007f0158dc98aa:   add    edi,0x8
  0x00007f0158dc98ad:   mov    DWORD PTR [rsi+0x140],edi
  0x00007f0158dc98b3:   and    edi,0xfff8
  0x00007f0158dc98b9:   cmp    edi,0x0
  0x00007f0158dc98bc:   je     0x00007f0158dc99a0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0158dc98c2:   mov    r10,QWORD PTR [r15+0x108]    ; ImmutableOopMap {[64]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0158dc98c9:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00007f0158dc98cc:   movabs rsi,0x7f017466c200           ;   {metadata(method data for {method} {0x00007f0174633c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0158dc98d6:   inc    DWORD PTR [rsi+0x1d8]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0158dc98dc:   mov    rsi,QWORD PTR [rsp+0x40]
  0x00007f0158dc98e1:   mov    rdi,QWORD PTR [rsp+0x48]
  0x00007f0158dc98e6:   cmp    ebx,0x400000
  0x00007f0158dc98ec:   movabs rdx,0x7f017466c200           ;   {metadata(method data for {method} {0x00007f0174633c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0158dc98f6:   movabs rcx,0x190
  0x00007f0158dc9900:   jl     0x00007f0158dc9910
  0x00007f0158dc9906:   movabs rcx,0x180
  0x00007f0158dc9910:   mov    rax,QWORD PTR [rdx+rcx*1]
  0x00007f0158dc9914:   lea    rax,[rax+0x1]
  0x00007f0158dc9918:   mov    QWORD PTR [rdx+rcx*1],rax
  0x00007f0158dc991c:   jl     0x00007f0158dc97c8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f0158dc9922:   add    rsp,0x60
  0x00007f0158dc9926:   pop    rbp
  0x00007f0158dc9927:   mov    r10,QWORD PTR [r15+0x108]
  0x00007f0158dc992e:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f0158dc9931:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@36 (line 69)
  0x00007f0158dc9932:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f0158dc9939:   push   rbp
  0x00007f0158dc993a:   sub    rsp,0x60
  0x00007f0158dc993e:   mov    rbx,QWORD PTR [rsi+0x10]
  0x00007f0158dc9942:   mov    rax,QWORD PTR [rsi+0x8]
  0x00007f0158dc9946:   mov    edx,DWORD PTR [rsi]
  0x00007f0158dc9948:   mov    rdi,rsi
  0x00007f0158dc994b:   mov    QWORD PTR [rsp+0x38],rbx
  0x00007f0158dc9950:   mov    QWORD PTR [rsp+0x30],rax
  0x00007f0158dc9955:   mov    DWORD PTR [rsp+0x28],edx
  0x00007f0158dc9959:   call   0x00007f01778a8b80           ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x00007f0158dc995e:   mov    edx,DWORD PTR [rsp+0x28]
  0x00007f0158dc9962:   mov    rbx,rdx
  0x00007f0158dc9965:   mov    rax,QWORD PTR [rsp+0x30]
  0x00007f0158dc996a:   mov    rsi,rax
  0x00007f0158dc996d:   mov    rdx,QWORD PTR [rsp+0x38]
  0x00007f0158dc9972:   mov    rdi,rdx
  0x00007f0158dc9975:   jmp    0x00007f0158dc98e6
  0x00007f0158dc997a:   movabs r10,0x7f0174633c98           ;   {metadata({method} {0x00007f0174633c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0158dc9984:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f0158dc9989:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f0158dc9991:   call   0x00007f0158880680           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f0158dc9996:   jmp    0x00007f0158dc97b4
  0x00007f0158dc999b:   call   0x00007f01587ed720           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f0158dc99a0:   movabs r10,0x7f0174633c98           ;   {metadata({method} {0x00007f0174633c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0158dc99aa:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f0158dc99af:   mov    QWORD PTR [rsp],0x21
  0x00007f0158dc99b7:   call   0x00007f0158880680           ; ImmutableOopMap {[64]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f0158dc99bc:   jmp    0x00007f0158dc98c2
  0x00007f0158dc99c1:   nop
  0x00007f0158dc99c2:   nop
  0x00007f0158dc99c3:   mov    rax,QWORD PTR [r15+0x3f0]
  0x00007f0158dc99ca:   movabs r10,0x0
  0x00007f0158dc99d4:   mov    QWORD PTR [r15+0x3f0],r10
  0x00007f0158dc99db:   movabs r10,0x0
  0x00007f0158dc99e5:   mov    QWORD PTR [r15+0x3f8],r10
  0x00007f0158dc99ec:   add    rsp,0x60
  0x00007f0158dc99f0:   pop    rbp
  0x00007f0158dc99f1:   jmp    0x00007f01587ee600           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f0158dc99f6:   hlt    
  0x00007f0158dc99f7:   hlt    
  0x00007f0158dc99f8:   hlt    
  0x00007f0158dc99f9:   hlt    
  0x00007f0158dc99fa:   hlt    
  0x00007f0158dc99fb:   hlt    
  0x00007f0158dc99fc:   hlt    
  0x00007f0158dc99fd:   hlt    
  0x00007f0158dc99fe:   hlt    
  0x00007f0158dc99ff:   hlt    
[Stub Code]
  0x00007f0158dc9a00:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x00007f0158dc9a05:   movabs rbx,0x0                      ;   {static_stub}
  0x00007f0158dc9a0f:   jmp    0x00007f0158dc9a0f           ;   {runtime_call}
[Exception Handler]
  0x00007f0158dc9a14:   call   0x00007f015887f000           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f0158dc9a19:   movabs rdi,0x7f0177bcad72           ;   {external_word}
  0x00007f0158dc9a23:   and    rsp,0xfffffffffffffff0
  0x00007f0158dc9a27:   call   0x00007f017768a880           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f0158dc9a2c:   hlt    
[Deopt Handler Code]
  0x00007f0158dc9a2d:   movabs r10,0x7f0158dc9a2d           ;   {section_word}
  0x00007f0158dc9a37:   push   r10
  0x00007f0158dc9a39:   jmp    0x00007f01587cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007f0158dc9a3e:   hlt    
  0x00007f0158dc9a3f:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     353  506 %     4       me.serce.BufferAccessBenchmark::putLong @ 14 (37 bytes)
 total in heap  [0x00007f0160273f10,0x00007f01602749a8] = 2712
 relocation     [0x00007f0160274070,0x00007f0160274090] = 32
 main code      [0x00007f01602740a0,0x00007f01602743c0] = 800
 stub code      [0x00007f01602743c0,0x00007f01602743d8] = 24
 oops           [0x00007f01602743d8,0x00007f01602743e8] = 16
 metadata       [0x00007f01602743e8,0x00007f0160274428] = 64
 scopes data    [0x00007f0160274428,0x00007f01602745a0] = 376
 scopes pcs     [0x00007f01602745a0,0x00007f01602749a0] = 1024
 dependencies   [0x00007f01602749a0,0x00007f01602749a8] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f0174633c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f01602740a0:   call   0x00007f01777bf230           ;   {runtime_call os::breakpoint()}
  0x00007f01602740a5:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f01602740b0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f01602740b7:   push   rbp
  0x00007f01602740b8:   sub    rsp,0x50
  0x00007f01602740bc:   mov    r13,QWORD PTR [rsi+0x8]
  0x00007f01602740c0:   mov    rbp,QWORD PTR [rsi+0x10]
  0x00007f01602740c4:   mov    ebx,DWORD PTR [rsi]
  0x00007f01602740c6:   mov    rdi,rsi
  0x00007f01602740c9:   movabs r10,0x7f01778a8b80
  0x00007f01602740d3:   call   r10
  0x00007f01602740d6:   test   r13,r13
  0x00007f01602740d9:   je     0x00007f0160274358
  0x00007f01602740df:   mov    r10d,DWORD PTR [r13+0x8]
  0x00007f01602740e3:   shl    r10,0x3
  0x00007f01602740e7:   movabs r12,0x800000000
  0x00007f01602740f1:   add    r10,r12
  0x00007f01602740f4:   xor    r12,r12
  0x00007f01602740f7:   mov    r10,QWORD PTR [r10+0x40]
  0x00007f01602740fb:   movabs r11,0x800157c50              ;   {metadata('java/nio/ByteBuffer')}
  0x00007f0160274105:   cmp    r10,r11
  0x00007f0160274108:   jne    0x00007f0160274370           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f016027410e:   mov    r11d,DWORD PTR [r13+0x8]
  0x00007f0160274112:   cmp    r11d,0x2b613                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f0160274119:   jne    0x00007f016027435b
  0x00007f016027411f:   cmp    ebx,0x400000
  0x00007f0160274125:   jge    0x00007f01602742e3           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f016027412b:   mov    rdi,rbp
  0x00007f016027412e:   bswap  rdi                          ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@12 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274131:   mov    r11d,ebx
  0x00007f0160274134:   inc    r11d
  0x00007f0160274137:   xor    r8d,r8d
  0x00007f016027413a:   cmp    r11d,r8d
  0x00007f016027413d:   cmovl  r11d,r8d
  0x00007f0160274141:   mov    r10d,0x400000
  0x00007f0160274147:   cmp    r11d,r10d
  0x00007f016027414a:   cmovg  r11d,r10d
  0x00007f016027414e:   test   ebx,ebx
  0x00007f0160274150:   jl     0x00007f0160274384           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274156:   mov    r9d,DWORD PTR [r13+0x1c]
  0x00007f016027415a:   sub    r9d,ebx                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f016027415d:   cmp    r9d,0x8
  0x00007f0160274161:   jl     0x00007f01602743a0           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274167:   mov    rcx,QWORD PTR [r13+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f016027416b:   movzx  r9d,BYTE PTR [r13+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274170:   movsxd rdx,ebx                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274173:   test   r9d,r9d
  0x00007f0160274176:   je     0x00007f01602743a8
  0x00007f016027417c:   mov    r10,rcx
  0x00007f016027417f:   mov    QWORD PTR [r10+rdx*1],rdi    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274183:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0160274185:   cmp    ebx,r11d
  0x00007f0160274188:   jl     0x00007f016027414e           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f016027418a:   cmp    ebx,0x3ffffd
  0x00007f0160274190:   jge    0x00007f0160274299
  0x00007f0160274196:   mov    r10d,0xfa0
  0x00007f016027419c:   mov    r8d,0x3ffffd
  0x00007f01602741a2:   sub    r8d,ebx
  0x00007f01602741a5:   cmp    r8d,r10d
  0x00007f01602741a8:   cmovg  r8d,r10d
  0x00007f01602741ac:   add    r8d,ebx
  0x00007f01602741af:   nop                                 ;*invokestatic convEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602741b0:   mov    r9d,DWORD PTR [r13+0x1c]
  0x00007f01602741b4:   sub    r9d,ebx                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602741b7:   cmp    r9d,0x8
  0x00007f01602741bb:   jl     0x00007f01602742fb           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602741c1:   mov    rcx,QWORD PTR [r13+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602741c5:   movzx  r9d,BYTE PTR [r13+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602741ca:   movsxd rsi,ebx                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602741cd:   test   r9d,r9d
  0x00007f01602741d0:   je     0x00007f016027432b
  0x00007f01602741d6:   mov    r11,rcx
  0x00007f01602741d9:   mov    QWORD PTR [r11+rsi*1],rdi    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602741dd:   mov    r9d,DWORD PTR [r13+0x1c]
  0x00007f01602741e1:   sub    r9d,ebx
  0x00007f01602741e4:   dec    r9d                          ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602741e7:   cmp    r9d,0x8
  0x00007f01602741eb:   jl     0x00007f01602742f3           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602741f1:   mov    rcx,QWORD PTR [r13+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602741f5:   movzx  r9d,BYTE PTR [r13+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602741fa:   test   r9d,r9d
  0x00007f01602741fd:   je     0x00007f016027431c           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274203:   mov    r11d,ebx
  0x00007f0160274206:   add    r11d,0x2                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f016027420a:   mov    r9,rcx
  0x00007f016027420d:   mov    QWORD PTR [r9+rsi*1+0x1],rdi ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274212:   mov    r9d,DWORD PTR [r13+0x1c]
  0x00007f0160274216:   sub    r9d,ebx
  0x00007f0160274219:   add    r9d,0xfffffffe               ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f016027421d:   cmp    r9d,0x8
  0x00007f0160274221:   jl     0x00007f01602742fe           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274227:   mov    rcx,QWORD PTR [r13+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f016027422b:   movzx  r9d,BYTE PTR [r13+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274230:   mov    rdx,rsi
  0x00007f0160274233:   add    rdx,0x2                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274237:   test   r9d,r9d
  0x00007f016027423a:   je     0x00007f0160274331
  0x00007f0160274240:   mov    r9,rcx
  0x00007f0160274243:   mov    QWORD PTR [r9+rsi*1+0x2],rdi ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274248:   mov    r9d,DWORD PTR [r13+0x1c]
  0x00007f016027424c:   sub    r9d,ebx
  0x00007f016027424f:   add    r9d,0xfffffffd               ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274253:   cmp    r9d,0x8
  0x00007f0160274257:   jl     0x00007f01602742f6           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f016027425d:   mov    rcx,QWORD PTR [r13+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274261:   movzx  r9d,BYTE PTR [r13+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274266:   test   r9d,r9d
  0x00007f0160274269:   je     0x00007f0160274322
  0x00007f016027426f:   mov    r11,rcx
  0x00007f0160274272:   mov    QWORD PTR [r11+rsi*1+0x3],rdi;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274277:   add    ebx,0x4                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f016027427a:   cmp    ebx,r8d
  0x00007f016027427d:   jl     0x00007f01602741b0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0160274283:   mov    r11,QWORD PTR [r15+0x108]    ; ImmutableOopMap {r13=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f016027428a:   test   DWORD PTR [r11],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {poll}
  0x00007f016027428d:   cmp    ebx,0x3ffffd
  0x00007f0160274293:   jl     0x00007f016027419c
  0x00007f0160274299:   cmp    ebx,0x400000
  0x00007f016027429f:   jge    0x00007f01602742e3
  0x00007f01602742a1:   data16 xchg ax,ax                   ;*invokestatic convEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602742a4:   test   ebx,ebx
  0x00007f01602742a6:   jl     0x00007f0160274384           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602742ac:   mov    r9d,DWORD PTR [r13+0x1c]
  0x00007f01602742b0:   sub    r9d,ebx                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602742b3:   cmp    r9d,0x8
  0x00007f01602742b7:   jl     0x00007f01602743ad           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602742bd:   movzx  r9d,BYTE PTR [r13+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602742c2:   mov    rcx,QWORD PTR [r13+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602742c6:   movsxd rdx,ebx                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602742c9:   test   r9d,r9d
  0x00007f01602742cc:   je     0x00007f01602743b5
  0x00007f01602742d2:   mov    r10,rcx
  0x00007f01602742d5:   mov    QWORD PTR [r10+rdx*1],rdi    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602742d9:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f01602742db:   cmp    ebx,0x400000
  0x00007f01602742e1:   jl     0x00007f01602742a4           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f01602742e3:   add    rsp,0x50
  0x00007f01602742e7:   pop    rbp
  0x00007f01602742e8:   mov    r10,QWORD PTR [r15+0x108]
  0x00007f01602742ef:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f01602742f2:   ret    
  0x00007f01602742f3:   mov    r11d,ebx
  0x00007f01602742f6:   inc    r11d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f01602742f9:   jmp    0x00007f01602742fe
  0x00007f01602742fb:   mov    r11d,ebx                     ;*synchronization entry
                                                            ; - java.nio.Buffer::checkIndex@-1 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f01602742fe:   mov    esi,0xffffff45
  0x00007f0160274303:   mov    QWORD PTR [rsp+0x10],r13
  0x00007f0160274308:   mov    QWORD PTR [rsp+0x18],r13
  0x00007f016027430d:   mov    DWORD PTR [rsp+0xc],r11d
  0x00007f0160274312:   mov    DWORD PTR [rsp+0x28],r9d
  0x00007f0160274317:   call   0x00007f015878ae80           ; ImmutableOopMap {[16]=Oop [24]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f016027431c:   mov    rdx,rsi
  0x00007f016027431f:   mov    r11d,ebx
  0x00007f0160274322:   inc    r11d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0160274325:   add    rdx,0x1                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274329:   jmp    0x00007f0160274331
  0x00007f016027432b:   mov    rdx,rsi
  0x00007f016027432e:   mov    r11d,ebx                     ;*synchronization entry
                                                            ; - jdk.internal.misc.Unsafe::convEndian@-1 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274331:   add    rcx,rdx                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@8 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274334:   mov    esi,0xffffff45
  0x00007f0160274339:   mov    DWORD PTR [rsp+0x8],r11d
  0x00007f016027433e:   mov    QWORD PTR [rsp+0x10],r13
  0x00007f0160274343:   mov    QWORD PTR [rsp+0x18],r13
  0x00007f0160274348:   mov    QWORD PTR [rsp+0x20],rcx
  0x00007f016027434d:   mov    DWORD PTR [rsp+0xc],r9d
  0x00007f0160274352:   nop
  0x00007f0160274353:   call   0x00007f015878ae80           ; ImmutableOopMap {[16]=Oop [24]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.misc.Unsafe::convEndian@4 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f0160274358:   xor    r13d,r13d
  0x00007f016027435b:   mov    esi,0xffffffbe
  0x00007f0160274360:   mov    QWORD PTR [rsp],r13
  0x00007f0160274364:   mov    DWORD PTR [rsp+0x8],ebx
  0x00007f0160274368:   data16 xchg ax,ax
  0x00007f016027436b:   call   0x00007f015878ae80           ; ImmutableOopMap {[0]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f0160274370:   mov    esi,0xffffff8d
  0x00007f0160274375:   mov    QWORD PTR [rsp],r13
  0x00007f0160274379:   mov    DWORD PTR [rsp+0x8],ebx
  0x00007f016027437d:   xchg   ax,ax
  0x00007f016027437f:   call   0x00007f015878ae80           ; ImmutableOopMap {[0]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f0160274384:   mov    esi,0xffffff45
  0x00007f0160274389:   mov    QWORD PTR [rsp+0x10],r13
  0x00007f016027438e:   mov    QWORD PTR [rsp+0x18],r13
  0x00007f0160274393:   mov    DWORD PTR [rsp+0xc],ebx
  0x00007f0160274397:   mov    DWORD PTR [rsp+0x30],ebx
  0x00007f016027439b:   call   0x00007f015878ae80           ; ImmutableOopMap {[16]=Oop [24]=Oop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@1 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f01602743a0:   mov    r11d,ebx
  0x00007f01602743a3:   jmp    0x00007f01602742fe
  0x00007f01602743a8:   mov    r11d,ebx
  0x00007f01602743ab:   jmp    0x00007f0160274331
  0x00007f01602743ad:   mov    r11d,ebx
  0x00007f01602743b0:   jmp    0x00007f01602742fe
  0x00007f01602743b5:   mov    r11d,ebx
  0x00007f01602743b8:   jmp    0x00007f0160274331
  0x00007f01602743bd:   hlt    
  0x00007f01602743be:   hlt    
  0x00007f01602743bf:   hlt    
[Exception Handler]
  0x00007f01602743c0:   jmp    0x00007f01587eb300           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f01602743c5:   call   0x00007f01602743ca
  0x00007f01602743ca:   sub    QWORD PTR [rsp],0x5
  0x00007f01602743cf:   jmp    0x00007f01587cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007f01602743d4:   hlt    
  0x00007f01602743d5:   hlt    
  0x00007f01602743d6:   hlt    
  0x00007f01602743d7:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     378  507       4       me.serce.BufferAccessBenchmark::putLong (37 bytes)
 total in heap  [0x00007f0160274a10,0x00007f01602753d0] = 2496
 relocation     [0x00007f0160274b70,0x00007f0160274b88] = 24
 main code      [0x00007f0160274ba0,0x00007f0160274e20] = 640
 stub code      [0x00007f0160274e20,0x00007f0160274e38] = 24
 oops           [0x00007f0160274e38,0x00007f0160274e48] = 16
 metadata       [0x00007f0160274e48,0x00007f0160274e88] = 64
 scopes data    [0x00007f0160274e88,0x00007f0160274ff8] = 368
 scopes pcs     [0x00007f0160274ff8,0x00007f01602753b8] = 960
 dependencies   [0x00007f01602753b8,0x00007f01602753c0] = 8
 nul chk table  [0x00007f01602753c0,0x00007f01602753d0] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f0174633c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  # this:     rsi:rsi   = 'me/serce/BufferAccessBenchmark'
  # parm0:    rdx:rdx   = 'org/openjdk/jmh/infra/Blackhole'
  #           [sp+0x60]  (sp of caller)
  0x00007f0160274ba0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f0160274ba4:   shl    r10,0x3
  0x00007f0160274ba8:   movabs r12,0x800000000
  0x00007f0160274bb2:   add    r10,r12
  0x00007f0160274bb5:   xor    r12,r12
  0x00007f0160274bb8:   cmp    rax,r10
  0x00007f0160274bbb:   jne    0x00007f01587cd580           ;   {runtime_call ic_miss_stub}
  0x00007f0160274bc1:   data16 xchg ax,ax
  0x00007f0160274bc4:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f0160274bcc:   data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f0160274bd0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f0160274bd7:   push   rbp
  0x00007f0160274bd8:   sub    rsp,0x50                     ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
  0x00007f0160274bdc:   mov    rcx,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@1 (line 64)
  0x00007f0160274be0:   mov    ebp,DWORD PTR [rsi+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@6 (line 65)
  0x00007f0160274be3:   mov    r10d,DWORD PTR [rbp+0x8]     ; implicit exception: dispatches to 0x00007f0160274dec
  0x00007f0160274be7:   cmp    r10d,0x2b613                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f0160274bee:   jne    0x00007f0160274dec
  0x00007f0160274bf4:   mov    rdi,rbp                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274bf7:   mov    r10d,DWORD PTR [rdi+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274bfb:   xor    ebx,ebx
  0x00007f0160274bfd:   cmp    r10d,0x8
  0x00007f0160274c01:   jl     0x00007f0160274d90           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274c07:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274c0b:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274c10:   test   r10d,r10d
  0x00007f0160274c13:   je     0x00007f0160274dfc           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274c19:   mov    rsi,rcx
  0x00007f0160274c1c:   bswap  rsi                          ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@12 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274c1f:   mov    r10,rdx
  0x00007f0160274c22:   mov    QWORD PTR [r10],rsi          ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274c25:   mov    r11d,0x1
  0x00007f0160274c2b:   mov    r9d,0xfa0
  0x00007f0160274c31:   mov    r8d,0x3ffffd
  0x00007f0160274c37:   sub    r8d,r11d
  0x00007f0160274c3a:   cmp    r8d,r9d
  0x00007f0160274c3d:   cmovg  r8d,r9d
  0x00007f0160274c41:   add    r8d,r11d                     ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 67)
  0x00007f0160274c44:   mov    r10d,DWORD PTR [rdi+0x1c]
  0x00007f0160274c48:   sub    r10d,r11d                    ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274c4b:   cmp    r10d,0x8
  0x00007f0160274c4f:   jl     0x00007f0160274d8d           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274c55:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274c59:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274c5e:   movsxd rax,r11d                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274c61:   test   r10d,r10d
  0x00007f0160274c64:   je     0x00007f0160274dbd           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274c6a:   mov    ebx,r11d
  0x00007f0160274c6d:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0160274c6f:   mov    r10,rdx
  0x00007f0160274c72:   mov    QWORD PTR [r10+rax*1],rsi    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274c76:   mov    r10d,DWORD PTR [rdi+0x1c]
  0x00007f0160274c7a:   sub    r10d,r11d
  0x00007f0160274c7d:   dec    r10d                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274c80:   cmp    r10d,0x8
  0x00007f0160274c84:   jl     0x00007f0160274d90           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274c8a:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274c8e:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274c93:   test   r10d,r10d
  0x00007f0160274c96:   je     0x00007f0160274db4           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274c9c:   mov    ebx,r11d
  0x00007f0160274c9f:   add    ebx,0x2                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0160274ca2:   mov    r10,rdx
  0x00007f0160274ca5:   mov    QWORD PTR [r10+rax*1+0x1],rsi;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274caa:   mov    r10d,DWORD PTR [rdi+0x1c]
  0x00007f0160274cae:   sub    r10d,r11d
  0x00007f0160274cb1:   add    r10d,0xfffffffe              ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274cb5:   cmp    r10d,0x8
  0x00007f0160274cb9:   jl     0x00007f0160274d90           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274cbf:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274cc3:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274cc8:   mov    rbp,rax
  0x00007f0160274ccb:   add    rbp,0x2                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274ccf:   test   r10d,r10d
  0x00007f0160274cd2:   je     0x00007f0160274dc3           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274cd8:   mov    ebx,r11d
  0x00007f0160274cdb:   add    ebx,0x3                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0160274cde:   mov    r10,rdx
  0x00007f0160274ce1:   mov    QWORD PTR [r10+rax*1+0x2],rsi;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274ce6:   mov    r10d,DWORD PTR [rdi+0x1c]
  0x00007f0160274cea:   sub    r10d,r11d
  0x00007f0160274ced:   add    r10d,0xfffffffd              ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274cf1:   cmp    r10d,0x8
  0x00007f0160274cf5:   jl     0x00007f0160274d90           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274cfb:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274cff:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274d04:   test   r10d,r10d
  0x00007f0160274d07:   je     0x00007f0160274db7
  0x00007f0160274d0d:   mov    r10,rdx
  0x00007f0160274d10:   mov    QWORD PTR [r10+rax*1+0x3],rsi;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274d15:   add    r11d,0x4                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0160274d19:   cmp    r11d,r8d
  0x00007f0160274d1c:   jl     0x00007f0160274c44           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0160274d22:   mov    r8,QWORD PTR [r15+0x108]     ; ImmutableOopMap {rdi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0160274d29:   test   DWORD PTR [r8],eax           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {poll}
  0x00007f0160274d2c:   cmp    r11d,0x3ffffd
  0x00007f0160274d33:   jl     0x00007f0160274c31
  0x00007f0160274d39:   cmp    r11d,0x400000
  0x00007f0160274d40:   jge    0x00007f0160274d7d
  0x00007f0160274d42:   xchg   ax,ax                        ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 67)
  0x00007f0160274d44:   mov    r10d,DWORD PTR [rdi+0x1c]
  0x00007f0160274d48:   sub    r10d,r11d                    ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274d4b:   cmp    r10d,0x8
  0x00007f0160274d4f:   jl     0x00007f0160274e00           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274d55:   movzx  r10d,BYTE PTR [rdi+0x29]     ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274d5a:   mov    rdx,QWORD PTR [rdi+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274d5e:   movsxd rbp,r11d                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274d61:   test   r10d,r10d
  0x00007f0160274d64:   je     0x00007f0160274e05
  0x00007f0160274d6a:   mov    r10,rdx
  0x00007f0160274d6d:   mov    QWORD PTR [r10+rbp*1],rsi    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274d71:   inc    r11d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0160274d74:   cmp    r11d,0x400000
  0x00007f0160274d7b:   jl     0x00007f0160274d44           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f0160274d7d:   add    rsp,0x50
  0x00007f0160274d81:   pop    rbp
  0x00007f0160274d82:   mov    r10,QWORD PTR [r15+0x108]
  0x00007f0160274d89:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f0160274d8c:   ret    
  0x00007f0160274d8d:   mov    ebx,r11d
  0x00007f0160274d90:   mov    esi,0xffffff45
  0x00007f0160274d95:   mov    QWORD PTR [rsp+0x8],rdi
  0x00007f0160274d9a:   mov    QWORD PTR [rsp+0x10],rdi
  0x00007f0160274d9f:   mov    DWORD PTR [rsp+0x4],ebx
  0x00007f0160274da3:   mov    DWORD PTR [rsp+0x20],r10d
  0x00007f0160274da8:   mov    QWORD PTR [rsp+0x30],rcx
  0x00007f0160274dad:   xchg   ax,ax
  0x00007f0160274daf:   call   0x00007f015878ae80           ; ImmutableOopMap {[8]=Oop [16]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f0160274db4:   mov    rbp,rax
  0x00007f0160274db7:   add    rbp,0x1                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274dbb:   jmp    0x00007f0160274dc3
  0x00007f0160274dbd:   mov    rbp,rax
  0x00007f0160274dc0:   mov    ebx,r11d
  0x00007f0160274dc3:   add    rdx,rbp                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@8 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0160274dc6:   mov    esi,0xffffff45
  0x00007f0160274dcb:   mov    DWORD PTR [rsp],ebx
  0x00007f0160274dce:   mov    QWORD PTR [rsp+0x8],rdi
  0x00007f0160274dd3:   mov    QWORD PTR [rsp+0x10],rdi
  0x00007f0160274dd8:   mov    QWORD PTR [rsp+0x18],rdx
  0x00007f0160274ddd:   mov    DWORD PTR [rsp+0x4],r10d
  0x00007f0160274de2:   mov    QWORD PTR [rsp+0x28],rcx
  0x00007f0160274de7:   call   0x00007f015878ae80           ; ImmutableOopMap {[8]=Oop [16]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.misc.Unsafe::convEndian@4 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f0160274dec:   mov    esi,0xffffff76
  0x00007f0160274df1:   mov    QWORD PTR [rsp],rcx
  0x00007f0160274df5:   xchg   ax,ax
  0x00007f0160274df7:   call   0x00007f015878ae80           ; ImmutableOopMap {rbp=NarrowOop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@18 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f0160274dfc:   xor    ebp,ebp
  0x00007f0160274dfe:   jmp    0x00007f0160274dc3
  0x00007f0160274e00:   mov    ebx,r11d
  0x00007f0160274e03:   jmp    0x00007f0160274d90
  0x00007f0160274e05:   mov    ebx,r11d
  0x00007f0160274e08:   jmp    0x00007f0160274dc3
  0x00007f0160274e0a:   hlt    
  0x00007f0160274e0b:   hlt    
  0x00007f0160274e0c:   hlt    
  0x00007f0160274e0d:   hlt    
  0x00007f0160274e0e:   hlt    
  0x00007f0160274e0f:   hlt    
  0x00007f0160274e10:   hlt    
  0x00007f0160274e11:   hlt    
  0x00007f0160274e12:   hlt    
  0x00007f0160274e13:   hlt    
  0x00007f0160274e14:   hlt    
  0x00007f0160274e15:   hlt    
  0x00007f0160274e16:   hlt    
  0x00007f0160274e17:   hlt    
  0x00007f0160274e18:   hlt    
  0x00007f0160274e19:   hlt    
  0x00007f0160274e1a:   hlt    
  0x00007f0160274e1b:   hlt    
  0x00007f0160274e1c:   hlt    
  0x00007f0160274e1d:   hlt    
  0x00007f0160274e1e:   hlt    
  0x00007f0160274e1f:   hlt    
[Exception Handler]
  0x00007f0160274e20:   jmp    0x00007f01587eb300           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f0160274e25:   call   0x00007f0160274e2a
  0x00007f0160274e2a:   sub    QWORD PTR [rsp],0x5
  0x00007f0160274e2f:   jmp    0x00007f01587cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007f0160274e34:   hlt    
  0x00007f0160274e35:   hlt    
  0x00007f0160274e36:   hlt    
  0x00007f0160274e37:   hlt    
--------------------------------------------------------------------------------
4204408.457 ns/op
Iteration   1: 4187208.203 ns/op
Iteration   2: 4173563.310 ns/op
Iteration   3: 4174827.479 ns/op


Result "me.serce.BufferAccessBenchmark.putLong":
  4178532.997 ±(99.9%) 137548.391 ns/op [Average]
  (min, avg, max) = (4173563.310, 4178532.997, 4187208.203), stdev = 7539.491
  CI (99.9%): [4040984.606, 4316081.388] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 13.0.4, OpenJDK 64-Bit Server VM, 13.0.4+8-MTS
# VM invoker: /usr/lib/jvm/zulu-13-amd64/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:PrintAssemblyOptions=intel -XX:CompileCommand=print,*BufferAccessBenchmark.putLong*
# Warmup: 1 iterations, 10 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: me.serce.BufferAccessBenchmark.putLong
# Parameters: (bufferType = direct-native)

# Run progress: 33.33% complete, ETA 00:01:20
# Fork: 1 of 1
CompileCommand: print *BufferAccessBenchmark.putLong*
OpenJDK 64-Bit Server VM warning: printing of assembly code is enabled; turning on DebugNonSafepoints to gain additional output
# Warmup Iteration   1: 
============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     271  494 %     3       me.serce.BufferAccessBenchmark::putLong @ 14 (37 bytes)
 total in heap  [0x00007f0040dd5190,0x00007f0040dd57f0] = 1632
 relocation     [0x00007f0040dd52f0,0x00007f0040dd5338] = 72
 main code      [0x00007f0040dd5340,0x00007f0040dd5600] = 704
 stub code      [0x00007f0040dd5600,0x00007f0040dd5640] = 64
 oops           [0x00007f0040dd5640,0x00007f0040dd5648] = 8
 metadata       [0x00007f0040dd5648,0x00007f0040dd5650] = 8
 scopes data    [0x00007f0040dd5650,0x00007f0040dd56d8] = 136
 scopes pcs     [0x00007f0040dd56d8,0x00007f0040dd57d8] = 256
 dependencies   [0x00007f0040dd57d8,0x00007f0040dd57e0] = 8
 nul chk table  [0x00007f0040dd57e0,0x00007f0040dd57f0] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f003c783c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f0040dd5340:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f0040dd5344:   shl    r10,0x3
  0x00007f0040dd5348:   movabs r12,0x800000000
  0x00007f0040dd5352:   add    r10,r12
  0x00007f0040dd5355:   xor    r12,r12
  0x00007f0040dd5358:   cmp    r10,rax
  0x00007f0040dd535b:   jne    0x00007f00407cd580           ;   {runtime_call ic_miss_stub}
  0x00007f0040dd5361:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f0040dd536c:   data16 data16 xchg ax,ax
  0x00007f0040dd5370:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f0040dd537b:   data16 data16 xchg ax,ax
  0x00007f0040dd537f:   nop
[Verified Entry Point]
  0x00007f0040dd5380:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f0040dd5387:   push   rbp
  0x00007f0040dd5388:   sub    rsp,0x60
  0x00007f0040dd538c:   movabs rdi,0x7f003c7bc200           ;   {metadata(method data for {method} {0x00007f003c783c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0040dd5396:   mov    ebx,DWORD PTR [rdi+0x13c]
  0x00007f0040dd539c:   add    ebx,0x8
  0x00007f0040dd539f:   mov    DWORD PTR [rdi+0x13c],ebx
  0x00007f0040dd53a5:   and    ebx,0x1ff8
  0x00007f0040dd53ab:   cmp    ebx,0x0
  0x00007f0040dd53ae:   je     0x00007f0040dd557a           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@0 (line 64)
  0x00007f0040dd53b4:   mov    rdi,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@1 (line 64)
  0x00007f0040dd53b8:   mov    esi,DWORD PTR [rsi+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@6 (line 65)
  0x00007f0040dd53bb:   mov    ebx,0x0
  0x00007f0040dd53c0:   jmp    0x00007f0040dd54e6           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f0040dd53c5:   data16 xchg ax,ax
  0x00007f0040dd53c8:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x00007f0040dd559b
  0x00007f0040dd53cb:   mov    rdx,rsi
  0x00007f0040dd53ce:   movabs rcx,0x7f003c7bc200           ;   {metadata(method data for {method} {0x00007f003c783c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0040dd53d8:   mov    edx,DWORD PTR [rdx+0x8]
  0x00007f0040dd53db:   shl    rdx,0x3
  0x00007f0040dd53df:   movabs r12,0x800000000
  0x00007f0040dd53e9:   add    rdx,r12
  0x00007f0040dd53ec:   xor    r12,r12
  0x00007f0040dd53ef:   cmp    rdx,QWORD PTR [rcx+0x1b0]
  0x00007f0040dd53f6:   jne    0x00007f0040dd5405
  0x00007f0040dd53f8:   add    QWORD PTR [rcx+0x1b8],0x1
  0x00007f0040dd5400:   jmp    0x00007f0040dd546b
  0x00007f0040dd5405:   cmp    rdx,QWORD PTR [rcx+0x1c0]
  0x00007f0040dd540c:   jne    0x00007f0040dd541b
  0x00007f0040dd540e:   add    QWORD PTR [rcx+0x1c8],0x1
  0x00007f0040dd5416:   jmp    0x00007f0040dd546b
  0x00007f0040dd541b:   cmp    QWORD PTR [rcx+0x1b0],0x0
  0x00007f0040dd5426:   jne    0x00007f0040dd543f
  0x00007f0040dd5428:   mov    QWORD PTR [rcx+0x1b0],rdx
  0x00007f0040dd542f:   mov    QWORD PTR [rcx+0x1b8],0x1
  0x00007f0040dd543a:   jmp    0x00007f0040dd546b
  0x00007f0040dd543f:   cmp    QWORD PTR [rcx+0x1c0],0x0
  0x00007f0040dd544a:   jne    0x00007f0040dd5463
  0x00007f0040dd544c:   mov    QWORD PTR [rcx+0x1c0],rdx
  0x00007f0040dd5453:   mov    QWORD PTR [rcx+0x1c8],0x1
  0x00007f0040dd545e:   jmp    0x00007f0040dd546b
  0x00007f0040dd5463:   add    QWORD PTR [rcx+0x1a0],0x1
  0x00007f0040dd546b:   mov    rdx,rbx
  0x00007f0040dd546e:   mov    rcx,rdi
  0x00007f0040dd5471:   mov    rax,rsi
  0x00007f0040dd5474:   mov    rsi,rax                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0040dd5477:   mov    QWORD PTR [rsp+0x48],rdi
  0x00007f0040dd547c:   mov    QWORD PTR [rsp+0x40],rax
  0x00007f0040dd5481:   mov    DWORD PTR [rsp+0x2c],ebx
  0x00007f0040dd5485:   movabs rax,0x80015b098
  0x00007f0040dd548f:   call   0x00007f0048273900           ; ImmutableOopMap {[64]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {virtual_call}
  0x00007f0040dd5494:   mov    ebx,DWORD PTR [rsp+0x2c]
  0x00007f0040dd5498:   inc    ebx
  0x00007f0040dd549a:   movabs rsi,0x7f003c7bc200           ;   {metadata(method data for {method} {0x00007f003c783c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0040dd54a4:   mov    edi,DWORD PTR [rsi+0x140]
  0x00007f0040dd54aa:   add    edi,0x8
  0x00007f0040dd54ad:   mov    DWORD PTR [rsi+0x140],edi
  0x00007f0040dd54b3:   and    edi,0xfff8
  0x00007f0040dd54b9:   cmp    edi,0x0
  0x00007f0040dd54bc:   je     0x00007f0040dd55a0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0040dd54c2:   mov    r10,QWORD PTR [r15+0x108]    ; ImmutableOopMap {[64]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0040dd54c9:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00007f0040dd54cc:   movabs rsi,0x7f003c7bc200           ;   {metadata(method data for {method} {0x00007f003c783c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0040dd54d6:   inc    DWORD PTR [rsi+0x1d8]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0040dd54dc:   mov    rsi,QWORD PTR [rsp+0x40]
  0x00007f0040dd54e1:   mov    rdi,QWORD PTR [rsp+0x48]
  0x00007f0040dd54e6:   cmp    ebx,0x400000
  0x00007f0040dd54ec:   movabs rdx,0x7f003c7bc200           ;   {metadata(method data for {method} {0x00007f003c783c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0040dd54f6:   movabs rcx,0x190
  0x00007f0040dd5500:   jl     0x00007f0040dd5510
  0x00007f0040dd5506:   movabs rcx,0x180
  0x00007f0040dd5510:   mov    rax,QWORD PTR [rdx+rcx*1]
  0x00007f0040dd5514:   lea    rax,[rax+0x1]
  0x00007f0040dd5518:   mov    QWORD PTR [rdx+rcx*1],rax
  0x00007f0040dd551c:   jl     0x00007f0040dd53c8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f0040dd5522:   add    rsp,0x60
  0x00007f0040dd5526:   pop    rbp
  0x00007f0040dd5527:   mov    r10,QWORD PTR [r15+0x108]
  0x00007f0040dd552e:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f0040dd5531:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@36 (line 69)
  0x00007f0040dd5532:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f0040dd5539:   push   rbp
  0x00007f0040dd553a:   sub    rsp,0x60
  0x00007f0040dd553e:   mov    rbx,QWORD PTR [rsi+0x10]
  0x00007f0040dd5542:   mov    rax,QWORD PTR [rsi+0x8]
  0x00007f0040dd5546:   mov    edx,DWORD PTR [rsi]
  0x00007f0040dd5548:   mov    rdi,rsi
  0x00007f0040dd554b:   mov    QWORD PTR [rsp+0x38],rbx
  0x00007f0040dd5550:   mov    QWORD PTR [rsp+0x30],rax
  0x00007f0040dd5555:   mov    DWORD PTR [rsp+0x28],edx
  0x00007f0040dd5559:   call   0x00007f005f61bb80           ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x00007f0040dd555e:   mov    edx,DWORD PTR [rsp+0x28]
  0x00007f0040dd5562:   mov    rbx,rdx
  0x00007f0040dd5565:   mov    rax,QWORD PTR [rsp+0x30]
  0x00007f0040dd556a:   mov    rsi,rax
  0x00007f0040dd556d:   mov    rdx,QWORD PTR [rsp+0x38]
  0x00007f0040dd5572:   mov    rdi,rdx
  0x00007f0040dd5575:   jmp    0x00007f0040dd54e6
  0x00007f0040dd557a:   movabs r10,0x7f003c783c98           ;   {metadata({method} {0x00007f003c783c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0040dd5584:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f0040dd5589:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f0040dd5591:   call   0x00007f004087ee80           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f0040dd5596:   jmp    0x00007f0040dd53b4
  0x00007f0040dd559b:   call   0x00007f0040878ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f0040dd55a0:   movabs r10,0x7f003c783c98           ;   {metadata({method} {0x00007f003c783c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0040dd55aa:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f0040dd55af:   mov    QWORD PTR [rsp],0x21
  0x00007f0040dd55b7:   call   0x00007f004087ee80           ; ImmutableOopMap {[64]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f0040dd55bc:   jmp    0x00007f0040dd54c2
  0x00007f0040dd55c1:   nop
  0x00007f0040dd55c2:   nop
  0x00007f0040dd55c3:   mov    rax,QWORD PTR [r15+0x3f0]
  0x00007f0040dd55ca:   movabs r10,0x0
  0x00007f0040dd55d4:   mov    QWORD PTR [r15+0x3f0],r10
  0x00007f0040dd55db:   movabs r10,0x0
  0x00007f0040dd55e5:   mov    QWORD PTR [r15+0x3f8],r10
  0x00007f0040dd55ec:   add    rsp,0x60
  0x00007f0040dd55f0:   pop    rbp
  0x00007f0040dd55f1:   jmp    0x00007f00407eac80           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f0040dd55f6:   hlt    
  0x00007f0040dd55f7:   hlt    
  0x00007f0040dd55f8:   hlt    
  0x00007f0040dd55f9:   hlt    
  0x00007f0040dd55fa:   hlt    
  0x00007f0040dd55fb:   hlt    
  0x00007f0040dd55fc:   hlt    
  0x00007f0040dd55fd:   hlt    
  0x00007f0040dd55fe:   hlt    
  0x00007f0040dd55ff:   hlt    
[Stub Code]
  0x00007f0040dd5600:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x00007f0040dd5605:   movabs rbx,0x0                      ;   {static_stub}
  0x00007f0040dd560f:   jmp    0x00007f0040dd560f           ;   {runtime_call}
[Exception Handler]
  0x00007f0040dd5614:   call   0x00007f004087b200           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f0040dd5619:   movabs rdi,0x7f005f93dd72           ;   {external_word}
  0x00007f0040dd5623:   and    rsp,0xfffffffffffffff0
  0x00007f0040dd5627:   call   0x00007f005f3fd880           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f0040dd562c:   hlt    
[Deopt Handler Code]
  0x00007f0040dd562d:   movabs r10,0x7f0040dd562d           ;   {section_word}
  0x00007f0040dd5637:   push   r10
  0x00007f0040dd5639:   jmp    0x00007f00407cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007f0040dd563e:   hlt    
  0x00007f0040dd563f:   hlt    
--------------------------------------------------------------------------------

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     286  495       3       me.serce.BufferAccessBenchmark::putLong (37 bytes)
 total in heap  [0x00007f0040dd5810,0x00007f0040dd5e18] = 1544
 relocation     [0x00007f0040dd5970,0x00007f0040dd59b8] = 72
 main code      [0x00007f0040dd59c0,0x00007f0040dd5c40] = 640
 stub code      [0x00007f0040dd5c40,0x00007f0040dd5c80] = 64
 oops           [0x00007f0040dd5c80,0x00007f0040dd5c88] = 8
 metadata       [0x00007f0040dd5c88,0x00007f0040dd5c90] = 8
 scopes data    [0x00007f0040dd5c90,0x00007f0040dd5d10] = 128
 scopes pcs     [0x00007f0040dd5d10,0x00007f0040dd5e00] = 240
 dependencies   [0x00007f0040dd5e00,0x00007f0040dd5e08] = 8
 nul chk table  [0x00007f0040dd5e08,0x00007f0040dd5e18] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f003c783c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  # this:     rsi:rsi   = 'me/serce/BufferAccessBenchmark'
  # parm0:    rdx:rdx   = 'org/openjdk/jmh/infra/Blackhole'
  #           [sp+0x60]  (sp of caller)
  0x00007f0040dd59c0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f0040dd59c4:   shl    r10,0x3
  0x00007f0040dd59c8:   movabs r12,0x800000000
  0x00007f0040dd59d2:   add    r10,r12
  0x00007f0040dd59d5:   xor    r12,r12
  0x00007f0040dd59d8:   cmp    r10,rax
  0x00007f0040dd59db:   jne    0x00007f00407cd580           ;   {runtime_call ic_miss_stub}
  0x00007f0040dd59e1:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f0040dd59ec:   data16 data16 xchg ax,ax
  0x00007f0040dd59f0:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f0040dd59fb:   data16 data16 xchg ax,ax
  0x00007f0040dd59ff:   nop
[Verified Entry Point]
  0x00007f0040dd5a00:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f0040dd5a07:   push   rbp
  0x00007f0040dd5a08:   sub    rsp,0x50
  0x00007f0040dd5a0c:   movabs rcx,0x7f003c7bc200           ;   {metadata(method data for {method} {0x00007f003c783c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0040dd5a16:   mov    edi,DWORD PTR [rcx+0x13c]
  0x00007f0040dd5a1c:   add    edi,0x8
  0x00007f0040dd5a1f:   mov    DWORD PTR [rcx+0x13c],edi
  0x00007f0040dd5a25:   and    edi,0x1ff8
  0x00007f0040dd5a2b:   cmp    edi,0x0
  0x00007f0040dd5a2e:   je     0x00007f0040dd5bb2           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@0 (line 64)
  0x00007f0040dd5a34:   mov    rdi,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@1 (line 64)
  0x00007f0040dd5a38:   mov    QWORD PTR [rsp+0x38],rdi
  0x00007f0040dd5a3d:   mov    ebx,DWORD PTR [rsi+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@6 (line 65)
  0x00007f0040dd5a40:   mov    QWORD PTR [rsp+0x30],rbx
  0x00007f0040dd5a45:   mov    eax,0x0
  0x00007f0040dd5a4a:   jmp    0x00007f0040dd5b66           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f0040dd5a4f:   nop
  0x00007f0040dd5a50:   cmp    rax,QWORD PTR [rbx]          ; implicit exception: dispatches to 0x00007f0040dd5bd3
  0x00007f0040dd5a53:   mov    rdx,rbx
  0x00007f0040dd5a56:   movabs rcx,0x7f003c7bc200           ;   {metadata(method data for {method} {0x00007f003c783c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0040dd5a60:   mov    edx,DWORD PTR [rdx+0x8]
  0x00007f0040dd5a63:   shl    rdx,0x3
  0x00007f0040dd5a67:   movabs r12,0x800000000
  0x00007f0040dd5a71:   add    rdx,r12
  0x00007f0040dd5a74:   xor    r12,r12
  0x00007f0040dd5a77:   cmp    rdx,QWORD PTR [rcx+0x1b0]
  0x00007f0040dd5a7e:   jne    0x00007f0040dd5a8d
  0x00007f0040dd5a80:   add    QWORD PTR [rcx+0x1b8],0x1
  0x00007f0040dd5a88:   jmp    0x00007f0040dd5af3
  0x00007f0040dd5a8d:   cmp    rdx,QWORD PTR [rcx+0x1c0]
  0x00007f0040dd5a94:   jne    0x00007f0040dd5aa3
  0x00007f0040dd5a96:   add    QWORD PTR [rcx+0x1c8],0x1
  0x00007f0040dd5a9e:   jmp    0x00007f0040dd5af3
  0x00007f0040dd5aa3:   cmp    QWORD PTR [rcx+0x1b0],0x0
  0x00007f0040dd5aae:   jne    0x00007f0040dd5ac7
  0x00007f0040dd5ab0:   mov    QWORD PTR [rcx+0x1b0],rdx
  0x00007f0040dd5ab7:   mov    QWORD PTR [rcx+0x1b8],0x1
  0x00007f0040dd5ac2:   jmp    0x00007f0040dd5af3
  0x00007f0040dd5ac7:   cmp    QWORD PTR [rcx+0x1c0],0x0
  0x00007f0040dd5ad2:   jne    0x00007f0040dd5aeb
  0x00007f0040dd5ad4:   mov    QWORD PTR [rcx+0x1c0],rdx
  0x00007f0040dd5adb:   mov    QWORD PTR [rcx+0x1c8],0x1
  0x00007f0040dd5ae6:   jmp    0x00007f0040dd5af3
  0x00007f0040dd5aeb:   add    QWORD PTR [rcx+0x1a0],0x1
  0x00007f0040dd5af3:   mov    rdx,rax
  0x00007f0040dd5af6:   mov    rcx,rdi
  0x00007f0040dd5af9:   mov    rsi,rbx                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0040dd5afc:   mov    DWORD PTR [rsp+0x28],eax
  0x00007f0040dd5b00:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f0040dd5b05:   movabs rax,0xffffffffffffffff
  0x00007f0040dd5b0f:   call   0x00007f00407ccc80           ; ImmutableOopMap {[48]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {virtual_call}
  0x00007f0040dd5b14:   mov    eax,DWORD PTR [rsp+0x28]
  0x00007f0040dd5b18:   inc    eax
  0x00007f0040dd5b1a:   movabs rsi,0x7f003c7bc200           ;   {metadata(method data for {method} {0x00007f003c783c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0040dd5b24:   mov    edi,DWORD PTR [rsi+0x140]
  0x00007f0040dd5b2a:   add    edi,0x8
  0x00007f0040dd5b2d:   mov    DWORD PTR [rsi+0x140],edi
  0x00007f0040dd5b33:   and    edi,0xfff8
  0x00007f0040dd5b39:   cmp    edi,0x0
  0x00007f0040dd5b3c:   je     0x00007f0040dd5bd8           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0040dd5b42:   mov    r10,QWORD PTR [r15+0x108]    ; ImmutableOopMap {[48]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0040dd5b49:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00007f0040dd5b4c:   movabs rsi,0x7f003c7bc200           ;   {metadata(method data for {method} {0x00007f003c783c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0040dd5b56:   inc    DWORD PTR [rsi+0x1d8]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0040dd5b5c:   mov    rbx,QWORD PTR [rsp+0x30]
  0x00007f0040dd5b61:   mov    rdi,QWORD PTR [rsp+0x38]
  0x00007f0040dd5b66:   cmp    eax,0x400000
  0x00007f0040dd5b6c:   movabs rdx,0x7f003c7bc200           ;   {metadata(method data for {method} {0x00007f003c783c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0040dd5b76:   movabs rcx,0x190
  0x00007f0040dd5b80:   jl     0x00007f0040dd5b90
  0x00007f0040dd5b86:   movabs rcx,0x180
  0x00007f0040dd5b90:   mov    rsi,QWORD PTR [rdx+rcx*1]
  0x00007f0040dd5b94:   lea    rsi,[rsi+0x1]
  0x00007f0040dd5b98:   mov    QWORD PTR [rdx+rcx*1],rsi
  0x00007f0040dd5b9c:   jl     0x00007f0040dd5a50           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f0040dd5ba2:   add    rsp,0x50
  0x00007f0040dd5ba6:   pop    rbp
  0x00007f0040dd5ba7:   mov    r10,QWORD PTR [r15+0x108]
  0x00007f0040dd5bae:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f0040dd5bb1:   ret    
  0x00007f0040dd5bb2:   movabs r10,0x7f003c783c98           ;   {metadata({method} {0x00007f003c783c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0040dd5bbc:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f0040dd5bc1:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f0040dd5bc9:   call   0x00007f004087ee80           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f0040dd5bce:   jmp    0x00007f0040dd5a34
  0x00007f0040dd5bd3:   call   0x00007f0040878ca0           ; ImmutableOopMap {rbx=Oop [48]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f0040dd5bd8:   movabs r10,0x7f003c783c98           ;   {metadata({method} {0x00007f003c783c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f0040dd5be2:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f0040dd5be7:   mov    QWORD PTR [rsp],0x21
  0x00007f0040dd5bef:   call   0x00007f004087ee80           ; ImmutableOopMap {[48]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f0040dd5bf4:   jmp    0x00007f0040dd5b42
  0x00007f0040dd5bf9:   nop
  0x00007f0040dd5bfa:   nop
  0x00007f0040dd5bfb:   mov    rax,QWORD PTR [r15+0x3f0]
  0x00007f0040dd5c02:   movabs r10,0x0
  0x00007f0040dd5c0c:   mov    QWORD PTR [r15+0x3f0],r10
  0x00007f0040dd5c13:   movabs r10,0x0
  0x00007f0040dd5c1d:   mov    QWORD PTR [r15+0x3f8],r10
  0x00007f0040dd5c24:   add    rsp,0x50
  0x00007f0040dd5c28:   pop    rbp
  0x00007f0040dd5c29:   jmp    0x00007f00407eac80           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f0040dd5c2e:   hlt    
  0x00007f0040dd5c2f:   hlt    
  0x00007f0040dd5c30:   hlt    
  0x00007f0040dd5c31:   hlt    
  0x00007f0040dd5c32:   hlt    
  0x00007f0040dd5c33:   hlt    
  0x00007f0040dd5c34:   hlt    
  0x00007f0040dd5c35:   hlt    
  0x00007f0040dd5c36:   hlt    
  0x00007f0040dd5c37:   hlt    
  0x00007f0040dd5c38:   hlt    
  0x00007f0040dd5c39:   hlt    
  0x00007f0040dd5c3a:   hlt    
  0x00007f0040dd5c3b:   hlt    
  0x00007f0040dd5c3c:   hlt    
  0x00007f0040dd5c3d:   hlt    
  0x00007f0040dd5c3e:   hlt    
  0x00007f0040dd5c3f:   hlt    
[Stub Code]
  0x00007f0040dd5c40:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x00007f0040dd5c45:   movabs rbx,0x0                      ;   {static_stub}
  0x00007f0040dd5c4f:   jmp    0x00007f0040dd5c4f           ;   {runtime_call}
[Exception Handler]
  0x00007f0040dd5c54:   call   0x00007f004087b200           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f0040dd5c59:   movabs rdi,0x7f005f93dd72           ;   {external_word}
  0x00007f0040dd5c63:   and    rsp,0xfffffffffffffff0
  0x00007f0040dd5c67:   call   0x00007f005f3fd880           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f0040dd5c6c:   hlt    
[Deopt Handler Code]
  0x00007f0040dd5c6d:   movabs r10,0x7f0040dd5c6d           ;   {section_word}
  0x00007f0040dd5c77:   push   r10
  0x00007f0040dd5c79:   jmp    0x00007f00407cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007f0040dd5c7e:   hlt    
  0x00007f0040dd5c7f:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     296  496 %     4       me.serce.BufferAccessBenchmark::putLong @ 14 (37 bytes)
 total in heap  [0x00007f0048273c90,0x00007f0048274770] = 2784
 relocation     [0x00007f0048273df0,0x00007f0048273e10] = 32
 main code      [0x00007f0048273e20,0x00007f0048274160] = 832
 stub code      [0x00007f0048274160,0x00007f0048274178] = 24
 oops           [0x00007f0048274178,0x00007f0048274188] = 16
 metadata       [0x00007f0048274188,0x00007f00482741c8] = 64
 scopes data    [0x00007f00482741c8,0x00007f0048274358] = 400
 scopes pcs     [0x00007f0048274358,0x00007f0048274768] = 1040
 dependencies   [0x00007f0048274768,0x00007f0048274770] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f003c783c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f0048273e20:   call   0x00007f005f532230           ;   {runtime_call os::breakpoint()}
  0x00007f0048273e25:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f0048273e30:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f0048273e37:   push   rbp
  0x00007f0048273e38:   sub    rsp,0x50
  0x00007f0048273e3c:   mov    rbp,QWORD PTR [rsi+0x8]
  0x00007f0048273e40:   mov    rbx,QWORD PTR [rsi+0x10]
  0x00007f0048273e44:   mov    r13d,DWORD PTR [rsi]
  0x00007f0048273e47:   mov    rdi,rsi
  0x00007f0048273e4a:   movabs r10,0x7f005f61bb80
  0x00007f0048273e54:   call   r10
  0x00007f0048273e57:   test   rbp,rbp
  0x00007f0048273e5a:   je     0x00007f00482740ec
  0x00007f0048273e60:   mov    r10d,DWORD PTR [rbp+0x8]
  0x00007f0048273e64:   shl    r10,0x3
  0x00007f0048273e68:   movabs r12,0x800000000
  0x00007f0048273e72:   add    r10,r12
  0x00007f0048273e75:   xor    r12,r12
  0x00007f0048273e78:   mov    r10,QWORD PTR [r10+0x40]
  0x00007f0048273e7c:   movabs r11,0x800157c50              ;   {metadata('java/nio/ByteBuffer')}
  0x00007f0048273e86:   cmp    r10,r11
  0x00007f0048273e89:   jne    0x00007f0048274104           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f0048273e8f:   mov    r11d,DWORD PTR [rbp+0x8]
  0x00007f0048273e93:   cmp    r11d,0x2b613                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f0048273e9a:   jne    0x00007f00482740ee
  0x00007f0048273ea0:   cmp    r13d,0x400000
  0x00007f0048273ea7:   jge    0x00007f0048274066           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f0048273ead:   mov    r8,rbp                       ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273eb0:   mov    r9d,r13d
  0x00007f0048273eb3:   inc    r9d
  0x00007f0048273eb6:   xor    r11d,r11d
  0x00007f0048273eb9:   cmp    r9d,r11d
  0x00007f0048273ebc:   cmovl  r9d,r11d
  0x00007f0048273ec0:   mov    r11d,0x400000
  0x00007f0048273ec6:   cmp    r9d,r11d
  0x00007f0048273ec9:   cmovg  r9d,r11d
  0x00007f0048273ecd:   test   r13d,r13d
  0x00007f0048273ed0:   jl     0x00007f0048274118           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273ed6:   mov    r10d,DWORD PTR [r8+0x1c]
  0x00007f0048273eda:   sub    r10d,r13d                    ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273edd:   cmp    r10d,0x8
  0x00007f0048273ee1:   jl     0x00007f0048274144           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273ee7:   mov    rcx,QWORD PTR [r8+0x10]      ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273eeb:   movzx  r10d,BYTE PTR [r8+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273ef0:   movsxd rdi,r13d                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273ef3:   test   r10d,r10d
  0x00007f0048273ef6:   jne    0x00007f004827413c
  0x00007f0048273efc:   mov    r10,rcx
  0x00007f0048273eff:   mov    QWORD PTR [r10+rdi*1],rbx    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273f03:   inc    r13d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0048273f06:   cmp    r13d,r9d
  0x00007f0048273f09:   jl     0x00007f0048273ecd           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f0048273f0b:   cmp    r13d,0x3ffffd
  0x00007f0048273f12:   jge    0x00007f004827401b
  0x00007f0048273f18:   mov    r11d,0xfa0
  0x00007f0048273f1e:   mov    esi,0x3ffffd
  0x00007f0048273f23:   sub    esi,r13d
  0x00007f0048273f26:   cmp    esi,r11d
  0x00007f0048273f29:   cmovg  esi,r11d
  0x00007f0048273f2d:   add    esi,r13d                     ;*invokestatic convEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273f30:   mov    r10d,DWORD PTR [r8+0x1c]
  0x00007f0048273f34:   sub    r10d,r13d                    ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273f37:   cmp    r10d,0x8
  0x00007f0048273f3b:   jl     0x00007f00482740c4           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273f41:   mov    rcx,QWORD PTR [r8+0x10]      ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273f45:   movzx  r10d,BYTE PTR [r8+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273f4a:   movsxd rdx,r13d                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273f4d:   test   r10d,r10d
  0x00007f0048273f50:   jne    0x00007f004827408b
  0x00007f0048273f56:   mov    r10,rcx
  0x00007f0048273f59:   mov    QWORD PTR [r10+rdx*1],rbx    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273f5d:   mov    r10d,DWORD PTR [r8+0x1c]
  0x00007f0048273f61:   sub    r10d,r13d
  0x00007f0048273f64:   dec    r10d                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273f67:   cmp    r10d,0x8
  0x00007f0048273f6b:   jl     0x00007f00482740bc           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273f71:   mov    rcx,QWORD PTR [r8+0x10]      ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273f75:   movzx  r10d,BYTE PTR [r8+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273f7a:   test   r10d,r10d
  0x00007f0048273f7d:   jne    0x00007f004827407c           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273f83:   mov    r9d,r13d
  0x00007f0048273f86:   add    r9d,0x2                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0048273f8a:   mov    r10,rcx
  0x00007f0048273f8d:   mov    QWORD PTR [r10+rdx*1+0x1],rbx;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273f92:   mov    r10d,DWORD PTR [r8+0x1c]
  0x00007f0048273f96:   sub    r10d,r13d
  0x00007f0048273f99:   add    r10d,0xfffffffe              ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273f9d:   cmp    r10d,0x8
  0x00007f0048273fa1:   jl     0x00007f00482740c7           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273fa7:   mov    rcx,QWORD PTR [r8+0x10]      ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273fab:   movzx  r10d,BYTE PTR [r8+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273fb0:   mov    rdi,rdx
  0x00007f0048273fb3:   add    rdi,0x2                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273fb7:   test   r10d,r10d
  0x00007f0048273fba:   jne    0x00007f0048274091
  0x00007f0048273fc0:   mov    r10,rcx
  0x00007f0048273fc3:   mov    QWORD PTR [r10+rdx*1+0x2],rbx;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273fc8:   mov    r10d,DWORD PTR [r8+0x1c]
  0x00007f0048273fcc:   sub    r10d,r13d
  0x00007f0048273fcf:   add    r10d,0xfffffffd              ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273fd3:   cmp    r10d,0x8
  0x00007f0048273fd7:   jl     0x00007f00482740bf           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273fdd:   mov    rcx,QWORD PTR [r8+0x10]      ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273fe1:   movzx  r10d,BYTE PTR [r8+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273fe6:   test   r10d,r10d
  0x00007f0048273fe9:   jne    0x00007f0048274082
  0x00007f0048273fef:   mov    r10,rcx
  0x00007f0048273ff2:   mov    QWORD PTR [r10+rdx*1+0x3],rbx;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048273ff7:   add    r13d,0x4                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0048273ffb:   cmp    r13d,esi
  0x00007f0048273ffe:   jl     0x00007f0048273f30           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0048274004:   mov    r10,QWORD PTR [r15+0x108]    ; ImmutableOopMap {r8=Oop rbp=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f004827400b:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {poll}
  0x00007f004827400e:   cmp    r13d,0x3ffffd
  0x00007f0048274015:   jl     0x00007f0048273f1e
  0x00007f004827401b:   cmp    r13d,0x400000
  0x00007f0048274022:   jge    0x00007f0048274066           ;*invokestatic convEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274024:   test   r13d,r13d
  0x00007f0048274027:   jl     0x00007f0048274118           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f004827402d:   mov    r10d,DWORD PTR [r8+0x1c]
  0x00007f0048274031:   sub    r10d,r13d                    ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274034:   cmp    r10d,0x8
  0x00007f0048274038:   jl     0x00007f0048274154           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f004827403e:   mov    rcx,QWORD PTR [r8+0x10]      ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274042:   movzx  r10d,BYTE PTR [r8+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274047:   movsxd rdi,r13d                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f004827404a:   test   r10d,r10d
  0x00007f004827404d:   jne    0x00007f004827414c
  0x00007f0048274053:   mov    r10,rcx
  0x00007f0048274056:   mov    QWORD PTR [r10+rdi*1],rbx    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f004827405a:   inc    r13d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f004827405d:   cmp    r13d,0x400000
  0x00007f0048274064:   jl     0x00007f0048274024           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f0048274066:   mov    esi,0xffffff45
  0x00007f004827406b:   mov    QWORD PTR [rsp],rbx
  0x00007f004827406f:   mov    DWORD PTR [rsp+0xc],r13d
  0x00007f0048274074:   data16 xchg ax,ax
  0x00007f0048274077:   call   0x00007f004078ae80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@18 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f004827407c:   mov    rdi,rdx
  0x00007f004827407f:   mov    r9d,r13d
  0x00007f0048274082:   inc    r9d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0048274085:   add    rdi,0x1                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274089:   jmp    0x00007f0048274091
  0x00007f004827408b:   mov    rdi,rdx
  0x00007f004827408e:   mov    r9d,r13d                     ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@4 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274091:   add    rcx,rdi                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@8 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274094:   mov    esi,0xffffff45
  0x00007f0048274099:   mov    DWORD PTR [rsp+0x8],r9d
  0x00007f004827409e:   mov    QWORD PTR [rsp+0x10],r8
  0x00007f00482740a3:   mov    QWORD PTR [rsp+0x18],r8
  0x00007f00482740a8:   mov    QWORD PTR [rsp+0x20],rcx
  0x00007f00482740ad:   mov    QWORD PTR [rsp+0x28],rbx
  0x00007f00482740b2:   mov    DWORD PTR [rsp+0xc],r10d
  0x00007f00482740b7:   call   0x00007f004078ae80           ; ImmutableOopMap {[16]=Oop [24]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.misc.Unsafe::convEndian@4 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f00482740bc:   mov    r9d,r13d
  0x00007f00482740bf:   inc    r9d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f00482740c2:   jmp    0x00007f00482740c7
  0x00007f00482740c4:   mov    r9d,r13d                     ;*synchronization entry
                                                            ; - java.nio.Buffer::checkIndex@-1 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482740c7:   mov    esi,0xffffff45
  0x00007f00482740cc:   mov    QWORD PTR [rsp+0x10],r8
  0x00007f00482740d1:   mov    QWORD PTR [rsp+0x18],rbx
  0x00007f00482740d6:   mov    QWORD PTR [rsp+0x20],r8
  0x00007f00482740db:   mov    DWORD PTR [rsp+0xc],r9d
  0x00007f00482740e0:   mov    DWORD PTR [rsp+0x30],r10d
  0x00007f00482740e5:   xchg   ax,ax
  0x00007f00482740e7:   call   0x00007f004078ae80           ; ImmutableOopMap {[16]=Oop [32]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f00482740ec:   xor    ebp,ebp
  0x00007f00482740ee:   mov    esi,0xffffff76
  0x00007f00482740f3:   mov    QWORD PTR [rsp],rbx
  0x00007f00482740f7:   mov    DWORD PTR [rsp+0x8],r13d
  0x00007f00482740fc:   data16 xchg ax,ax
  0x00007f00482740ff:   call   0x00007f004078ae80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f0048274104:   mov    esi,0xffffff8d
  0x00007f0048274109:   mov    QWORD PTR [rsp],rbx
  0x00007f004827410d:   mov    DWORD PTR [rsp+0x8],r13d
  0x00007f0048274112:   nop
  0x00007f0048274113:   call   0x00007f004078ae80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f0048274118:   mov    esi,0xffffff45
  0x00007f004827411d:   mov    QWORD PTR [rsp+0x10],r8
  0x00007f0048274122:   mov    QWORD PTR [rsp+0x18],rbx
  0x00007f0048274127:   mov    QWORD PTR [rsp+0x20],r8
  0x00007f004827412c:   mov    DWORD PTR [rsp+0xc],r13d
  0x00007f0048274131:   mov    DWORD PTR [rsp+0x38],r13d
  0x00007f0048274136:   nop
  0x00007f0048274137:   call   0x00007f004078ae80           ; ImmutableOopMap {[16]=Oop [32]=Oop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@1 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f004827413c:   mov    r9d,r13d
  0x00007f004827413f:   jmp    0x00007f0048274091
  0x00007f0048274144:   mov    r9d,r13d
  0x00007f0048274147:   jmp    0x00007f00482740c7
  0x00007f004827414c:   mov    r9d,r13d
  0x00007f004827414f:   jmp    0x00007f0048274091
  0x00007f0048274154:   mov    r9d,r13d
  0x00007f0048274157:   jmp    0x00007f00482740c7
  0x00007f004827415c:   hlt    
  0x00007f004827415d:   hlt    
  0x00007f004827415e:   hlt    
  0x00007f004827415f:   hlt    
[Exception Handler]
  0x00007f0048274160:   jmp    0x00007f00407eb300           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f0048274165:   call   0x00007f004827416a
  0x00007f004827416a:   sub    QWORD PTR [rsp],0x5
  0x00007f004827416f:   jmp    0x00007f00407cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007f0048274174:   hlt    
  0x00007f0048274175:   hlt    
  0x00007f0048274176:   hlt    
  0x00007f0048274177:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     315  497 %     4       me.serce.BufferAccessBenchmark::putLong @ 14 (37 bytes)
 total in heap  [0x00007f0048274790,0x00007f0048275230] = 2720
 relocation     [0x00007f00482748f0,0x00007f0048274910] = 32
 main code      [0x00007f0048274920,0x00007f0048274c40] = 800
 stub code      [0x00007f0048274c40,0x00007f0048274c58] = 24
 oops           [0x00007f0048274c58,0x00007f0048274c68] = 16
 metadata       [0x00007f0048274c68,0x00007f0048274ca8] = 64
 scopes data    [0x00007f0048274ca8,0x00007f0048274e38] = 400
 scopes pcs     [0x00007f0048274e38,0x00007f0048275228] = 1008
 dependencies   [0x00007f0048275228,0x00007f0048275230] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f003c783c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f0048274920:   call   0x00007f005f532230           ;   {runtime_call os::breakpoint()}
  0x00007f0048274925:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f0048274930:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f0048274937:   push   rbp
  0x00007f0048274938:   sub    rsp,0x50
  0x00007f004827493c:   mov    rbx,QWORD PTR [rsi+0x8]
  0x00007f0048274940:   mov    r13,QWORD PTR [rsi+0x10]
  0x00007f0048274944:   mov    ebp,DWORD PTR [rsi]
  0x00007f0048274946:   mov    rdi,rsi
  0x00007f0048274949:   movabs r10,0x7f005f61bb80
  0x00007f0048274953:   call   r10
  0x00007f0048274956:   test   rbx,rbx
  0x00007f0048274959:   je     0x00007f0048274bc8
  0x00007f004827495f:   mov    r10d,DWORD PTR [rbx+0x8]
  0x00007f0048274963:   shl    r10,0x3
  0x00007f0048274967:   movabs r12,0x800000000
  0x00007f0048274971:   add    r10,r12
  0x00007f0048274974:   xor    r12,r12
  0x00007f0048274977:   mov    r10,QWORD PTR [r10+0x40]
  0x00007f004827497b:   movabs r11,0x800157c50              ;   {metadata('java/nio/ByteBuffer')}
  0x00007f0048274985:   cmp    r10,r11
  0x00007f0048274988:   jne    0x00007f0048274be0           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f004827498e:   mov    r11d,DWORD PTR [rbx+0x8]
  0x00007f0048274992:   cmp    r11d,0x2b613                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f0048274999:   jne    0x00007f0048274bca
  0x00007f004827499f:   cmp    ebp,0x400000
  0x00007f00482749a5:   jge    0x00007f0048274b46           ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482749ab:   mov    r11d,ebp
  0x00007f00482749ae:   inc    r11d
  0x00007f00482749b1:   xor    r8d,r8d
  0x00007f00482749b4:   cmp    r11d,r8d
  0x00007f00482749b7:   cmovl  r11d,r8d
  0x00007f00482749bb:   mov    r10d,0x400000
  0x00007f00482749c1:   cmp    r11d,r10d
  0x00007f00482749c4:   cmovg  r11d,r10d
  0x00007f00482749c8:   test   ebp,ebp
  0x00007f00482749ca:   jl     0x00007f0048274bf4           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482749d0:   mov    ecx,DWORD PTR [rbx+0x1c]
  0x00007f00482749d3:   sub    ecx,ebp                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482749d5:   cmp    ecx,0x8
  0x00007f00482749d8:   jl     0x00007f0048274c18           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482749de:   mov    rdi,QWORD PTR [rbx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482749e2:   movzx  ecx,BYTE PTR [rbx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482749e6:   movsxd rdx,ebp                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482749e9:   test   ecx,ecx
  0x00007f00482749eb:   jne    0x00007f0048274c10
  0x00007f00482749f1:   mov    r10,rdi
  0x00007f00482749f4:   mov    QWORD PTR [r10+rdx*1],r13    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482749f8:   inc    ebp                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f00482749fa:   cmp    ebp,r11d
  0x00007f00482749fd:   jl     0x00007f00482749c8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f00482749ff:   cmp    ebp,0x3ffffd
  0x00007f0048274a05:   jge    0x00007f0048274b02
  0x00007f0048274a0b:   mov    r10d,0xfa0
  0x00007f0048274a11:   mov    r8d,0x3ffffd
  0x00007f0048274a17:   sub    r8d,ebp
  0x00007f0048274a1a:   cmp    r8d,r10d
  0x00007f0048274a1d:   cmovg  r8d,r10d
  0x00007f0048274a21:   add    r8d,ebp
  0x00007f0048274a24:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f0048274a2c:   data16 data16 xchg ax,ax            ;*invokestatic convEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274a30:   mov    ecx,DWORD PTR [rbx+0x1c]
  0x00007f0048274a33:   sub    ecx,ebp                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274a35:   cmp    ecx,0x8
  0x00007f0048274a38:   jl     0x00007f0048274ba0           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274a3e:   mov    rdi,QWORD PTR [rbx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274a42:   movzx  ecx,BYTE PTR [rbx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274a46:   movsxd rsi,ebp                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274a49:   test   ecx,ecx
  0x00007f0048274a4b:   jne    0x00007f0048274b65
  0x00007f0048274a51:   mov    r11,rdi
  0x00007f0048274a54:   mov    QWORD PTR [r11+rsi*1],r13    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274a58:   mov    ecx,DWORD PTR [rbx+0x1c]
  0x00007f0048274a5b:   sub    ecx,ebp
  0x00007f0048274a5d:   dec    ecx                          ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274a5f:   cmp    ecx,0x8
  0x00007f0048274a62:   jl     0x00007f0048274b98           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274a68:   mov    rdi,QWORD PTR [rbx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274a6c:   movzx  ecx,BYTE PTR [rbx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274a70:   test   ecx,ecx
  0x00007f0048274a72:   jne    0x00007f0048274b56           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274a78:   mov    r9d,ebp
  0x00007f0048274a7b:   add    r9d,0x2                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0048274a7f:   mov    r11,rdi
  0x00007f0048274a82:   mov    QWORD PTR [r11+rsi*1+0x1],r13;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274a87:   mov    ecx,DWORD PTR [rbx+0x1c]
  0x00007f0048274a8a:   sub    ecx,ebp
  0x00007f0048274a8c:   add    ecx,0xfffffffe               ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274a8f:   cmp    ecx,0x8
  0x00007f0048274a92:   jl     0x00007f0048274ba3           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274a98:   mov    rdi,QWORD PTR [rbx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274a9c:   movzx  ecx,BYTE PTR [rbx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274aa0:   mov    rdx,rsi
  0x00007f0048274aa3:   add    rdx,0x2                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274aa7:   test   ecx,ecx
  0x00007f0048274aa9:   jne    0x00007f0048274b6b
  0x00007f0048274aaf:   mov    r11,rdi
  0x00007f0048274ab2:   mov    QWORD PTR [r11+rsi*1+0x2],r13;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274ab7:   mov    ecx,DWORD PTR [rbx+0x1c]
  0x00007f0048274aba:   sub    ecx,ebp
  0x00007f0048274abc:   add    ecx,0xfffffffd               ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274abf:   cmp    ecx,0x8
  0x00007f0048274ac2:   jl     0x00007f0048274b9b           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274ac8:   mov    rdi,QWORD PTR [rbx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274acc:   movzx  ecx,BYTE PTR [rbx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274ad0:   test   ecx,ecx
  0x00007f0048274ad2:   jne    0x00007f0048274b5c
  0x00007f0048274ad8:   mov    r11,rdi
  0x00007f0048274adb:   mov    QWORD PTR [r11+rsi*1+0x3],r13;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274ae0:   add    ebp,0x4                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0048274ae3:   cmp    ebp,r8d
  0x00007f0048274ae6:   jl     0x00007f0048274a30           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0048274aec:   mov    r11,QWORD PTR [r15+0x108]    ; ImmutableOopMap {rbx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0048274af3:   test   DWORD PTR [r11],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {poll}
  0x00007f0048274af6:   cmp    ebp,0x3ffffd
  0x00007f0048274afc:   jl     0x00007f0048274a11
  0x00007f0048274b02:   cmp    ebp,0x400000
  0x00007f0048274b08:   jge    0x00007f0048274b46
  0x00007f0048274b0a:   xchg   ax,ax                        ;*invokestatic convEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274b0c:   test   ebp,ebp
  0x00007f0048274b0e:   jl     0x00007f0048274bf4           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274b14:   mov    ecx,DWORD PTR [rbx+0x1c]
  0x00007f0048274b17:   sub    ecx,ebp                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274b19:   cmp    ecx,0x8
  0x00007f0048274b1c:   jl     0x00007f0048274c25           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274b22:   movzx  ecx,BYTE PTR [rbx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274b26:   mov    rdi,QWORD PTR [rbx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274b2a:   movsxd rdx,ebp                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274b2d:   test   ecx,ecx
  0x00007f0048274b2f:   jne    0x00007f0048274c1d
  0x00007f0048274b35:   mov    r10,rdi
  0x00007f0048274b38:   mov    QWORD PTR [r10+rdx*1],r13    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274b3c:   inc    ebp                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0048274b3e:   cmp    ebp,0x400000
  0x00007f0048274b44:   jl     0x00007f0048274b0c           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f0048274b46:   add    rsp,0x50
  0x00007f0048274b4a:   pop    rbp
  0x00007f0048274b4b:   mov    r10,QWORD PTR [r15+0x108]
  0x00007f0048274b52:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f0048274b55:   ret    
  0x00007f0048274b56:   mov    rdx,rsi
  0x00007f0048274b59:   mov    r9d,ebp
  0x00007f0048274b5c:   inc    r9d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0048274b5f:   add    rdx,0x1                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274b63:   jmp    0x00007f0048274b6b
  0x00007f0048274b65:   mov    rdx,rsi
  0x00007f0048274b68:   mov    r9d,ebp                      ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@4 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274b6b:   add    rdi,rdx                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@8 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274b6e:   mov    esi,0xffffff45
  0x00007f0048274b73:   mov    DWORD PTR [rsp+0x8],r9d
  0x00007f0048274b78:   mov    QWORD PTR [rsp+0x10],rbx
  0x00007f0048274b7d:   mov    QWORD PTR [rsp+0x18],rbx
  0x00007f0048274b82:   mov    QWORD PTR [rsp+0x20],rdi
  0x00007f0048274b87:   mov    QWORD PTR [rsp+0x28],r13
  0x00007f0048274b8c:   mov    DWORD PTR [rsp+0xc],ecx
  0x00007f0048274b90:   data16 xchg ax,ax
  0x00007f0048274b93:   call   0x00007f004078ae80           ; ImmutableOopMap {[16]=Oop [24]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.misc.Unsafe::convEndian@4 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f0048274b98:   mov    r9d,ebp
  0x00007f0048274b9b:   inc    r9d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0048274b9e:   jmp    0x00007f0048274ba3
  0x00007f0048274ba0:   mov    r9d,ebp                      ;*synchronization entry
                                                            ; - java.nio.Buffer::checkIndex@-1 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048274ba3:   mov    esi,0xffffff45
  0x00007f0048274ba8:   mov    QWORD PTR [rsp+0x10],rbx
  0x00007f0048274bad:   mov    QWORD PTR [rsp+0x18],r13
  0x00007f0048274bb2:   mov    QWORD PTR [rsp+0x20],rbx
  0x00007f0048274bb7:   mov    DWORD PTR [rsp+0xc],r9d
  0x00007f0048274bbc:   mov    DWORD PTR [rsp+0x30],ecx
  0x00007f0048274bc0:   data16 xchg ax,ax
  0x00007f0048274bc3:   call   0x00007f004078ae80           ; ImmutableOopMap {[16]=Oop [32]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f0048274bc8:   xor    ebx,ebx
  0x00007f0048274bca:   mov    esi,0xffffffbe
  0x00007f0048274bcf:   mov    QWORD PTR [rsp],r13
  0x00007f0048274bd3:   mov    QWORD PTR [rsp+0x8],rbx
  0x00007f0048274bd8:   data16 xchg ax,ax
  0x00007f0048274bdb:   call   0x00007f004078ae80           ; ImmutableOopMap {[8]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f0048274be0:   mov    esi,0xffffff8d
  0x00007f0048274be5:   mov    QWORD PTR [rsp],r13
  0x00007f0048274be9:   mov    QWORD PTR [rsp+0x8],rbx
  0x00007f0048274bee:   nop
  0x00007f0048274bef:   call   0x00007f004078ae80           ; ImmutableOopMap {[8]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f0048274bf4:   mov    esi,0xffffff45
  0x00007f0048274bf9:   mov    QWORD PTR [rsp+0x10],rbx
  0x00007f0048274bfe:   mov    QWORD PTR [rsp+0x18],r13
  0x00007f0048274c03:   mov    QWORD PTR [rsp+0x20],rbx
  0x00007f0048274c08:   data16 xchg ax,ax
  0x00007f0048274c0b:   call   0x00007f004078ae80           ; ImmutableOopMap {[16]=Oop [32]=Oop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@1 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f0048274c10:   mov    r9d,ebp
  0x00007f0048274c13:   jmp    0x00007f0048274b6b
  0x00007f0048274c18:   mov    r9d,ebp
  0x00007f0048274c1b:   jmp    0x00007f0048274ba3
  0x00007f0048274c1d:   mov    r9d,ebp
  0x00007f0048274c20:   jmp    0x00007f0048274b6b
  0x00007f0048274c25:   mov    r9d,ebp
  0x00007f0048274c28:   jmp    0x00007f0048274ba3
  0x00007f0048274c2d:   hlt    
  0x00007f0048274c2e:   hlt    
  0x00007f0048274c2f:   hlt    
  0x00007f0048274c30:   hlt    
  0x00007f0048274c31:   hlt    
  0x00007f0048274c32:   hlt    
  0x00007f0048274c33:   hlt    
  0x00007f0048274c34:   hlt    
  0x00007f0048274c35:   hlt    
  0x00007f0048274c36:   hlt    
  0x00007f0048274c37:   hlt    
  0x00007f0048274c38:   hlt    
  0x00007f0048274c39:   hlt    
  0x00007f0048274c3a:   hlt    
  0x00007f0048274c3b:   hlt    
  0x00007f0048274c3c:   hlt    
  0x00007f0048274c3d:   hlt    
  0x00007f0048274c3e:   hlt    
  0x00007f0048274c3f:   hlt    
[Exception Handler]
  0x00007f0048274c40:   jmp    0x00007f00407eb300           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f0048274c45:   call   0x00007f0048274c4a
  0x00007f0048274c4a:   sub    QWORD PTR [rsp],0x5
  0x00007f0048274c4f:   jmp    0x00007f00407cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007f0048274c54:   hlt    
  0x00007f0048274c55:   hlt    
  0x00007f0048274c56:   hlt    
  0x00007f0048274c57:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     358  498       4       me.serce.BufferAccessBenchmark::putLong (37 bytes)
 total in heap  [0x00007f0048275290,0x00007f0048275c08] = 2424
 relocation     [0x00007f00482753f0,0x00007f0048275408] = 24
 main code      [0x00007f0048275420,0x00007f0048275680] = 608
 stub code      [0x00007f0048275680,0x00007f0048275698] = 24
 oops           [0x00007f0048275698,0x00007f00482756a8] = 16
 metadata       [0x00007f00482756a8,0x00007f00482756e8] = 64
 scopes data    [0x00007f00482756e8,0x00007f0048275850] = 360
 scopes pcs     [0x00007f0048275850,0x00007f0048275bf0] = 928
 dependencies   [0x00007f0048275bf0,0x00007f0048275bf8] = 8
 nul chk table  [0x00007f0048275bf8,0x00007f0048275c08] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f003c783c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  # this:     rsi:rsi   = 'me/serce/BufferAccessBenchmark'
  # parm0:    rdx:rdx   = 'org/openjdk/jmh/infra/Blackhole'
  #           [sp+0x60]  (sp of caller)
  0x00007f0048275420:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f0048275424:   shl    r10,0x3
  0x00007f0048275428:   movabs r12,0x800000000
  0x00007f0048275432:   add    r10,r12
  0x00007f0048275435:   xor    r12,r12
  0x00007f0048275438:   cmp    rax,r10
  0x00007f004827543b:   jne    0x00007f00407cd580           ;   {runtime_call ic_miss_stub}
  0x00007f0048275441:   data16 xchg ax,ax
  0x00007f0048275444:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f004827544c:   data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f0048275450:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f0048275457:   push   rbp
  0x00007f0048275458:   sub    rsp,0x50                     ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
  0x00007f004827545c:   mov    rdi,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@1 (line 64)
  0x00007f0048275460:   mov    ebp,DWORD PTR [rsi+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@6 (line 65)
  0x00007f0048275463:   mov    r10d,DWORD PTR [rbp+0x8]     ; implicit exception: dispatches to 0x00007f0048275654
  0x00007f0048275467:   cmp    r10d,0x2b613                 ;   {metadata('java/nio/DirectByteBuffer')}
  0x00007f004827546e:   jne    0x00007f0048275654
  0x00007f0048275474:   mov    rdx,rbp                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048275477:   mov    r10d,DWORD PTR [rdx+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f004827547b:   xor    r11d,r11d
  0x00007f004827547e:   cmp    r10d,0x8
  0x00007f0048275482:   jl     0x00007f004827562f           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048275488:   mov    r10,QWORD PTR [rdx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f004827548c:   movzx  ecx,BYTE PTR [rdx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048275490:   test   ecx,ecx
  0x00007f0048275492:   jne    0x00007f0048275664
  0x00007f0048275498:   mov    QWORD PTR [r10],rdi          ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f004827549b:   mov    r9d,0x1
  0x00007f00482754a1:   mov    r8d,0xfa0
  0x00007f00482754a7:   mov    ebx,0x3ffffd
  0x00007f00482754ac:   sub    ebx,r9d
  0x00007f00482754af:   cmp    ebx,r8d
  0x00007f00482754b2:   cmovg  ebx,r8d
  0x00007f00482754b6:   add    ebx,r9d
  0x00007f00482754b9:   nop    DWORD PTR [rax+0x0]          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 67)
  0x00007f00482754c0:   mov    r10d,DWORD PTR [rdx+0x1c]
  0x00007f00482754c4:   sub    r10d,r9d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482754c7:   cmp    r10d,0x8
  0x00007f00482754cb:   jl     0x00007f004827562c           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482754d1:   mov    r10,QWORD PTR [rdx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482754d5:   movzx  ecx,BYTE PTR [rdx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482754d9:   movsxd rax,r9d                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482754dc:   test   ecx,ecx
  0x00007f00482754de:   jne    0x00007f00482755f9           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482754e4:   mov    r11d,r9d
  0x00007f00482754e7:   inc    r11d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f00482754ea:   mov    QWORD PTR [r10+rax*1],rdi    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482754ee:   mov    r10d,DWORD PTR [rdx+0x1c]
  0x00007f00482754f2:   sub    r10d,r9d
  0x00007f00482754f5:   dec    r10d                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482754f8:   cmp    r10d,0x8
  0x00007f00482754fc:   jl     0x00007f004827562f           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048275502:   mov    r10,QWORD PTR [rdx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048275506:   movzx  ecx,BYTE PTR [rdx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f004827550a:   test   ecx,ecx
  0x00007f004827550c:   jne    0x00007f00482755f0           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048275512:   mov    r11d,r9d
  0x00007f0048275515:   add    r11d,0x2                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0048275519:   mov    QWORD PTR [r10+rax*1+0x1],rdi;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f004827551e:   mov    r10d,DWORD PTR [rdx+0x1c]
  0x00007f0048275522:   sub    r10d,r9d
  0x00007f0048275525:   add    r10d,0xfffffffe              ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048275529:   cmp    r10d,0x8
  0x00007f004827552d:   jl     0x00007f004827562f           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048275533:   mov    r10,QWORD PTR [rdx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048275537:   movzx  ecx,BYTE PTR [rdx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f004827553b:   mov    rsi,rax
  0x00007f004827553e:   add    rsi,0x2                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048275542:   test   ecx,ecx
  0x00007f0048275544:   jne    0x00007f00482755ff           ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f004827554a:   mov    r11d,r9d
  0x00007f004827554d:   add    r11d,0x3                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0048275551:   mov    QWORD PTR [r10+rax*1+0x2],rdi;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048275556:   mov    r10d,DWORD PTR [rdx+0x1c]
  0x00007f004827555a:   sub    r10d,r9d
  0x00007f004827555d:   add    r10d,0xfffffffd              ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048275561:   cmp    r10d,0x8
  0x00007f0048275565:   jl     0x00007f004827562f           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f004827556b:   mov    r10,QWORD PTR [rdx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f004827556f:   movzx  ecx,BYTE PTR [rdx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048275573:   test   ecx,ecx
  0x00007f0048275575:   jne    0x00007f00482755f3
  0x00007f0048275577:   mov    QWORD PTR [r10+rax*1+0x3],rdi;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f004827557c:   add    r9d,0x4                      ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f0048275580:   cmp    r9d,ebx
  0x00007f0048275583:   jl     0x00007f00482754c0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0048275589:   mov    r10,QWORD PTR [r15+0x108]    ; ImmutableOopMap {rdx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f0048275590:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {poll}
  0x00007f0048275593:   cmp    r9d,0x3ffffd
  0x00007f004827559a:   jl     0x00007f00482754a7
  0x00007f00482755a0:   cmp    r9d,0x400000
  0x00007f00482755a7:   jge    0x00007f00482755e0
  0x00007f00482755a9:   data16 xchg ax,ax                   ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 67)
  0x00007f00482755ac:   mov    r10d,DWORD PTR [rdx+0x1c]
  0x00007f00482755b0:   sub    r10d,r9d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482755b3:   cmp    r10d,0x8
  0x00007f00482755b7:   jl     0x00007f004827566d           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482755bd:   movzx  ecx,BYTE PTR [rdx+0x29]      ;*getfield bigEndian {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::putLong@11 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482755c1:   mov    r10,QWORD PTR [rdx+0x10]     ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@1 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482755c5:   movsxd rsi,r9d                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482755c8:   test   ecx,ecx
  0x00007f00482755ca:   jne    0x00007f0048275668
  0x00007f00482755d0:   mov    QWORD PTR [r10+rsi*1],rdi    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482755d4:   inc    r9d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f00482755d7:   cmp    r9d,0x400000
  0x00007f00482755de:   jl     0x00007f00482755ac           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f00482755e0:   add    rsp,0x50
  0x00007f00482755e4:   pop    rbp
  0x00007f00482755e5:   mov    r10,QWORD PTR [r15+0x108]
  0x00007f00482755ec:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f00482755ef:   ret    
  0x00007f00482755f0:   mov    rsi,rax
  0x00007f00482755f3:   add    rsi,0x1                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@5 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f00482755f7:   jmp    0x00007f00482755ff
  0x00007f00482755f9:   mov    rsi,rax
  0x00007f00482755fc:   mov    r11d,r9d
  0x00007f00482755ff:   add    r10,rsi                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.DirectByteBuffer::ix@8 (line 260)
                                                            ; - java.nio.DirectByteBuffer::putLong@9 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f0048275602:   mov    esi,0xffffff45
  0x00007f0048275607:   mov    DWORD PTR [rsp+0x8],r11d
  0x00007f004827560c:   mov    QWORD PTR [rsp+0x10],rdx
  0x00007f0048275611:   mov    QWORD PTR [rsp+0x18],rdx
  0x00007f0048275616:   mov    QWORD PTR [rsp+0x20],r10
  0x00007f004827561b:   mov    QWORD PTR [rsp+0x28],rdi
  0x00007f0048275620:   mov    DWORD PTR [rsp+0xc],ecx
  0x00007f0048275624:   data16 xchg ax,ax
  0x00007f0048275627:   call   0x00007f004078ae80           ; ImmutableOopMap {[16]=Oop [24]=Oop }
                                                            ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.internal.misc.Unsafe::convEndian@4 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.DirectByteBuffer::putLong@14 (line 942)
                                                            ; - java.nio.DirectByteBuffer::putLong@13 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f004827562c:   mov    r11d,r9d
  0x00007f004827562f:   mov    esi,0xffffff45
  0x00007f0048275634:   mov    QWORD PTR [rsp+0x10],rdx
  0x00007f0048275639:   mov    QWORD PTR [rsp+0x18],rdi
  0x00007f004827563e:   mov    QWORD PTR [rsp+0x20],rdx
  0x00007f0048275643:   mov    DWORD PTR [rsp+0xc],r11d
  0x00007f0048275648:   mov    DWORD PTR [rsp+0x30],r10d
  0x00007f004827564d:   xchg   ax,ax
  0x00007f004827564f:   call   0x00007f004078ae80           ; ImmutableOopMap {[16]=Oop [32]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.DirectByteBuffer::putLong@6 (line 963)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f0048275654:   mov    esi,0xffffff76
  0x00007f0048275659:   mov    QWORD PTR [rsp],rdi
  0x00007f004827565d:   xchg   ax,ax
  0x00007f004827565f:   call   0x00007f004078ae80           ; ImmutableOopMap {rbp=NarrowOop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@18 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f0048275664:   xor    esi,esi
  0x00007f0048275666:   jmp    0x00007f00482755ff
  0x00007f0048275668:   mov    r11d,r9d
  0x00007f004827566b:   jmp    0x00007f00482755ff
  0x00007f004827566d:   mov    r11d,r9d
  0x00007f0048275670:   jmp    0x00007f004827562f
  0x00007f0048275672:   hlt    
  0x00007f0048275673:   hlt    
  0x00007f0048275674:   hlt    
  0x00007f0048275675:   hlt    
  0x00007f0048275676:   hlt    
  0x00007f0048275677:   hlt    
  0x00007f0048275678:   hlt    
  0x00007f0048275679:   hlt    
  0x00007f004827567a:   hlt    
  0x00007f004827567b:   hlt    
  0x00007f004827567c:   hlt    
  0x00007f004827567d:   hlt    
  0x00007f004827567e:   hlt    
  0x00007f004827567f:   hlt    
[Exception Handler]
  0x00007f0048275680:   jmp    0x00007f00407eb300           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f0048275685:   call   0x00007f004827568a
  0x00007f004827568a:   sub    QWORD PTR [rsp],0x5
  0x00007f004827568f:   jmp    0x00007f00407cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007f0048275694:   hlt    
  0x00007f0048275695:   hlt    
  0x00007f0048275696:   hlt    
  0x00007f0048275697:   hlt    
--------------------------------------------------------------------------------
4870627.488 ns/op
Iteration   1: 4832487.703 ns/op
Iteration   2: 4832870.458 ns/op
Iteration   3: 4832292.066 ns/op


Result "me.serce.BufferAccessBenchmark.putLong":
  4832550.076 ±(99.9%) 5367.256 ns/op [Average]
  (min, avg, max) = (4832292.066, 4832550.076, 4832870.458), stdev = 294.197
  CI (99.9%): [4827182.820, 4837917.332] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 13.0.4, OpenJDK 64-Bit Server VM, 13.0.4+8-MTS
# VM invoker: /usr/lib/jvm/zulu-13-amd64/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:PrintAssemblyOptions=intel -XX:CompileCommand=print,*BufferAccessBenchmark.putLong*
# Warmup: 1 iterations, 10 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: me.serce.BufferAccessBenchmark.putLong
# Parameters: (bufferType = heap)

# Run progress: 66.67% complete, ETA 00:00:40
# Fork: 1 of 1
CompileCommand: print *BufferAccessBenchmark.putLong*
OpenJDK 64-Bit Server VM warning: printing of assembly code is enabled; turning on DebugNonSafepoints to gain additional output
# Warmup Iteration   1: 
============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     275  500 %     3       me.serce.BufferAccessBenchmark::putLong @ 14 (37 bytes)
 total in heap  [0x00007f3eb0dd2c90,0x00007f3eb0dd32f0] = 1632
 relocation     [0x00007f3eb0dd2df0,0x00007f3eb0dd2e38] = 72
 main code      [0x00007f3eb0dd2e40,0x00007f3eb0dd3100] = 704
 stub code      [0x00007f3eb0dd3100,0x00007f3eb0dd3140] = 64
 oops           [0x00007f3eb0dd3140,0x00007f3eb0dd3148] = 8
 metadata       [0x00007f3eb0dd3148,0x00007f3eb0dd3150] = 8
 scopes data    [0x00007f3eb0dd3150,0x00007f3eb0dd31d8] = 136
 scopes pcs     [0x00007f3eb0dd31d8,0x00007f3eb0dd32d8] = 256
 dependencies   [0x00007f3eb0dd32d8,0x00007f3eb0dd32e0] = 8
 nul chk table  [0x00007f3eb0dd32e0,0x00007f3eb0dd32f0] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f3ecd023c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f3eb0dd2e40:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f3eb0dd2e44:   shl    r10,0x3
  0x00007f3eb0dd2e48:   movabs r12,0x800000000
  0x00007f3eb0dd2e52:   add    r10,r12
  0x00007f3eb0dd2e55:   xor    r12,r12
  0x00007f3eb0dd2e58:   cmp    r10,rax
  0x00007f3eb0dd2e5b:   jne    0x00007f3eb07cd580           ;   {runtime_call ic_miss_stub}
  0x00007f3eb0dd2e61:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f3eb0dd2e6c:   data16 data16 xchg ax,ax
  0x00007f3eb0dd2e70:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f3eb0dd2e7b:   data16 data16 xchg ax,ax
  0x00007f3eb0dd2e7f:   nop
[Verified Entry Point]
  0x00007f3eb0dd2e80:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f3eb0dd2e87:   push   rbp
  0x00007f3eb0dd2e88:   sub    rsp,0x60
  0x00007f3eb0dd2e8c:   movabs rdi,0x7f3ecd05c200           ;   {metadata(method data for {method} {0x00007f3ecd023c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f3eb0dd2e96:   mov    ebx,DWORD PTR [rdi+0x13c]
  0x00007f3eb0dd2e9c:   add    ebx,0x8
  0x00007f3eb0dd2e9f:   mov    DWORD PTR [rdi+0x13c],ebx
  0x00007f3eb0dd2ea5:   and    ebx,0x1ff8
  0x00007f3eb0dd2eab:   cmp    ebx,0x0
  0x00007f3eb0dd2eae:   je     0x00007f3eb0dd307a           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@0 (line 64)
  0x00007f3eb0dd2eb4:   mov    rdi,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@1 (line 64)
  0x00007f3eb0dd2eb8:   mov    esi,DWORD PTR [rsi+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@6 (line 65)
  0x00007f3eb0dd2ebb:   mov    ebx,0x0
  0x00007f3eb0dd2ec0:   jmp    0x00007f3eb0dd2fe6           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f3eb0dd2ec5:   data16 xchg ax,ax
  0x00007f3eb0dd2ec8:   cmp    rax,QWORD PTR [rsi]          ; implicit exception: dispatches to 0x00007f3eb0dd309b
  0x00007f3eb0dd2ecb:   mov    rdx,rsi
  0x00007f3eb0dd2ece:   movabs rcx,0x7f3ecd05c200           ;   {metadata(method data for {method} {0x00007f3ecd023c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f3eb0dd2ed8:   mov    edx,DWORD PTR [rdx+0x8]
  0x00007f3eb0dd2edb:   shl    rdx,0x3
  0x00007f3eb0dd2edf:   movabs r12,0x800000000
  0x00007f3eb0dd2ee9:   add    rdx,r12
  0x00007f3eb0dd2eec:   xor    r12,r12
  0x00007f3eb0dd2eef:   cmp    rdx,QWORD PTR [rcx+0x1b0]
  0x00007f3eb0dd2ef6:   jne    0x00007f3eb0dd2f05
  0x00007f3eb0dd2ef8:   add    QWORD PTR [rcx+0x1b8],0x1
  0x00007f3eb0dd2f00:   jmp    0x00007f3eb0dd2f6b
  0x00007f3eb0dd2f05:   cmp    rdx,QWORD PTR [rcx+0x1c0]
  0x00007f3eb0dd2f0c:   jne    0x00007f3eb0dd2f1b
  0x00007f3eb0dd2f0e:   add    QWORD PTR [rcx+0x1c8],0x1
  0x00007f3eb0dd2f16:   jmp    0x00007f3eb0dd2f6b
  0x00007f3eb0dd2f1b:   cmp    QWORD PTR [rcx+0x1b0],0x0
  0x00007f3eb0dd2f26:   jne    0x00007f3eb0dd2f3f
  0x00007f3eb0dd2f28:   mov    QWORD PTR [rcx+0x1b0],rdx
  0x00007f3eb0dd2f2f:   mov    QWORD PTR [rcx+0x1b8],0x1
  0x00007f3eb0dd2f3a:   jmp    0x00007f3eb0dd2f6b
  0x00007f3eb0dd2f3f:   cmp    QWORD PTR [rcx+0x1c0],0x0
  0x00007f3eb0dd2f4a:   jne    0x00007f3eb0dd2f63
  0x00007f3eb0dd2f4c:   mov    QWORD PTR [rcx+0x1c0],rdx
  0x00007f3eb0dd2f53:   mov    QWORD PTR [rcx+0x1c8],0x1
  0x00007f3eb0dd2f5e:   jmp    0x00007f3eb0dd2f6b
  0x00007f3eb0dd2f63:   add    QWORD PTR [rcx+0x1a0],0x1
  0x00007f3eb0dd2f6b:   mov    rdx,rbx
  0x00007f3eb0dd2f6e:   mov    rcx,rdi
  0x00007f3eb0dd2f71:   mov    rax,rsi
  0x00007f3eb0dd2f74:   mov    rsi,rax                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb0dd2f77:   mov    QWORD PTR [rsp+0x48],rdi
  0x00007f3eb0dd2f7c:   mov    QWORD PTR [rsp+0x40],rax
  0x00007f3eb0dd2f81:   mov    DWORD PTR [rsp+0x2c],ebx
  0x00007f3eb0dd2f85:   movabs rax,0x8002eae40
  0x00007f3eb0dd2f8f:   call   0x00007f3eb8274ca0           ; ImmutableOopMap {[64]=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {virtual_call}
  0x00007f3eb0dd2f94:   mov    ebx,DWORD PTR [rsp+0x2c]
  0x00007f3eb0dd2f98:   inc    ebx
  0x00007f3eb0dd2f9a:   movabs rsi,0x7f3ecd05c200           ;   {metadata(method data for {method} {0x00007f3ecd023c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f3eb0dd2fa4:   mov    edi,DWORD PTR [rsi+0x140]
  0x00007f3eb0dd2faa:   add    edi,0x8
  0x00007f3eb0dd2fad:   mov    DWORD PTR [rsi+0x140],edi
  0x00007f3eb0dd2fb3:   and    edi,0xfff8
  0x00007f3eb0dd2fb9:   cmp    edi,0x0
  0x00007f3eb0dd2fbc:   je     0x00007f3eb0dd30a0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f3eb0dd2fc2:   mov    r10,QWORD PTR [r15+0x108]    ; ImmutableOopMap {[64]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f3eb0dd2fc9:   test   DWORD PTR [r10],eax          ;   {poll}
  0x00007f3eb0dd2fcc:   movabs rsi,0x7f3ecd05c200           ;   {metadata(method data for {method} {0x00007f3ecd023c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f3eb0dd2fd6:   inc    DWORD PTR [rsi+0x1d8]        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f3eb0dd2fdc:   mov    rsi,QWORD PTR [rsp+0x40]
  0x00007f3eb0dd2fe1:   mov    rdi,QWORD PTR [rsp+0x48]
  0x00007f3eb0dd2fe6:   cmp    ebx,0x400000
  0x00007f3eb0dd2fec:   movabs rdx,0x7f3ecd05c200           ;   {metadata(method data for {method} {0x00007f3ecd023c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f3eb0dd2ff6:   movabs rcx,0x190
  0x00007f3eb0dd3000:   jl     0x00007f3eb0dd3010
  0x00007f3eb0dd3006:   movabs rcx,0x180
  0x00007f3eb0dd3010:   mov    rax,QWORD PTR [rdx+rcx*1]
  0x00007f3eb0dd3014:   lea    rax,[rax+0x1]
  0x00007f3eb0dd3018:   mov    QWORD PTR [rdx+rcx*1],rax
  0x00007f3eb0dd301c:   jl     0x00007f3eb0dd2ec8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f3eb0dd3022:   add    rsp,0x60
  0x00007f3eb0dd3026:   pop    rbp
  0x00007f3eb0dd3027:   mov    r10,QWORD PTR [r15+0x108]
  0x00007f3eb0dd302e:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f3eb0dd3031:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@36 (line 69)
  0x00007f3eb0dd3032:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f3eb0dd3039:   push   rbp
  0x00007f3eb0dd303a:   sub    rsp,0x60
  0x00007f3eb0dd303e:   mov    rbx,QWORD PTR [rsi+0x10]
  0x00007f3eb0dd3042:   mov    rax,QWORD PTR [rsi+0x8]
  0x00007f3eb0dd3046:   mov    edx,DWORD PTR [rsi]
  0x00007f3eb0dd3048:   mov    rdi,rsi
  0x00007f3eb0dd304b:   mov    QWORD PTR [rsp+0x38],rbx
  0x00007f3eb0dd3050:   mov    QWORD PTR [rsp+0x30],rax
  0x00007f3eb0dd3055:   mov    DWORD PTR [rsp+0x28],edx
  0x00007f3eb0dd3059:   call   0x00007f3ed0295b80           ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x00007f3eb0dd305e:   mov    edx,DWORD PTR [rsp+0x28]
  0x00007f3eb0dd3062:   mov    rbx,rdx
  0x00007f3eb0dd3065:   mov    rax,QWORD PTR [rsp+0x30]
  0x00007f3eb0dd306a:   mov    rsi,rax
  0x00007f3eb0dd306d:   mov    rdx,QWORD PTR [rsp+0x38]
  0x00007f3eb0dd3072:   mov    rdi,rdx
  0x00007f3eb0dd3075:   jmp    0x00007f3eb0dd2fe6
  0x00007f3eb0dd307a:   movabs r10,0x7f3ecd023c98           ;   {metadata({method} {0x00007f3ecd023c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f3eb0dd3084:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f3eb0dd3089:   mov    QWORD PTR [rsp],0xffffffffffffffff
  0x00007f3eb0dd3091:   call   0x00007f3eb0881500           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f3eb0dd3096:   jmp    0x00007f3eb0dd2eb4
  0x00007f3eb0dd309b:   call   0x00007f3eb07ed720           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f3eb0dd30a0:   movabs r10,0x7f3ecd023c98           ;   {metadata({method} {0x00007f3ecd023c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark')}
  0x00007f3eb0dd30aa:   mov    QWORD PTR [rsp+0x8],r10
  0x00007f3eb0dd30af:   mov    QWORD PTR [rsp],0x21
  0x00007f3eb0dd30b7:   call   0x00007f3eb0881500           ; ImmutableOopMap {[64]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f3eb0dd30bc:   jmp    0x00007f3eb0dd2fc2
  0x00007f3eb0dd30c1:   nop
  0x00007f3eb0dd30c2:   nop
  0x00007f3eb0dd30c3:   mov    rax,QWORD PTR [r15+0x3f0]
  0x00007f3eb0dd30ca:   movabs r10,0x0
  0x00007f3eb0dd30d4:   mov    QWORD PTR [r15+0x3f0],r10
  0x00007f3eb0dd30db:   movabs r10,0x0
  0x00007f3eb0dd30e5:   mov    QWORD PTR [r15+0x3f8],r10
  0x00007f3eb0dd30ec:   add    rsp,0x60
  0x00007f3eb0dd30f0:   pop    rbp
  0x00007f3eb0dd30f1:   jmp    0x00007f3eb07ee600           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f3eb0dd30f6:   hlt    
  0x00007f3eb0dd30f7:   hlt    
  0x00007f3eb0dd30f8:   hlt    
  0x00007f3eb0dd30f9:   hlt    
  0x00007f3eb0dd30fa:   hlt    
  0x00007f3eb0dd30fb:   hlt    
  0x00007f3eb0dd30fc:   hlt    
  0x00007f3eb0dd30fd:   hlt    
  0x00007f3eb0dd30fe:   hlt    
  0x00007f3eb0dd30ff:   hlt    
[Stub Code]
  0x00007f3eb0dd3100:   nop    DWORD PTR [rax+rax*1+0x0]    ;   {no_reloc}
  0x00007f3eb0dd3105:   movabs rbx,0x0                      ;   {static_stub}
  0x00007f3eb0dd310f:   jmp    0x00007f3eb0dd310f           ;   {runtime_call}
[Exception Handler]
  0x00007f3eb0dd3114:   call   0x00007f3eb0880200           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f3eb0dd3119:   movabs rdi,0x7f3ed05b7d72           ;   {external_word}
  0x00007f3eb0dd3123:   and    rsp,0xfffffffffffffff0
  0x00007f3eb0dd3127:   call   0x00007f3ed0077880           ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007f3eb0dd312c:   hlt    
[Deopt Handler Code]
  0x00007f3eb0dd312d:   movabs r10,0x7f3eb0dd312d           ;   {section_word}
  0x00007f3eb0dd3137:   push   r10
  0x00007f3eb0dd3139:   jmp    0x00007f3eb07cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007f3eb0dd313e:   hlt    
  0x00007f3eb0dd313f:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     294  501 %     4       me.serce.BufferAccessBenchmark::putLong @ 14 (37 bytes)
 total in heap  [0x00007f3eb8275010,0x00007f3eb8275848] = 2104
 relocation     [0x00007f3eb8275170,0x00007f3eb8275190] = 32
 main code      [0x00007f3eb82751a0,0x00007f3eb82754e0] = 832
 stub code      [0x00007f3eb82754e0,0x00007f3eb82754f8] = 24
 oops           [0x00007f3eb82754f8,0x00007f3eb8275508] = 16
 metadata       [0x00007f3eb8275508,0x00007f3eb8275538] = 48
 scopes data    [0x00007f3eb8275538,0x00007f3eb8275630] = 248
 scopes pcs     [0x00007f3eb8275630,0x00007f3eb8275840] = 528
 dependencies   [0x00007f3eb8275840,0x00007f3eb8275848] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f3ecd023c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f3eb82751a0:   call   0x00007f3ed01ac230           ;   {runtime_call os::breakpoint()}
  0x00007f3eb82751a5:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f3eb82751b0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f3eb82751b7:   push   rbp
  0x00007f3eb82751b8:   sub    rsp,0x50
  0x00007f3eb82751bc:   mov    rbx,QWORD PTR [rsi+0x8]
  0x00007f3eb82751c0:   mov    r13,QWORD PTR [rsi+0x10]
  0x00007f3eb82751c4:   mov    r14d,DWORD PTR [rsi]
  0x00007f3eb82751c7:   mov    rdi,rsi
  0x00007f3eb82751ca:   movabs r10,0x7f3ed0295b80
  0x00007f3eb82751d4:   call   r10
  0x00007f3eb82751d7:   test   rbx,rbx
  0x00007f3eb82751da:   je     0x00007f3eb82754b0
  0x00007f3eb82751e0:   mov    r11d,DWORD PTR [rbx+0x8]
  0x00007f3eb82751e4:   movabs r10,0x800000000
  0x00007f3eb82751ee:   lea    r10,[r10+r11*8]
  0x00007f3eb82751f2:   mov    r10,QWORD PTR [r10+0x40]
  0x00007f3eb82751f6:   movabs r11,0x800157c50              ;   {metadata('java/nio/ByteBuffer')}
  0x00007f3eb8275200:   cmp    r10,r11
  0x00007f3eb8275203:   jne    0x00007f3eb82754c8           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f3eb8275209:   mov    r10d,DWORD PTR [rbx+0x8]
  0x00007f3eb827520d:   cmp    r10d,0x5d5c8                 ;   {metadata('java/nio/HeapByteBuffer')}
  0x00007f3eb8275214:   jne    0x00007f3eb82754b2
  0x00007f3eb827521a:   mov    rax,rbx                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb827521d:   movzx  r10d,BYTE PTR [rax+0x29]
  0x00007f3eb8275222:   test   r10d,r10d
  0x00007f3eb8275225:   je     0x00007f3eb82754b2
  0x00007f3eb827522b:   mov    ebp,DWORD PTR [rax+0x2c]     ;*getfield hb {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::putLong@4 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb827522e:   test   ebp,ebp
  0x00007f3eb8275230:   je     0x00007f3eb82754b2
  0x00007f3eb8275236:   cmp    r14d,0x400000
  0x00007f3eb827523d:   jge    0x00007f3eb8275450           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f3eb8275243:   mov    r8,QWORD PTR [rax+0x10]
  0x00007f3eb8275247:   mov    esi,DWORD PTR [rax+0x1c]     ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb827524a:   mov    rcx,r13
  0x00007f3eb827524d:   bswap  rcx                          ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@12 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.HeapByteBuffer::putLong@24 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275250:   mov    r10d,esi
  0x00007f3eb8275253:   neg    r10d
  0x00007f3eb8275256:   mov    r11d,r14d
  0x00007f3eb8275259:   inc    r11d
  0x00007f3eb827525c:   mov    r9d,r10d
  0x00007f3eb827525f:   sar    r9d,0x1f
  0x00007f3eb8275263:   and    r9d,r10d
  0x00007f3eb8275266:   mov    rdx,rbp                      ;*getfield hb {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::putLong@4 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275269:   mov    rdi,rdx
  0x00007f3eb827526c:   add    rdi,r8
  0x00007f3eb827526f:   xor    r8d,r8d
  0x00007f3eb8275272:   cmp    r11d,r8d
  0x00007f3eb8275275:   cmovl  r11d,r8d
  0x00007f3eb8275279:   mov    r8d,0x80000001
  0x00007f3eb827527f:   sub    r8d,r9d
  0x00007f3eb8275282:   cmp    r11d,r8d
  0x00007f3eb8275285:   cmovl  r11d,r8d
  0x00007f3eb8275289:   mov    r8d,0x400000
  0x00007f3eb827528f:   cmp    r11d,r8d
  0x00007f3eb8275292:   cmovg  r11d,r8d
  0x00007f3eb8275296:   test   r14d,r14d
  0x00007f3eb8275299:   jl     0x00007f3eb8275468           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb827529f:   mov    r9d,esi
  0x00007f3eb82752a2:   sub    r9d,r14d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb82752a5:   cmp    r9d,0x8
  0x00007f3eb82752a9:   jl     0x00007f3eb827548c           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb82752af:   movsxd r9,r14d
  0x00007f3eb82752b2:   mov    QWORD PTR [rdi+r9*1],rcx     ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.HeapByteBuffer::putLong@24 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb82752b6:   inc    r14d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f3eb82752b9:   cmp    r14d,r11d
  0x00007f3eb82752bc:   jl     0x00007f3eb8275296           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f3eb82752be:   mov    r11d,0x80000000
  0x00007f3eb82752c4:   mov    r9d,0xfffffff8
  0x00007f3eb82752ca:   sub    r9d,r10d
  0x00007f3eb82752cd:   inc    r9d
  0x00007f3eb82752d0:   cmp    r9d,r8d
  0x00007f3eb82752d3:   cmovg  r9d,r8d
  0x00007f3eb82752d7:   mov    r8d,r9d
  0x00007f3eb82752da:   add    r8d,0xfffffff1
  0x00007f3eb82752de:   cmp    r9d,r8d
  0x00007f3eb82752e1:   cmovl  r8d,r11d
  0x00007f3eb82752e5:   cmp    r14d,r8d
  0x00007f3eb82752e8:   jge    0x00007f3eb8275423
  0x00007f3eb82752ee:   mov    r11d,0x3e80
  0x00007f3eb82752f4:   jmp    0x00007f3eb8275313           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f3eb82752f6:   mov    r10,QWORD PTR [r15+0x108]    ; ImmutableOopMap {rdi=Derived_oop_rdx rdx=Oop rax=Oop rbp=NarrowOop xmm0=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f3eb82752fd:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {poll}
  0x00007f3eb8275300:   cmp    r14d,r8d
  0x00007f3eb8275303:   jge    0x00007f3eb8275419
  0x00007f3eb8275309:   vmovq  rbx,xmm0
  0x00007f3eb827530e:   vmovq  r13,xmm1
  0x00007f3eb8275313:   mov    r9d,r8d
  0x00007f3eb8275316:   sub    r9d,r14d
  0x00007f3eb8275319:   cmp    r9d,r11d
  0x00007f3eb827531c:   cmovg  r9d,r11d
  0x00007f3eb8275320:   add    r9d,r14d
  0x00007f3eb8275323:   vmovq  xmm0,rbx
  0x00007f3eb8275328:   vmovq  xmm1,r13
  0x00007f3eb827532d:   data16 xchg ax,ax                   ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275330:   mov    ebx,r14d
  0x00007f3eb8275333:   add    ebx,0xf
  0x00007f3eb8275336:   mov    r10d,r14d
  0x00007f3eb8275339:   add    r10d,0xe
  0x00007f3eb827533d:   movsxd rbx,ebx
  0x00007f3eb8275340:   movsxd r13,r10d
  0x00007f3eb8275343:   movsxd r10,r14d
  0x00007f3eb8275346:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f3eb827534a:   mov    r10d,r14d
  0x00007f3eb827534d:   inc    r10d
  0x00007f3eb8275350:   movsxd r10,r10d
  0x00007f3eb8275353:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f3eb8275357:   mov    r10d,r14d
  0x00007f3eb827535a:   add    r10d,0x2
  0x00007f3eb827535e:   movsxd r10,r10d
  0x00007f3eb8275361:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f3eb8275365:   mov    r10d,r14d
  0x00007f3eb8275368:   add    r10d,0x3
  0x00007f3eb827536c:   movsxd r10,r10d
  0x00007f3eb827536f:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f3eb8275373:   mov    r10d,r14d
  0x00007f3eb8275376:   add    r10d,0x4
  0x00007f3eb827537a:   movsxd r10,r10d
  0x00007f3eb827537d:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f3eb8275381:   mov    r10d,r14d
  0x00007f3eb8275384:   add    r10d,0x5
  0x00007f3eb8275388:   movsxd r10,r10d
  0x00007f3eb827538b:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f3eb827538f:   mov    r10d,r14d
  0x00007f3eb8275392:   add    r10d,0x6
  0x00007f3eb8275396:   movsxd r10,r10d
  0x00007f3eb8275399:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f3eb827539d:   mov    r10d,r14d
  0x00007f3eb82753a0:   add    r10d,0x7
  0x00007f3eb82753a4:   movsxd r10,r10d
  0x00007f3eb82753a7:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f3eb82753ab:   mov    r10d,r14d
  0x00007f3eb82753ae:   add    r10d,0x8
  0x00007f3eb82753b2:   movsxd r10,r10d
  0x00007f3eb82753b5:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f3eb82753b9:   mov    r10d,r14d
  0x00007f3eb82753bc:   add    r10d,0x9
  0x00007f3eb82753c0:   movsxd r10,r10d
  0x00007f3eb82753c3:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f3eb82753c7:   mov    r10d,r14d
  0x00007f3eb82753ca:   add    r10d,0xa
  0x00007f3eb82753ce:   movsxd r10,r10d
  0x00007f3eb82753d1:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f3eb82753d5:   mov    r10d,r14d
  0x00007f3eb82753d8:   add    r10d,0xb
  0x00007f3eb82753dc:   movsxd r10,r10d
  0x00007f3eb82753df:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f3eb82753e3:   mov    r10d,r14d
  0x00007f3eb82753e6:   add    r10d,0xc
  0x00007f3eb82753ea:   movsxd r10,r10d
  0x00007f3eb82753ed:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f3eb82753f1:   mov    r10d,r14d
  0x00007f3eb82753f4:   add    r10d,0xd
  0x00007f3eb82753f8:   movsxd r10,r10d
  0x00007f3eb82753fb:   mov    QWORD PTR [rdi+r10*1],rcx
  0x00007f3eb82753ff:   mov    QWORD PTR [rdi+r13*1],rcx
  0x00007f3eb8275403:   mov    QWORD PTR [rdi+rbx*1],rcx    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.HeapByteBuffer::putLong@24 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275407:   add    r14d,0x10                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f3eb827540b:   cmp    r14d,r9d
  0x00007f3eb827540e:   jl     0x00007f3eb8275330           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f3eb8275414:   jmp    0x00007f3eb82752f6
  0x00007f3eb8275419:   vmovq  rbx,xmm0
  0x00007f3eb827541e:   vmovq  r13,xmm1
  0x00007f3eb8275423:   cmp    r14d,0x400000
  0x00007f3eb827542a:   jge    0x00007f3eb8275450
  0x00007f3eb827542c:   test   r14d,r14d
  0x00007f3eb827542f:   jl     0x00007f3eb8275468           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275431:   mov    r9d,esi
  0x00007f3eb8275434:   sub    r9d,r14d                     ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275437:   cmp    r9d,0x8
  0x00007f3eb827543b:   jl     0x00007f3eb827548c           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb827543d:   movsxd r10,r14d
  0x00007f3eb8275440:   mov    QWORD PTR [rdi+r10*1],rcx    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.HeapByteBuffer::putLong@24 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275444:   inc    r14d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f3eb8275447:   cmp    r14d,0x400000
  0x00007f3eb827544e:   jl     0x00007f3eb827542c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f3eb8275450:   mov    esi,0xffffff45
  0x00007f3eb8275455:   mov    rbp,r13
  0x00007f3eb8275458:   mov    DWORD PTR [rsp+0x4],r14d
  0x00007f3eb827545d:   mov    QWORD PTR [rsp+0x8],rbx
  0x00007f3eb8275462:   nop
  0x00007f3eb8275463:   call   0x00007f3eb078ae80           ; ImmutableOopMap {[8]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@18 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f3eb8275468:   mov    esi,0xffffff45
  0x00007f3eb827546d:   mov    QWORD PTR [rsp+0x18],rax
  0x00007f3eb8275472:   mov    QWORD PTR [rsp+0x20],r13
  0x00007f3eb8275477:   mov    QWORD PTR [rsp+0x28],rax
  0x00007f3eb827547c:   mov    DWORD PTR [rsp+0x14],r14d
  0x00007f3eb8275481:   mov    DWORD PTR [rsp+0x38],r14d
  0x00007f3eb8275486:   nop
  0x00007f3eb8275487:   call   0x00007f3eb078ae80           ; ImmutableOopMap {rbp=NarrowOop [24]=Oop [40]=Oop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@1 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f3eb827548c:   mov    esi,0xffffff45
  0x00007f3eb8275491:   mov    QWORD PTR [rsp+0x18],rax
  0x00007f3eb8275496:   mov    QWORD PTR [rsp+0x20],r13
  0x00007f3eb827549b:   mov    QWORD PTR [rsp+0x28],rax
  0x00007f3eb82754a0:   mov    DWORD PTR [rsp+0x14],r14d
  0x00007f3eb82754a5:   mov    DWORD PTR [rsp+0x30],r9d
  0x00007f3eb82754aa:   nop
  0x00007f3eb82754ab:   call   0x00007f3eb078ae80           ; ImmutableOopMap {rbp=NarrowOop [24]=Oop [40]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f3eb82754b0:   xor    ebx,ebx
  0x00007f3eb82754b2:   mov    esi,0xffffff76
  0x00007f3eb82754b7:   mov    rbp,r13
  0x00007f3eb82754ba:   mov    DWORD PTR [rsp],r14d
  0x00007f3eb82754be:   mov    QWORD PTR [rsp+0x8],rbx
  0x00007f3eb82754c3:   call   0x00007f3eb078ae80           ; ImmutableOopMap {[8]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f3eb82754c8:   mov    esi,0xffffff8d
  0x00007f3eb82754cd:   mov    rbp,r13
  0x00007f3eb82754d0:   mov    DWORD PTR [rsp],r14d
  0x00007f3eb82754d4:   mov    QWORD PTR [rsp+0x8],rbx
  0x00007f3eb82754d9:   xchg   ax,ax
  0x00007f3eb82754db:   call   0x00007f3eb078ae80           ; ImmutableOopMap {[8]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
[Exception Handler]
  0x00007f3eb82754e0:   jmp    0x00007f3eb07eb300           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f3eb82754e5:   call   0x00007f3eb82754ea
  0x00007f3eb82754ea:   sub    QWORD PTR [rsp],0x5
  0x00007f3eb82754ef:   jmp    0x00007f3eb07cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007f3eb82754f4:   hlt    
  0x00007f3eb82754f5:   hlt    
  0x00007f3eb82754f6:   hlt    
  0x00007f3eb82754f7:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     309  502 %     4       me.serce.BufferAccessBenchmark::putLong @ 14 (37 bytes)
 total in heap  [0x00007f3eb8275890,0x00007f3eb82760c0] = 2096
 relocation     [0x00007f3eb82759f0,0x00007f3eb8275a10] = 32
 main code      [0x00007f3eb8275a20,0x00007f3eb8275d60] = 832
 stub code      [0x00007f3eb8275d60,0x00007f3eb8275d78] = 24
 oops           [0x00007f3eb8275d78,0x00007f3eb8275d88] = 16
 metadata       [0x00007f3eb8275d88,0x00007f3eb8275db8] = 48
 scopes data    [0x00007f3eb8275db8,0x00007f3eb8275ec8] = 272
 scopes pcs     [0x00007f3eb8275ec8,0x00007f3eb82760b8] = 496
 dependencies   [0x00007f3eb82760b8,0x00007f3eb82760c0] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007f3ecd023c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  0x00007f3eb8275a20:   call   0x00007f3ed01ac230           ;   {runtime_call os::breakpoint()}
  0x00007f3eb8275a25:   data16 data16 nop WORD PTR [rax+rax*1+0x0]
  0x00007f3eb8275a30:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f3eb8275a37:   push   rbp
  0x00007f3eb8275a38:   sub    rsp,0x50
  0x00007f3eb8275a3c:   mov    rbp,QWORD PTR [rsi+0x8]
  0x00007f3eb8275a40:   mov    r13,QWORD PTR [rsi+0x10]
  0x00007f3eb8275a44:   mov    ebx,DWORD PTR [rsi]
  0x00007f3eb8275a46:   mov    rdi,rsi
  0x00007f3eb8275a49:   movabs r10,0x7f3ed0295b80
  0x00007f3eb8275a53:   call   r10
  0x00007f3eb8275a56:   test   rbp,rbp
  0x00007f3eb8275a59:   je     0x00007f3eb8275cd6
  0x00007f3eb8275a5f:   mov    r10d,DWORD PTR [rbp+0x8]
  0x00007f3eb8275a63:   shl    r10,0x3
  0x00007f3eb8275a67:   movabs r12,0x800000000
  0x00007f3eb8275a71:   add    r10,r12
  0x00007f3eb8275a74:   xor    r12,r12
  0x00007f3eb8275a77:   mov    r10,QWORD PTR [r10+0x40]
  0x00007f3eb8275a7b:   movabs r11,0x800157c50              ;   {metadata('java/nio/ByteBuffer')}
  0x00007f3eb8275a85:   cmp    r10,r11
  0x00007f3eb8275a88:   jne    0x00007f3eb8275cec           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
  0x00007f3eb8275a8e:   mov    r11d,DWORD PTR [rbp+0x8]
  0x00007f3eb8275a92:   cmp    r11d,0x5d5c8                 ;   {metadata('java/nio/HeapByteBuffer')}
  0x00007f3eb8275a99:   jne    0x00007f3eb8275cd8
  0x00007f3eb8275a9f:   mov    r14,rbp                      ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275aa2:   movzx  r11d,BYTE PTR [r14+0x29]
  0x00007f3eb8275aa7:   test   r11d,r11d
  0x00007f3eb8275aaa:   je     0x00007f3eb8275cd8
  0x00007f3eb8275ab0:   mov    r11d,DWORD PTR [r14+0x2c]    ;*getfield hb {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::putLong@4 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275ab4:   test   r11d,r11d
  0x00007f3eb8275ab7:   je     0x00007f3eb8275cd8
  0x00007f3eb8275abd:   cmp    ebx,0x400000
  0x00007f3eb8275ac3:   jge    0x00007f3eb8275cc6           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f3eb8275ac9:   mov    r8,QWORD PTR [r14+0x10]
  0x00007f3eb8275acd:   mov    ecx,DWORD PTR [r14+0x1c]     ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275ad1:   mov    rdi,r13
  0x00007f3eb8275ad4:   bswap  rdi                          ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@12 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.HeapByteBuffer::putLong@24 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275ad7:   mov    r10d,ecx
  0x00007f3eb8275ada:   neg    r10d
  0x00007f3eb8275add:   mov    r9d,ebx
  0x00007f3eb8275ae0:   inc    r9d
  0x00007f3eb8275ae3:   mov    edx,r10d
  0x00007f3eb8275ae6:   sar    edx,0x1f
  0x00007f3eb8275ae9:   and    edx,r10d
  0x00007f3eb8275aec:   mov    rax,r11                      ;*getfield hb {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::putLong@4 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275aef:   mov    rsi,rax
  0x00007f3eb8275af2:   add    rsi,r8
  0x00007f3eb8275af5:   xor    r8d,r8d
  0x00007f3eb8275af8:   cmp    r9d,r8d
  0x00007f3eb8275afb:   cmovl  r9d,r8d
  0x00007f3eb8275aff:   mov    r8d,0x80000001
  0x00007f3eb8275b05:   sub    r8d,edx
  0x00007f3eb8275b08:   cmp    r9d,r8d
  0x00007f3eb8275b0b:   cmovl  r9d,r8d
  0x00007f3eb8275b0f:   mov    r8d,0x400000
  0x00007f3eb8275b15:   cmp    r9d,r8d
  0x00007f3eb8275b18:   cmovg  r9d,r8d
  0x00007f3eb8275b1c:   test   ebx,ebx
  0x00007f3eb8275b1e:   jl     0x00007f3eb8275d00           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275b24:   mov    ebp,ecx
  0x00007f3eb8275b26:   sub    ebp,ebx                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275b28:   cmp    ebp,0x8
  0x00007f3eb8275b2b:   jl     0x00007f3eb8275d28           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275b31:   movsxd rdx,ebx
  0x00007f3eb8275b34:   mov    QWORD PTR [rsi+rdx*1],rdi    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.HeapByteBuffer::putLong@24 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275b38:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f3eb8275b3a:   cmp    ebx,r9d
  0x00007f3eb8275b3d:   jl     0x00007f3eb8275b1c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f3eb8275b3f:   mov    r9d,0x80000000
  0x00007f3eb8275b45:   mov    edx,0xfffffff8
  0x00007f3eb8275b4a:   sub    edx,r10d
  0x00007f3eb8275b4d:   inc    edx
  0x00007f3eb8275b4f:   cmp    edx,r8d
  0x00007f3eb8275b52:   cmovg  edx,r8d
  0x00007f3eb8275b56:   mov    r8d,edx
  0x00007f3eb8275b59:   add    r8d,0xfffffff1
  0x00007f3eb8275b5d:   cmp    edx,r8d
  0x00007f3eb8275b60:   cmovl  r8d,r9d
  0x00007f3eb8275b64:   cmp    ebx,r8d
  0x00007f3eb8275b67:   jge    0x00007f3eb8275ca0
  0x00007f3eb8275b6d:   mov    ebp,0x3e80                   ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f3eb8275b72:   jmp    0x00007f3eb8275b7e
  0x00007f3eb8275b74:   vmovd  r11d,xmm0
  0x00007f3eb8275b79:   vmovq  r13,xmm1
  0x00007f3eb8275b7e:   mov    edx,r8d
  0x00007f3eb8275b81:   sub    edx,ebx
  0x00007f3eb8275b83:   cmp    edx,ebp
  0x00007f3eb8275b85:   cmovg  edx,ebp
  0x00007f3eb8275b88:   add    edx,ebx
  0x00007f3eb8275b8a:   vmovd  xmm0,r11d
  0x00007f3eb8275b8f:   vmovq  xmm1,r13
  0x00007f3eb8275b94:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f3eb8275b9c:   data16 data16 xchg ax,ax            ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275ba0:   mov    r9d,ebx
  0x00007f3eb8275ba3:   add    r9d,0xf
  0x00007f3eb8275ba7:   mov    r10d,ebx
  0x00007f3eb8275baa:   add    r10d,0xe
  0x00007f3eb8275bae:   movsxd r13,r9d
  0x00007f3eb8275bb1:   movsxd r11,r10d
  0x00007f3eb8275bb4:   movsxd r10,ebx
  0x00007f3eb8275bb7:   mov    QWORD PTR [rsi+r10*1],rdi
  0x00007f3eb8275bbb:   mov    r10d,ebx
  0x00007f3eb8275bbe:   inc    r10d
  0x00007f3eb8275bc1:   mov    r9d,ebx
  0x00007f3eb8275bc4:   add    r9d,0x2
  0x00007f3eb8275bc8:   movsxd r10,r10d
  0x00007f3eb8275bcb:   mov    QWORD PTR [rsi+r10*1],rdi
  0x00007f3eb8275bcf:   movsxd r10,r9d
  0x00007f3eb8275bd2:   mov    QWORD PTR [rsi+r10*1],rdi
  0x00007f3eb8275bd6:   mov    r9d,ebx
  0x00007f3eb8275bd9:   add    r9d,0x3
  0x00007f3eb8275bdd:   mov    r10d,ebx
  0x00007f3eb8275be0:   add    r10d,0x4
  0x00007f3eb8275be4:   movsxd r9,r9d
  0x00007f3eb8275be7:   mov    QWORD PTR [rsi+r9*1],rdi
  0x00007f3eb8275beb:   movsxd r10,r10d
  0x00007f3eb8275bee:   mov    QWORD PTR [rsi+r10*1],rdi
  0x00007f3eb8275bf2:   mov    r9d,ebx
  0x00007f3eb8275bf5:   add    r9d,0x5
  0x00007f3eb8275bf9:   mov    r10d,ebx
  0x00007f3eb8275bfc:   add    r10d,0x6
  0x00007f3eb8275c00:   movsxd r9,r9d
  0x00007f3eb8275c03:   mov    QWORD PTR [rsi+r9*1],rdi
  0x00007f3eb8275c07:   movsxd r10,r10d
  0x00007f3eb8275c0a:   mov    QWORD PTR [rsi+r10*1],rdi
  0x00007f3eb8275c0e:   mov    r9d,ebx
  0x00007f3eb8275c11:   add    r9d,0x7
  0x00007f3eb8275c15:   mov    r10d,ebx
  0x00007f3eb8275c18:   add    r10d,0x8
  0x00007f3eb8275c1c:   movsxd r9,r9d
  0x00007f3eb8275c1f:   mov    QWORD PTR [rsi+r9*1],rdi
  0x00007f3eb8275c23:   movsxd r10,r10d
  0x00007f3eb8275c26:   mov    QWORD PTR [rsi+r10*1],rdi
  0x00007f3eb8275c2a:   mov    r9d,ebx
  0x00007f3eb8275c2d:   add    r9d,0x9
  0x00007f3eb8275c31:   mov    r10d,ebx
  0x00007f3eb8275c34:   add    r10d,0xa
  0x00007f3eb8275c38:   movsxd r9,r9d
  0x00007f3eb8275c3b:   mov    QWORD PTR [rsi+r9*1],rdi
  0x00007f3eb8275c3f:   movsxd r10,r10d
  0x00007f3eb8275c42:   mov    QWORD PTR [rsi+r10*1],rdi
  0x00007f3eb8275c46:   mov    r9d,ebx
  0x00007f3eb8275c49:   add    r9d,0xb
  0x00007f3eb8275c4d:   mov    r10d,ebx
  0x00007f3eb8275c50:   add    r10d,0xc
  0x00007f3eb8275c54:   movsxd r9,r9d
  0x00007f3eb8275c57:   mov    QWORD PTR [rsi+r9*1],rdi
  0x00007f3eb8275c5b:   movsxd r10,r10d
  0x00007f3eb8275c5e:   mov    QWORD PTR [rsi+r10*1],rdi
  0x00007f3eb8275c62:   mov    r10d,ebx
  0x00007f3eb8275c65:   add    r10d,0xd
  0x00007f3eb8275c69:   movsxd r10,r10d
  0x00007f3eb8275c6c:   mov    QWORD PTR [rsi+r10*1],rdi
  0x00007f3eb8275c70:   mov    QWORD PTR [rsi+r11*1],rdi
  0x00007f3eb8275c74:   mov    QWORD PTR [rsi+r13*1],rdi    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.HeapByteBuffer::putLong@24 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275c78:   add    ebx,0x10                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f3eb8275c7b:   cmp    ebx,edx
  0x00007f3eb8275c7d:   jl     0x00007f3eb8275ba0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f3eb8275c83:   mov    r10,QWORD PTR [r15+0x108]    ; ImmutableOopMap {rsi=Derived_oop_rax rax=Oop r14=Oop xmm0=NarrowOop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f3eb8275c8a:   test   DWORD PTR [r10],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {poll}
  0x00007f3eb8275c8d:   cmp    ebx,r8d
  0x00007f3eb8275c90:   jl     0x00007f3eb8275b74
  0x00007f3eb8275c96:   vmovd  r11d,xmm0
  0x00007f3eb8275c9b:   vmovq  r13,xmm1
  0x00007f3eb8275ca0:   cmp    ebx,0x400000
  0x00007f3eb8275ca6:   jge    0x00007f3eb8275cc6
  0x00007f3eb8275ca8:   test   ebx,ebx
  0x00007f3eb8275caa:   jl     0x00007f3eb8275d00           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@1 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275cac:   mov    ebp,ecx
  0x00007f3eb8275cae:   sub    ebp,ebx                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275cb0:   cmp    ebp,0x8
  0x00007f3eb8275cb3:   jl     0x00007f3eb8275d28           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275cb5:   movsxd r10,ebx
  0x00007f3eb8275cb8:   mov    QWORD PTR [rsi+r10*1],rdi    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.HeapByteBuffer::putLong@24 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8275cbc:   inc    ebx                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f3eb8275cbe:   cmp    ebx,0x400000
  0x00007f3eb8275cc4:   jl     0x00007f3eb8275ca8
  0x00007f3eb8275cc6:   add    rsp,0x50
  0x00007f3eb8275cca:   pop    rbp
  0x00007f3eb8275ccb:   mov    r10,QWORD PTR [r15+0x108]
  0x00007f3eb8275cd2:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f3eb8275cd5:   ret    
  0x00007f3eb8275cd6:   xor    ebp,ebp
  0x00007f3eb8275cd8:   mov    esi,0xffffffbe
  0x00007f3eb8275cdd:   mov    QWORD PTR [rsp],r13
  0x00007f3eb8275ce1:   mov    DWORD PTR [rsp+0x8],ebx
  0x00007f3eb8275ce5:   xchg   ax,ax
  0x00007f3eb8275ce7:   call   0x00007f3eb078ae80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f3eb8275cec:   mov    esi,0xffffff8d
  0x00007f3eb8275cf1:   mov    QWORD PTR [rsp],r13
  0x00007f3eb8275cf5:   mov    DWORD PTR [rsp+0x8],ebx
  0x00007f3eb8275cf9:   xchg   ax,ax
  0x00007f3eb8275cfb:   call   0x00007f3eb078ae80           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@14 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f3eb8275d00:   mov    esi,0xffffff45
  0x00007f3eb8275d05:   mov    QWORD PTR [rsp+0x10],r14
  0x00007f3eb8275d0a:   mov    QWORD PTR [rsp+0x18],r13
  0x00007f3eb8275d0f:   mov    QWORD PTR [rsp+0x20],r14
  0x00007f3eb8275d14:   mov    DWORD PTR [rsp+0xc],ebx
  0x00007f3eb8275d18:   mov    DWORD PTR [rsp+0x30],ebx
  0x00007f3eb8275d1c:   mov    DWORD PTR [rsp+0x34],r11d
  0x00007f3eb8275d21:   xchg   ax,ax
  0x00007f3eb8275d23:   call   0x00007f3eb078ae80           ; ImmutableOopMap {[16]=Oop [32]=Oop [52]=NarrowOop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@1 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f3eb8275d28:   mov    esi,0xffffff45
  0x00007f3eb8275d2d:   mov    QWORD PTR [rsp+0x18],r14
  0x00007f3eb8275d32:   mov    QWORD PTR [rsp+0x20],r13
  0x00007f3eb8275d37:   mov    QWORD PTR [rsp+0x28],r14
  0x00007f3eb8275d3c:   mov    DWORD PTR [rsp+0x14],ebx
  0x00007f3eb8275d40:   mov    DWORD PTR [rsp+0x30],r11d
  0x00007f3eb8275d45:   xchg   ax,ax
  0x00007f3eb8275d47:   call   0x00007f3eb078ae80           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=NarrowOop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f3eb8275d4c:   hlt    
  0x00007f3eb8275d4d:   hlt    
  0x00007f3eb8275d4e:   hlt    
  0x00007f3eb8275d4f:   hlt    
  0x00007f3eb8275d50:   hlt    
  0x00007f3eb8275d51:   hlt    
  0x00007f3eb8275d52:   hlt    
  0x00007f3eb8275d53:   hlt    
  0x00007f3eb8275d54:   hlt    
  0x00007f3eb8275d55:   hlt    
  0x00007f3eb8275d56:   hlt    
  0x00007f3eb8275d57:   hlt    
  0x00007f3eb8275d58:   hlt    
  0x00007f3eb8275d59:   hlt    
  0x00007f3eb8275d5a:   hlt    
  0x00007f3eb8275d5b:   hlt    
  0x00007f3eb8275d5c:   hlt    
  0x00007f3eb8275d5d:   hlt    
  0x00007f3eb8275d5e:   hlt    
  0x00007f3eb8275d5f:   hlt    
[Exception Handler]
  0x00007f3eb8275d60:   jmp    0x00007f3eb07eb300           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f3eb8275d65:   call   0x00007f3eb8275d6a
  0x00007f3eb8275d6a:   sub    QWORD PTR [rsp],0x5
  0x00007f3eb8275d6f:   jmp    0x00007f3eb07cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007f3eb8275d74:   hlt    
  0x00007f3eb8275d75:   hlt    
  0x00007f3eb8275d76:   hlt    
  0x00007f3eb8275d77:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     330  503       4       me.serce.BufferAccessBenchmark::putLong (37 bytes)
 total in heap  [0x00007f3eb8276110,0x00007f3eb82767f8] = 1768
 relocation     [0x00007f3eb8276270,0x00007f3eb8276288] = 24
 main code      [0x00007f3eb82762a0,0x00007f3eb82764a0] = 512
 stub code      [0x00007f3eb82764a0,0x00007f3eb82764b8] = 24
 oops           [0x00007f3eb82764b8,0x00007f3eb82764c8] = 16
 metadata       [0x00007f3eb82764c8,0x00007f3eb82764f8] = 48
 scopes data    [0x00007f3eb82764f8,0x00007f3eb82765e0] = 232
 scopes pcs     [0x00007f3eb82765e0,0x00007f3eb82767e0] = 512
 dependencies   [0x00007f3eb82767e0,0x00007f3eb82767e8] = 8
 nul chk table  [0x00007f3eb82767e8,0x00007f3eb82767f8] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007f3ecd023c98} 'putLong' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'me/serce/BufferAccessBenchmark'
  # this:     rsi:rsi   = 'me/serce/BufferAccessBenchmark'
  # parm0:    rdx:rdx   = 'org/openjdk/jmh/infra/Blackhole'
  #           [sp+0x60]  (sp of caller)
  0x00007f3eb82762a0:   mov    r10d,DWORD PTR [rsi+0x8]
  0x00007f3eb82762a4:   shl    r10,0x3
  0x00007f3eb82762a8:   movabs r12,0x800000000
  0x00007f3eb82762b2:   add    r10,r12
  0x00007f3eb82762b5:   xor    r12,r12
  0x00007f3eb82762b8:   cmp    rax,r10
  0x00007f3eb82762bb:   jne    0x00007f3eb07cd580           ;   {runtime_call ic_miss_stub}
  0x00007f3eb82762c1:   data16 xchg ax,ax
  0x00007f3eb82762c4:   nop    DWORD PTR [rax+rax*1+0x0]
  0x00007f3eb82762cc:   data16 data16 xchg ax,ax
[Verified Entry Point]
  0x00007f3eb82762d0:   mov    DWORD PTR [rsp-0x14000],eax
  0x00007f3eb82762d7:   push   rbp
  0x00007f3eb82762d8:   sub    rsp,0x50                     ;*synchronization entry
                                                            ; - me.serce.BufferAccessBenchmark::putLong@-1 (line 64)
  0x00007f3eb82762dc:   mov    r13,QWORD PTR [rsi+0x10]     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@1 (line 64)
  0x00007f3eb82762e0:   mov    r8d,DWORD PTR [rsi+0x18]     ;*getfield buffer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@6 (line 65)
  0x00007f3eb82762e4:   mov    r10d,DWORD PTR [r8+0x8]      ; implicit exception: dispatches to 0x00007f3eb827645a
  0x00007f3eb82762e8:   cmp    r10d,0x5d5c8                 ;   {metadata('java/nio/HeapByteBuffer')}
  0x00007f3eb82762ef:   jne    0x00007f3eb827645a
  0x00007f3eb82762f5:   mov    rax,r8                       ;*invokevirtual putLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb82762f8:   movzx  r11d,BYTE PTR [rax+0x29]
  0x00007f3eb82762fd:   test   r11d,r11d
  0x00007f3eb8276300:   je     0x00007f3eb827645a
  0x00007f3eb8276306:   mov    ebp,DWORD PTR [rax+0x2c]     ;*getfield hb {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::putLong@4 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8276309:   test   ebp,ebp
  0x00007f3eb827630b:   je     0x00007f3eb827645a
  0x00007f3eb8276311:   mov    r11,QWORD PTR [rax+0x10]
  0x00007f3eb8276315:   mov    r10d,DWORD PTR [rax+0x1c]    ;*getfield limit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@6 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8276319:   mov    rdi,r13
  0x00007f3eb827631c:   bswap  rdi                          ;*invokestatic reverseBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::convEndian@12 (line 3698)
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@7 (line 3555)
                                                            ; - java.nio.HeapByteBuffer::putLong@24 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb827631f:   mov    r8d,r10d
  0x00007f3eb8276322:   neg    r8d
  0x00007f3eb8276325:   mov    rdx,rbp                      ;*getfield hb {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::putLong@4 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8276328:   mov    rsi,rdx
  0x00007f3eb827632b:   add    rsi,r11
  0x00007f3eb827632e:   mov    r11d,r8d
  0x00007f3eb8276331:   sar    r11d,0x1f
  0x00007f3eb8276335:   and    r11d,r8d
  0x00007f3eb8276338:   mov    ebx,0x80000001
  0x00007f3eb827633d:   sub    ebx,r11d
  0x00007f3eb8276340:   mov    r11d,0x400000
  0x00007f3eb8276346:   mov    r9d,0x1
  0x00007f3eb827634c:   cmp    ebx,r9d
  0x00007f3eb827634f:   cmovl  ebx,r9d
  0x00007f3eb8276353:   cmp    ebx,r11d
  0x00007f3eb8276356:   cmovg  ebx,r11d
  0x00007f3eb827635a:   xor    r9d,r9d                      ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 67)
  0x00007f3eb827635d:   mov    ecx,r10d
  0x00007f3eb8276360:   sub    ecx,r9d                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8276363:   cmp    ecx,0x8
  0x00007f3eb8276366:   jl     0x00007f3eb827646c           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb827636c:   movsxd rcx,r9d
  0x00007f3eb827636f:   mov    QWORD PTR [rsi+rcx*1],rdi    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.HeapByteBuffer::putLong@24 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8276373:   inc    r9d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f3eb8276376:   cmp    r9d,ebx
  0x00007f3eb8276379:   jl     0x00007f3eb827635d           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f3eb827637b:   mov    ebx,0x80000000
  0x00007f3eb8276380:   mov    ecx,0xfffffff8
  0x00007f3eb8276385:   sub    ecx,r8d
  0x00007f3eb8276388:   inc    ecx
  0x00007f3eb827638a:   cmp    ecx,r11d
  0x00007f3eb827638d:   cmovg  ecx,r11d
  0x00007f3eb8276391:   mov    r8d,ecx
  0x00007f3eb8276394:   add    r8d,0xfffffff1
  0x00007f3eb8276398:   cmp    ecx,r8d
  0x00007f3eb827639b:   cmovl  r8d,ebx
  0x00007f3eb827639f:   cmp    r9d,r8d
  0x00007f3eb82763a2:   jge    0x00007f3eb8276420           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f3eb82763a8:   mov    ebx,0x3e80
  0x00007f3eb82763ad:   mov    r11d,r8d
  0x00007f3eb82763b0:   sub    r11d,r9d
  0x00007f3eb82763b3:   cmp    r11d,ebx
  0x00007f3eb82763b6:   cmovg  r11d,ebx
  0x00007f3eb82763ba:   add    r11d,r9d
  0x00007f3eb82763bd:   data16 xchg ax,ax                   ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 67)
  0x00007f3eb82763c0:   movsxd rcx,r9d                      ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::putLong@15 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb82763c3:   mov    r14,rsi
  0x00007f3eb82763c6:   add    r14,rcx
  0x00007f3eb82763c9:   mov    QWORD PTR [r14],rdi
  0x00007f3eb82763cc:   mov    QWORD PTR [r14+0x1],rdi
  0x00007f3eb82763d0:   mov    QWORD PTR [r14+0x2],rdi
  0x00007f3eb82763d4:   mov    QWORD PTR [r14+0x3],rdi
  0x00007f3eb82763d8:   mov    QWORD PTR [r14+0x4],rdi
  0x00007f3eb82763dc:   mov    QWORD PTR [r14+0x5],rdi
  0x00007f3eb82763e0:   mov    QWORD PTR [r14+0x6],rdi
  0x00007f3eb82763e4:   mov    QWORD PTR [r14+0x7],rdi
  0x00007f3eb82763e8:   mov    QWORD PTR [r14+0x8],rdi
  0x00007f3eb82763ec:   mov    QWORD PTR [r14+0x9],rdi
  0x00007f3eb82763f0:   mov    QWORD PTR [r14+0xa],rdi
  0x00007f3eb82763f4:   mov    QWORD PTR [r14+0xb],rdi
  0x00007f3eb82763f8:   mov    QWORD PTR [r14+0xc],rdi
  0x00007f3eb82763fc:   mov    QWORD PTR [r14+0xd],rdi
  0x00007f3eb8276400:   mov    QWORD PTR [r14+0xe],rdi
  0x00007f3eb8276404:   mov    QWORD PTR [r14+0xf],rdi      ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.HeapByteBuffer::putLong@24 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8276408:   add    r9d,0x10                     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f3eb827640c:   cmp    r9d,r11d
  0x00007f3eb827640f:   jl     0x00007f3eb82763c0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f3eb8276411:   mov    r11,QWORD PTR [r15+0x108]    ; ImmutableOopMap {rdx=Oop rsi=Derived_oop_rdx rax=Oop rbp=NarrowOop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@33 (line 66)
  0x00007f3eb8276418:   test   DWORD PTR [r11],eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@33 (line 66)
                                                            ;   {poll}
  0x00007f3eb827641b:   cmp    r9d,r8d
  0x00007f3eb827641e:   jl     0x00007f3eb82763ad
  0x00007f3eb8276420:   cmp    r9d,0x400000
  0x00007f3eb8276427:   jge    0x00007f3eb827644a
  0x00007f3eb8276429:   data16 xchg ax,ax                   ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@21 (line 67)
  0x00007f3eb827642c:   mov    ecx,r10d
  0x00007f3eb827642f:   sub    ecx,r9d                      ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@10 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8276432:   cmp    ecx,0x8
  0x00007f3eb8276435:   jl     0x00007f3eb827646c           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb8276437:   movsxd r11,r9d
  0x00007f3eb827643a:   mov    QWORD PTR [rsi+r11*1],rdi    ;*invokevirtual putLongUnaligned {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.misc.Unsafe::putLongUnaligned@10 (line 3555)
                                                            ; - java.nio.HeapByteBuffer::putLong@24 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
  0x00007f3eb827643e:   inc    r9d                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@30 (line 66)
  0x00007f3eb8276441:   cmp    r9d,0x400000
  0x00007f3eb8276448:   jl     0x00007f3eb827642c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - me.serce.BufferAccessBenchmark::putLong@18 (line 66)
  0x00007f3eb827644a:   add    rsp,0x50
  0x00007f3eb827644e:   pop    rbp
  0x00007f3eb827644f:   mov    r10,QWORD PTR [r15+0x108]
  0x00007f3eb8276456:   test   DWORD PTR [r10],eax          ;   {poll_return}
  0x00007f3eb8276459:   ret    
  0x00007f3eb827645a:   mov    esi,0xffffff76
  0x00007f3eb827645f:   mov    rbp,r13
  0x00007f3eb8276462:   mov    DWORD PTR [rsp],r8d
  0x00007f3eb8276466:   nop
  0x00007f3eb8276467:   call   0x00007f3eb078ae80           ; ImmutableOopMap {[0]=NarrowOop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) me.serce.BufferAccessBenchmark::putLong@18 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f3eb827646c:   mov    esi,0xffffff45
  0x00007f3eb8276471:   mov    QWORD PTR [rsp+0x18],rax
  0x00007f3eb8276476:   mov    QWORD PTR [rsp+0x20],r13
  0x00007f3eb827647b:   mov    QWORD PTR [rsp+0x28],rax
  0x00007f3eb8276480:   mov    DWORD PTR [rsp+0x14],r9d
  0x00007f3eb8276485:   mov    DWORD PTR [rsp+0x30],ecx
  0x00007f3eb8276489:   xchg   ax,ax
  0x00007f3eb827648b:   call   0x00007f3eb078ae80           ; ImmutableOopMap {rbp=NarrowOop [24]=Oop [40]=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.nio.Buffer::checkIndex@11 (line 725)
                                                            ; - java.nio.HeapByteBuffer::putLong@12 (line 508)
                                                            ; - me.serce.BufferAccessBenchmark::putLong@26 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00007f3eb8276490:   hlt    
  0x00007f3eb8276491:   hlt    
  0x00007f3eb8276492:   hlt    
  0x00007f3eb8276493:   hlt    
  0x00007f3eb8276494:   hlt    
  0x00007f3eb8276495:   hlt    
  0x00007f3eb8276496:   hlt    
  0x00007f3eb8276497:   hlt    
  0x00007f3eb8276498:   hlt    
  0x00007f3eb8276499:   hlt    
  0x00007f3eb827649a:   hlt    
  0x00007f3eb827649b:   hlt    
  0x00007f3eb827649c:   hlt    
  0x00007f3eb827649d:   hlt    
  0x00007f3eb827649e:   hlt    
  0x00007f3eb827649f:   hlt    
[Exception Handler]
  0x00007f3eb82764a0:   jmp    0x00007f3eb07eb300           ;   {no_reloc}
[Deopt Handler Code]
  0x00007f3eb82764a5:   call   0x00007f3eb82764aa
  0x00007f3eb82764aa:   sub    QWORD PTR [rsp],0x5
  0x00007f3eb82764af:   jmp    0x00007f3eb07cac20           ;   {runtime_call DeoptimizationBlob}
  0x00007f3eb82764b4:   hlt    
  0x00007f3eb82764b5:   hlt    
  0x00007f3eb82764b6:   hlt    
  0x00007f3eb82764b7:   hlt    
--------------------------------------------------------------------------------
2036435.936 ns/op
Iteration   1: 2026443.155 ns/op
Iteration   2: 2052291.812 ns/op
Iteration   3: 2031194.920 ns/op


Result "me.serce.BufferAccessBenchmark.putLong":
  2036643.296 ±(99.9%) 251009.934 ns/op [Average]
  (min, avg, max) = (2026443.155, 2036643.296, 2052291.812), stdev = 13758.701
  CI (99.9%): [1785633.362, 2287653.230] (assumes normal distribution)


# Run complete. Total time: 00:02:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                       (bufferType)  Mode  Cnt        Score        Error  Units
BufferAccessBenchmark.putLong         direct  avgt    3  4178532.997 ± 137548.391  ns/op
BufferAccessBenchmark.putLong  direct-native  avgt    3  4832550.076 ±   5367.256  ns/op
BufferAccessBenchmark.putLong           heap  avgt    3  2036643.296 ± 251009.934  ns/op
